webpackJsonp([20],{1357:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=n(0),r=n.n(s),l=n(691),h=n(750),p=n.n(h),c=n(592),d=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),u=function(e){function t(){var e,n,o,s;i(this,t);for(var r=arguments.length,l=Array(r),h=0;h<r;h++)l[h]=arguments[h];return n=o=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(l))),o.state={},o.tick=function(){var e;return(e=o).__tick__REACT_HOT_LOADER__.apply(e,arguments)},s=n,a(o,s)}return o(t,e),d(t,[{key:"componentWillMount",value:function(){var e=this;p()("GET","assets/api/graphs/flot.json",{json:!0}).done(function(t){e.setState(JSON.parse(t.getBody()))})}},{key:"__tick__REACT_HOT_LOADER__",value:function(){this.setState({updatingData:[S.getRandomData()]})}},{key:"componentDidMount",value:function(){this.interval=setInterval(this.tick,1e3)}},{key:"componentWillUnmount",value:function(){clearInterval(this.interval)}},{key:"render",value:function(){return r.a.createElement("div",{id:"content"},r.a.createElement("div",{className:"row"},r.a.createElement(c.a,{items:["Flot Charts"],icon:"fa fa-fw fa-bar-chart-o",className:"col-xs-12 col-sm-7 col-md-7 col-lg-4"}),r.a.createElement(c.d,null)),r.a.createElement(c.c,null,r.a.createElement("div",{className:"row"},r.a.createElement("article",{className:"col-sm-12 col-md-12 col-lg-12"},r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Bar Chart")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement("flot-bar-chart",{data:"barChartData"}),r.a.createElement(l.a,{data:this.state.barChartData,options:m})))),r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Sin Chart")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement(l.a,{data:this.state.sinChartData,options:v}))))),r.a.createElement("article",{className:"col-xs-12 col-sm-6 col-md-6 col-lg-6"},r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Auto Updating Chart")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement(l.a,{data:this.state.updatingData,options:C}))))),r.a.createElement("article",{className:"col-xs-12 col-sm-6 col-md-6 col-lg-6"},r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Horizontal Bar Chart")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement(l.a,{data:this.state.horizontalBarChartData,options:b}))))),r.a.createElement("article",{className:"col-sm-12 col-md-12 col-lg-12"},r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Sales Chart")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement(l.a,{data:this.state.salesChartData,options:x}))))),r.a.createElement("article",{className:"col-xs-12 col-sm-8 col-md-7 col-lg-7"},r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Plot Percentiles")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement(l.a,{data:this.state.fillChartData,options:y}))))),r.a.createElement("article",{className:"col-xs-12 col-sm-4 col-md-5 col-lg-5"},r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Pie Chart")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement(l.a,{data:this.state.pieChartData,options:w}))))),r.a.createElement("article",{className:"col-xs-12"},r.a.createElement(c.b,{editbutton:!1},r.a.createElement("header",null,r.a.createElement("span",{className:"widget-icon"}," ",r.a.createElement("i",{className:"fa fa-bar-chart-o"})," "),r.a.createElement("h2",null,"Site Stats Chart")),r.a.createElement("div",null,r.a.createElement("div",{className:"widget-body no-padding"},r.a.createElement(l.a,{data:this.state.siteStatsData,options:k}))))))))}}]),t}(r.a.Component),g=u;t.default=g;var f={chartBorderColor:"#efefef",chartGridColor:"#DDD",charMain:"#E24913",chartSecond:"#6595b4",chartThird:"#FF9F01",chartFourth:"#7e9d3a",chartFifth:"#BD362F",chartMono:"#000"},m={colors:[f.chartSecond,f.chartFourth,"#666","#BBB"],grid:{show:!0,hoverable:!0,clickable:!0,tickColor:f.chartBorderColor,borderWidth:0,borderColor:f.chartBorderColor},legend:!0,tooltip:!0,tooltipOpts:{content:"<b>%x</b> = <span>%y</span>",defaultTheme:!1}},v={series:{lines:{show:!0},points:{show:!0}},grid:{hoverable:!0,clickable:!0,tickColor:f.chartBorderColor,borderWidth:0,borderColor:f.chartBorderColor},tooltip:!0,tooltipOpts:{defaultTheme:!1},colors:[f.chartSecond,f.chartFourth],yaxis:{min:-1.1,max:1.1},xaxis:{min:0,max:15}},b={colors:[f.chartSecond,f.chartFourth,"#666","#BBB"],grid:{show:!0,hoverable:!0,clickable:!0,tickColor:f.chartBorderColor,borderWidth:0,borderColor:f.chartBorderColor},legend:!0,tooltip:!0,tooltipOpts:{content:"<b>%x</b> = <span>%y</span>",defaultTheme:!1}},x={xaxis:{mode:"time",tickLength:5},series:{lines:{show:!0,lineWidth:1,fill:!0,fillColor:{colors:[{opacity:.1},{opacity:.15}]}},shadowSize:0},selection:{mode:"x"},grid:{hoverable:!0,clickable:!0,tickColor:f.chartBorderColor,borderWidth:0,borderColor:f.chartBorderColor},tooltip:!0,tooltipOpts:{content:"Your sales for <b>%x</b> was <span>$%y</span>",dateFormat:"%y-%0m-%0d",defaultTheme:!1},colors:[f.chartSecond]},y={xaxis:{tickDecimals:0},yaxis:{tickFormatter:function(e){return e+" cm"}}},w={series:{pie:{show:!0,innerRadius:.5,radius:1,label:{show:!1,radius:2/3,formatter:function(e,t){return'<div style="font-size:11px;text-align:center;padding:4px;color:white;">'+e+"<br/>"+Math.round(t.percent)+"%</div>"},threshold:.1}}},legend:{show:!0,noColumns:1,labelFormatter:null,labelBoxBorderColor:"#000",container:null,position:"ne",margin:[5,10],backgroundColor:"#efefef",backgroundOpacity:1},grid:{hoverable:!0,clickable:!0}},k={series:{lines:{show:!0,lineWidth:1,fill:!0,fillColor:{colors:[{opacity:.1},{opacity:.15}]}},points:{show:!0},shadowSize:0},yaxes:[{min:20,tickLength:5}],grid:{hoverable:!0,clickable:!0,tickColor:f.chartBorderColor,borderWidth:0,borderColor:f.chartBorderColor},tooltip:!0,tooltipOpts:{content:"%s for <b>%x:00 hrs</b> was %y",dateFormat:"%y-%0m-%0d",defaultTheme:!1},colors:[f.charMain,f.chartSecond],xaxis:{mode:"time",tickLength:10,ticks:15,tickDecimals:2},yaxis:{ticks:15,tickDecimals:0}},C={yaxis:{min:0,max:100},xaxis:{min:0,max:100},colors:[f.chartFourth],series:{lines:{lineWidth:1,fill:!0,fillColor:{colors:[{opacity:.4},{opacity:0}]},steps:!1}}},S={data:[],total:200,getRandomData:function(){for(this.data.length>0&&(this.data=this.data.slice(1));this.data.length<this.total;){var e=this.data.length>0?this.data[this.data.length-1]:50,t=e+10*Math.random()-5;t<0&&(t=0),t>100&&(t=100),this.data.push(t)}for(var n=[],i=0;i<this.data.length;++i)n.push([i,this.data[i]]);return n}};!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"FlotCharts","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(f,"colors","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(m,"barChartDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(v,"sinChartDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(b,"horizontalChartDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(x,"salesChartDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(y,"fillChartDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(w,"pieChartDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(k,"siteStatsDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(C,"autoUpdatingChartDemoOptions","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(S,"FakeDataSource","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"),__REACT_HOT_LOADER__.register(g,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/routes/graphs/containers/FlotCharts.js"))}()},581:function(e,t){e.exports=function(e){"undefined"!=typeof execScript?execScript(e):eval.call(null,e)}},583:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=n(0),r=n.n(s),l=n(6),h=n.n(l),p=n(17),c=(n.n(p),Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}),d=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),u=function(e){function t(e){return i(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return o(t,e),d(t,[{key:"componentWillMount",value:function(){}},{key:"genId",value:function(){if(this.props.name)return this.props.name;var e="jarviswidget-"+t.counter++;return e=e.toLowerCase().replace(/\W+/gm,"-"),e=location.pathname.substr(1).replace(/\//g,"-")+"--"+e}},{key:"render",value:function(){var e=this,t=this.props.color?"jarviswidget-color-"+this.props.color:"",n=h()("jarviswidget",t,{"jarviswidget-sortable":1==this.props.sortable}),i={};return this.widgetId=this.genId(),["colorbutton","editbutton","togglebutton","deletebutton","fullscreenbutton","custombutton","sortable"].forEach(function(t){e.props[t]||(i["data-widget-"+t]=!1)}),["hidden","collapsed"].forEach(function(t){e.props[t]&&(i["data-widget-"+t]=!0)}),["refresh","load"].forEach(function(t){e.props[t]&&(i["data-widget-"+t]=e.props[t])}),r.a.createElement("div",c({className:n,id:this.widgetId,ref:"widget"},i),this.props.children)}},{key:"componentDidMount",value:function(){$(this.refs[this.widgetId]).find(".widget-body").prepend("")}}]),t}(r.a.Component);u.counter=0,u.defaultProps={colorbutton:!0,editbutton:!0,togglebutton:!0,deletebutton:!0,fullscreenbutton:!0,custombutton:!1,collapsed:!1,sortable:!0,hidden:!1,color:!1,load:!1,refresh:!1};var g=u;t.a=g;var f=function(e){function t(){return i(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),d(t,[{key:"render",value:function(){var e=c({},this.props),t=e.children,n=e.props;return r.a.createElement("div",n,this.props.editbutton?r.a.createElement("div",{className:"jarviswidget-editbox"},r.a.createElement("input",{className:"form-control",type:"text"})):null,r.a.createElement("div",{className:"widget-body"},t))}}]),t}(r.a.Component);u.Body=f;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(u,"JarvisWidget","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/widgets/JarvisWidget.js"),__REACT_HOT_LOADER__.register(f,"Body","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/widgets/JarvisWidget.js"),__REACT_HOT_LOADER__.register(g,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/widgets/JarvisWidget.js"))}()},584:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}n.d(t,"a",function(){return u});var s=n(590),r=(n.n(s),n(0)),l=n.n(r),h=n(17),p=(n.n(h),function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}()),c=function(e){function t(){return i(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),p(t,[{key:"barChart",value:function(e){var t=e.data("sparkline-bar-color")||e.css("color")||"#0000f0",n=e.data("sparkline-height")||"26px",i=e.data("sparkline-barwidth")||5,a=e.data("sparkline-barspacing")||2,o=e.data("sparkline-negbar-color")||"#A90329",s=e.data("sparkline-barstacked-color")||["#A90329","#0099c6","#98AA56","#da532c","#4490B1","#6E9461","#990099","#B4CAD3"];e.sparkline(this.props.values||"html",{barColor:t,type:"bar",height:n,barWidth:i,barSpacing:a,stackedBarColor:s,negBarColor:o,zeroAxis:"false",tooltipContainer:this.container})}},{key:"lineChart",value:function(e){var t=e.data("sparkline-height")||"20px",n=e.data("sparkline-width")||"90px",i=e.data("sparkline-line-color")||e.css("color")||"#0000f0",a=e.data("sparkline-line-width")||1,o=e.data("fill-color")||"#c0d0f0",s=e.data("sparkline-spot-color")||"#f08000",r=e.data("sparkline-minspot-color")||"#ed1c24",l=e.data("sparkline-maxspot-color")||"#f08000",h=e.data("sparkline-highlightspot-color")||"#50f050",p=e.data("sparkline-highlightline-color")||"f02020",c=e.data("sparkline-spotradius")||1.5,d=e.data("sparkline-min-y"),u=e.data("sparkline-max-y"),g=e.data("sparkline-min-x"),f=e.data("sparkline-max-x"),m=e.data("min-val"),v=e.data("max-val"),b=e.data("norm-color")||"#c0c0c0",x=e.data("draw-normal")||!1;e.sparkline(this.props.values||"html",{type:"line",width:n,height:t,lineWidth:a,lineColor:i,fillColor:o,spotColor:s,minSpotColor:r,maxSpotColor:l,highlightSpotColor:h,highlightLineColor:p,spotRadius:c,chartRangeMin:d,chartRangeMax:u,chartRangeMinX:g,chartRangeMaxX:f,normalRangeMin:m,normalRangeMax:v,normalRangeColor:b,drawNormalOnTop:x,tooltipContainer:this.container})}},{key:"pieChart",value:function(e){var t=e.data("sparkline-piecolor")||["#B4CAD3","#4490B1","#98AA56","#da532c","#6E9461","#0099c6","#990099","#717D8A"],n=e.data("sparkline-piesize")||90,i=e.data("border-color")||"#45494C",a=e.data("sparkline-offset")||0;e.sparkline(this.props.values||"html",{type:"pie",width:n,height:n,tooltipFormat:'<span style="color: {{color}}">&#9679;</span> ({{percent.1}}%)',sliceColors:t,borderWidth:1,offset:a,borderColor:i,tooltipContainer:this.container})}},{key:"boxChart",value:function(e){var t=e.data("sparkline-width")||"auto",n=e.data("sparkline-height")||"auto",i=e.data("sparkline-boxraw"),a=e.data("sparkline-targetval"),o=e.data("sparkline-min"),s=e.data("sparkline-max"),r=e.data("sparkline-showoutlier")||!0,l=e.data("sparkline-outlier-iqr")||1.5,h=e.data("sparkline-spotradius")||1.5,p=e.css("color")||"#000000",c=e.data("fill-color")||"#c0d0f0",d=e.data("sparkline-whis-color")||"#000000",u=e.data("sparkline-outline-color")||"#303030",g=e.data("sparkline-outlinefill-color")||"#f0f0f0",f=e.data("sparkline-outlinemedian-color")||"#f00000",m=e.data("sparkline-outlinetarget-color")||"#40a020";e.sparkline(this.props.values||"html",{type:"box",width:t,height:n,raw:i,target:a,minValue:o,maxValue:s,showOutliers:r,outlierIQR:l,spotRadius:h,boxLineColor:p,boxFillColor:c,whiskerColor:d,outlierLineColor:u,outlierFillColor:g,medianColor:f,targetColor:m,tooltipContainer:this.container})}},{key:"bulletChart",value:function(e){var t=e.data("sparkline-height")||"auto",n=e.data("sparkline-width")||2,i=e.data("sparkline-bullet-color")||"#ed1c24",a=e.data("sparkline-performance-color")||"#3030f0",o=e.data("sparkline-bulletrange-color")||["#d3dafe","#a8b6ff","#7f94ff"];e.sparkline(this.props.values||"html",{type:"bullet",height:t,targetWidth:n,targetColor:i,performanceColor:a,rangeColors:o,tooltipContainer:this.container})}},{key:"discreteChart",value:function(e){var t=e.data("sparkline-height")||26,n=e.data("sparkline-width")||50,i=e.css("color"),a=e.data("sparkline-line-height")||5,o=e.data("sparkline-threshold"),s=e.data("sparkline-threshold-color")||"#ed1c24";e.sparkline(this.props.values||"html",{type:"discrete",width:n,height:t,lineColor:i,lineHeight:a,thresholdValue:o,thresholdColor:s,tooltipContainer:this.container})}},{key:"tristaneChart",value:function(e){var t=e.data("sparkline-height")||26,n=e.data("sparkline-posbar-color")||"#60f060",i=e.data("sparkline-negbar-color")||"#f04040",a=e.data("sparkline-zerobar-color")||"#909090",o=e.data("sparkline-barwidth")||5,s=e.data("sparkline-barspacing")||2,r=e.data("sparkline-zeroaxis");e.sparkline(this.props.values||"html",{type:"tristate",height:t,posBarColor:n,negBarColor:i,zeroBarColor:a,barWidth:o,barSpacing:s,zeroAxis:r,tooltipContainer:this.container})}},{key:"compositeBarChart",value:function(e){var t=e.data("sparkline-height")||"20px",n=e.data("sparkline-width")||"100%",i=e.data("sparkline-barwidth")||3,a=e.data("sparkline-line-width")||1,o=e.data("sparkline-color-top")||"#ed1c24",s=e.data("sparkline-color-bottom")||"#333333";e.sparkline(e.data("sparkline-bar-val"),{type:"bar",width:n,height:t,barColor:s,barWidth:i,tooltipContainer:this.container}),e.sparkline(e.data("sparkline-line-val"),{width:n,height:t,lineColor:o,lineWidth:a,composite:!0,fillColor:!1,tooltipContainer:this.container})}},{key:"compositeLineChart",value:function(e){var t=e.data("sparkline-height"),n=e.data("sparkline-width"),i=e.data("sparkline-bar-val"),a=e.data("sparkline-bar-val-spots-top"),o=e.data("sparkline-bar-val-spots-bottom"),s=e.data("sparkline-line-width-top"),r=e.data("sparkline-line-width-bottom"),l=e.data("sparkline-color-top"),h=e.data("sparkline-color-bottom"),p=e.data("sparkline-spotradius-top"),c=e.data("sparkline-spotradius-bottom"),d=e.data("sparkline-spot-color"),u=e.data("sparkline-minspot-color-top"),g=e.data("sparkline-maxspot-color-top"),f=e.data("sparkline-minspot-color-bottom"),m=e.data("sparkline-maxspot-color-bottom"),v=e.data("sparkline-highlightspot-color-top"),b=e.data("sparkline-highlightline-color-top"),x=e.data("sparkline-highlightspot-color-bottom"),y=e.data("sparkline-highlightline-color-bottom"),w=e.data("sparkline-fillcolor-top"),k=e.data("sparkline-fillcolor-bottom");e.sparkline(i,{type:"line",spotRadius:p,spotColor:d,minSpotColor:u,maxSpotColor:g,highlightSpotColor:v,highlightLineColor:b,valueSpots:a,lineWidth:s,width:n,height:t,lineColor:l,fillColor:w,tooltipContainer:this.container}),e.sparkline(e.data("sparkline-line-val"),{type:"line",spotRadius:c,spotColor:d,minSpotColor:f,maxSpotColor:m,highlightSpotColor:x,highlightLineColor:y,valueSpots:o,lineWidth:r,width:n,height:t,lineColor:h,composite:!0,fillColor:k,tooltipContainer:this.container})}},{key:"drawElement",value:function(e){var t=$(e),n=t.data("sparkline-type")||"bar";"bar"==n&&this.barChart(t),"line"==n&&this.lineChart(t),"pie"==n&&this.pieChart(t),"box"==n&&this.boxChart(t),"bullet"==n&&this.bulletChart(t),"discrete"==n&&this.discreteChart(t),"tristate"==n&&this.tristaneChart(t),"compositebar"==n&&this.compositeBarChart(t),"compositeline"==n&&this.compositeLineChart(t)}},{key:"drawSparklines",value:function(){var e=this,t=n.i(h.findDOMNode)(this);if(this.props.values)this.drawElement(t);else{var i=$(t).find(".sparkline:not(:has(>canvas))");[].forEach.call(i,function(t){e.drawElement(t)})}}},{key:"componentDidUpdate",value:function(){this.drawSparklines()}},{key:"componentDidMount",value:function(){this.drawSparklines()}},{key:"render",value:function(){var e=this.props.className+(this.props.values?" sparkline":"");return l.a.createElement("div",{className:e},this.props.children)}}]),t}(l.a.Component),d=c;t.b=d;var u=function(e){function t(){return i(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),t}(c);!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"SparklineContainer","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/graphs/inline/SparklineContainer.js"),__REACT_HOT_LOADER__.register(u,"Sparkline","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/graphs/inline/SparklineContainer.js"),__REACT_HOT_LOADER__.register(d,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/graphs/inline/SparklineContainer.js"))}()},585:function(e,t,n){"use strict";function i(e,t){var n={};for(var i in e)t.indexOf(i)>=0||Object.prototype.hasOwnProperty.call(e,i)&&(n[i]=e[i]);return n}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var r=n(0),l=n.n(r),h=n(584),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=function(e){function t(){return a(this,t),o(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return s(t,e),p(t,[{key:"getStats",value:function(){return{income:{total:"$47,171",values:[1300,1877,2500,2577,2e3,2100,3e3,2700,3631,2471,2700,3631,2471]},traffic:{total:"45%",values:[110,150,300,130,400,240,220,310,220,300,270,210]},orders:{total:"2447",values:[110,150,300,130,400,240,220,310,220,300,270,210]}}}},{key:"render",value:function(){var e=this.props,t=e.className,n=(i(e,["className"]),this.getStats());return l.a.createElement("div",{className:"col-xs-12 col-sm-5 col-md-5 col-lg-8"},l.a.createElement("br",null),l.a.createElement("ul",{id:"sparks",className:t},l.a.createElement("li",{className:"sparks-info"},l.a.createElement("h5",null," Revenue ",l.a.createElement("span",{className:"txt-color-blue"}," ",n.income.total)),l.a.createElement(h.a,{values:n.income.values,className:"txt-color-blue hidden-mobile hidden-md hidden-sm"}," ")),l.a.createElement("li",{className:"sparks-info"},l.a.createElement("h5",null," Profit ",l.a.createElement("span",{className:"txt-color-purple"},l.a.createElement("i",{className:"fa fa-arrow-circle-up"})," ",n.traffic.total)),l.a.createElement(h.a,{values:n.traffic.values,className:"txt-color-purple hidden-mobile hidden-md hidden-sm"})),l.a.createElement("li",{className:"sparks-info"},l.a.createElement("h5",null," Sales ",l.a.createElement("span",{className:"txt-color-greenDark"},l.a.createElement("i",{className:"fa fa-shopping-cart"})," ",n.orders.total)),l.a.createElement(h.a,{values:n.orders.values,className:"txt-color-greenDark hidden-mobile hidden-md hidden-sm"})),l.a.createElement("li",{className:"sparks-info"},l.a.createElement("h5",null," Customer ",l.a.createElement("span",{className:"txt-color-greenDark"},l.a.createElement("i",{className:"fa fa-shopping-cart"})," ",n.orders.total)),l.a.createElement(h.a,{values:n.orders.values,className:"txt-color-greenDark hidden-mobile hidden-md hidden-sm"}))))}}]),t}(l.a.Component),d=c;t.a=d;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"Stats","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/common/Stats.js"),__REACT_HOT_LOADER__.register(d,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/common/Stats.js"))}()},586:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=n(0),r=n.n(s),l=n(89),h=n.n(l),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=function(e){function t(e){i(this,t);var n=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={items:n.props.items||[],icon:n.props.icon||"fa fa-fw fa-home"},n}return o(t,e),p(t,[{key:"componentWillMount",value:function(){}},{key:"onNavigationChange",value:function(e){var t=e.item;t.route&&(this.state.items=[],this.state.icon="",this._addCrumb(t),this.forceUpdate())}},{key:"_addCrumb",value:function(e){this.state.items.unshift(e.title),!this.state.icon&&e.icon&&(this.state.icon=e.icon),e.parent&&this._addCrumb(e.parent)}},{key:"render",value:function(){var e=h.a.head(this.state.items);return r.a.createElement("div",{className:this.props.className+" big-breadcrumbs"},r.a.createElement("h1",{className:"page-title txt-color-blueDark"},r.a.createElement("i",{className:this.state.icon})," "+e,h.a.tail(this.state.items).map(function(e){return r.a.createElement("span",{key:h.a.uniqueId("big-breadcrumb-")},r.a.createElement("span",{className:"page-title-separator"},">"),e)})))}}]),t}(r.a.Component),d=c;t.a=d;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"BigBreadcrumbs","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/navigation/components/BigBreadcrumbs.js"),__REACT_HOT_LOADER__.register(d,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/navigation/components/BigBreadcrumbs.js"))}()},587:function(e,t,n){"use strict";var i={grid:"article",widgets:".jarviswidget",localStorage:!0,deleteSettingsKey:"#deletesettingskey-options",settingsKeyLabel:"Reset settings?",deletePositionKey:"#deletepositionkey-options",positionKeyLabel:"Reset position?",sortable:!0,buttonsHidden:!1,toggleButton:!0,toggleClass:"fa fa-minus | fa fa-plus",toggleSpeed:200,onToggle:function(){},deleteButton:!0,deleteMsg:"Warning: This action cannot be undone!",deleteClass:"fa fa-times",deleteSpeed:200,onDelete:function(){},editButton:!0,editPlaceholder:".jarviswidget-editbox",editClass:"fa fa-cog | fa fa-save",editSpeed:200,onEdit:function(){},colorButton:!0,fullscreenButton:!0,fullscreenClass:"fa fa-expand | fa fa-compress",fullscreenDiff:3,onFullscreen:function(){},customButton:!1,customClass:"folder-10 | next-10",customStart:function(){alert("Hello you, this is a custom button...")},customEnd:function(){alert("bye, till next time...")},buttonOrder:"%refresh% %custom% %edit% %toggle% %fullscreen% %delete%",opacity:1,dragHandle:"> header",placeholderClass:"jarviswidget-placeholder",indicator:!0,indicatorTime:600,ajax:!0,timestampPlaceholder:".jarviswidget-timestamp",timestampFormat:"Last update: %m%/%d%/%y% %h%:%i%:%s%",refreshButton:!0,refreshButtonClass:"fa fa-refresh",labelError:"Sorry but there was a error:",labelUpdated:"Last Update:",labelRefresh:"Refresh",labelDelete:"Delete widget:",afterLoad:function(){},rtl:!1,onChange:function(){},onSave:function(){},ajaxnav:!0};t.a=i;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&__REACT_HOT_LOADER__.register(i,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/widgets/WidgetDefaults.js")}()},588:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=n(591),r=(n.n(s),n(0)),l=n.n(r),h=n(587),p=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),c=function(e){function t(){return i(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),p(t,[{key:"render",value:function(){var e=this;return l.a.createElement("section",{id:"widget-grid",ref:function(t){return e.grid=t}},this.props.children)}},{key:"componentDidMount",value:function(){$(this.grid).jarvisWidgets(h.a)}}]),t}(l.a.Component),d=c;t.a=d;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(c,"WidgetGrid","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/widgets/WidgetGrid.js"),__REACT_HOT_LOADER__.register(d,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/widgets/WidgetGrid.js"))}()},589:function(e,t){e.exports="/**\n*\n* jquery.sparkline.js\n*\n* v@VERSION@\n* (c) Splunk, Inc\n* Contact: Gareth Watts (gareth@splunk.com)\n* http://omnipotent.net/jquery.sparkline/\n*\n* Generates inline sparkline charts from data supplied either to the method\n* or inline in HTML\n*\n* Compatible with Internet Explorer 6.0+ and modern browsers equipped with the canvas tag\n* (Firefox 2.0+, Safari, Opera, etc)\n*\n* License: New BSD License\n*\n* Copyright (c) 2012, Splunk Inc.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*\n*     * Redistributions of source code must retain the above copyright notice,\n*       this list of conditions and the following disclaimer.\n*     * Redistributions in binary form must reproduce the above copyright notice,\n*       this list of conditions and the following disclaimer in the documentation\n*       and/or other materials provided with the distribution.\n*     * Neither the name of Splunk Inc nor the names of its contributors may\n*       be used to endorse or promote products derived from this software without\n*       specific prior written permission.\n*\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n* SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT\n* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*\n*\n* Usage:\n*  $(selector).sparkline(values, options)\n*\n* If values is undefined or set to 'html' then the data values are read from the specified tag:\n*   <p>Sparkline: <span class=\"sparkline\">1,4,6,6,8,5,3,5</span></p>\n*   $('.sparkline').sparkline();\n* There must be no spaces in the enclosed data set\n*\n* Otherwise values must be an array of numbers or null values\n*    <p>Sparkline: <span id=\"sparkline1\">This text replaced if the browser is compatible</span></p>\n*    $('#sparkline1').sparkline([1,4,6,6,8,5,3,5])\n*    $('#sparkline2').sparkline([1,4,6,null,null,5,3,5])\n*\n* Values can also be specified in an HTML comment, or as a values attribute:\n*    <p>Sparkline: <span class=\"sparkline\">\x3c!--1,4,6,6,8,5,3,5 --\x3e</span></p>\n*    <p>Sparkline: <span class=\"sparkline\" values=\"1,4,6,6,8,5,3,5\"></span></p>\n*    $('.sparkline').sparkline();\n*\n* For line charts, x values can also be specified:\n*   <p>Sparkline: <span class=\"sparkline\">1:1,2.7:4,3.4:6,5:6,6:8,8.7:5,9:3,10:5</span></p>\n*    $('#sparkline1').sparkline([ [1,1], [2.7,4], [3.4,6], [5,6], [6,8], [8.7,5], [9,3], [10,5] ])\n*\n* By default, options should be passed in as the second argument to the sparkline function:\n*   $('.sparkline').sparkline([1,2,3,4], {type: 'bar'})\n*\n* Options can also be set by passing them on the tag itself.  This feature is disabled by default though\n* as there's a slight performance overhead:\n*   $('.sparkline').sparkline([1,2,3,4], {enableTagOptions: true})\n*   <p>Sparkline: <span class=\"sparkline\" sparkType=\"bar\" sparkBarColor=\"red\">loading</span></p>\n* Prefix all options supplied as tag attribute with \"spark\" (configurable by setting tagOptionsPrefix)\n*\n* Supported options:\n*   lineColor - Color of the line used for the chart\n*   fillColor - Color used to fill in the chart - Set to '' or false for a transparent chart\n*   width - Width of the chart - Defaults to 3 times the number of values in pixels\n*   height - Height of the chart - Defaults to the height of the containing element\n*   chartRangeMin - Specify the minimum value to use for the Y range of the chart - Defaults to the minimum value supplied\n*   chartRangeMax - Specify the maximum value to use for the Y range of the chart - Defaults to the maximum value supplied\n*   chartRangeClip - Clip out of range values to the max/min specified by chartRangeMin and chartRangeMax\n*   chartRangeMinX - Specify the minimum value to use for the X range of the chart - Defaults to the minimum value supplied\n*   chartRangeMaxX - Specify the maximum value to use for the X range of the chart - Defaults to the maximum value supplied\n*   composite - If true then don't erase any existing chart attached to the tag, but draw\n*           another chart over the top - Note that width and height are ignored if an\n*           existing chart is detected.\n*   tagValuesAttribute - Name of tag attribute to check for data values - Defaults to 'values'\n*   enableTagOptions - Whether to check tags for sparkline options\n*   tagOptionsPrefix - Prefix used for options supplied as tag attributes - Defaults to 'spark'\n*   disableHiddenCheck - If set to true, then the plugin will assume that charts will never be drawn into a\n*           hidden dom element, avoding a browser reflow\n*   disableInteraction - If set to true then all mouseover/click interaction behaviour will be disabled,\n*       making the plugin perform much like it did in 1.x\n*   disableTooltips - If set to true then tooltips will be disabled - Defaults to false (tooltips enabled)\n*   disableHighlight - If set to true then highlighting of selected chart elements on mouseover will be disabled\n*       defaults to false (highlights enabled)\n*   highlightLighten - Factor to lighten/darken highlighted chart values by - Defaults to 1.4 for a 40% increase\n*   tooltipContainer - Specify which DOM element the tooltip should be rendered into - defaults to document.body\n*   tooltipClassname - Optional CSS classname to apply to tooltips - If not specified then a default style will be applied\n*   tooltipOffsetX - How many pixels away from the mouse pointer to render the tooltip on the X axis\n*   tooltipOffsetY - How many pixels away from the mouse pointer to render the tooltip on the r axis\n*   tooltipFormatter  - Optional callback that allows you to override the HTML displayed in the tooltip\n*       callback is given arguments of (sparkline, options, fields)\n*   tooltipChartTitle - If specified then the tooltip uses the string specified by this setting as a title\n*   tooltipFormat - A format string or SPFormat object  (or an array thereof for multiple entries)\n*       to control the format of the tooltip\n*   tooltipPrefix - A string to prepend to each field displayed in a tooltip\n*   tooltipSuffix - A string to append to each field displayed in a tooltip\n*   tooltipSkipNull - If true then null values will not have a tooltip displayed (defaults to true)\n*   tooltipValueLookups - An object or range map to map field values to tooltip strings\n*       (eg. to map -1 to \"Lost\", 0 to \"Draw\", and 1 to \"Win\")\n*   numberFormatter - Optional callback for formatting numbers in tooltips\n*   numberDigitGroupSep - Character to use for group separator in numbers \"1,234\" - Defaults to \",\"\n*   numberDecimalMark - Character to use for the decimal point when formatting numbers - Defaults to \".\"\n*   numberDigitGroupCount - Number of digits between group separator - Defaults to 3\n*\n* There are 7 types of sparkline, selected by supplying a \"type\" option of 'line' (default),\n* 'bar', 'tristate', 'bullet', 'discrete', 'pie' or 'box'\n*    line - Line chart.  Options:\n*       spotColor - Set to '' to not end each line in a circular spot\n*       minSpotColor - If set, color of spot at minimum value\n*       maxSpotColor - If set, color of spot at maximum value\n*       spotRadius - Radius in pixels\n*       lineWidth - Width of line in pixels\n*       normalRangeMin\n*       normalRangeMax - If set draws a filled horizontal bar between these two values marking the \"normal\"\n*                      or expected range of values\n*       normalRangeColor - Color to use for the above bar\n*       drawNormalOnTop - Draw the normal range above the chart fill color if true\n*       defaultPixelsPerValue - Defaults to 3 pixels of width for each value in the chart\n*       highlightSpotColor - The color to use for drawing a highlight spot on mouseover - Set to null to disable\n*       highlightLineColor - The color to use for drawing a highlight line on mouseover - Set to null to disable\n*       valueSpots - Specify which points to draw spots on, and in which color.  Accepts a range map\n*\n*   bar - Bar chart.  Options:\n*       barColor - Color of bars for postive values\n*       negBarColor - Color of bars for negative values\n*       zeroColor - Color of bars with zero values\n*       nullColor - Color of bars with null values - Defaults to omitting the bar entirely\n*       barWidth - Width of bars in pixels\n*       colorMap - Optional mappnig of values to colors to override the *BarColor values above\n*                  can be an Array of values to control the color of individual bars or a range map\n*                  to specify colors for individual ranges of values\n*       barSpacing - Gap between bars in pixels\n*       zeroAxis - Centers the y-axis around zero if true\n*\n*   tristate - Charts values of win (>0), lose (<0) or draw (=0)\n*       posBarColor - Color of win values\n*       negBarColor - Color of lose values\n*       zeroBarColor - Color of draw values\n*       barWidth - Width of bars in pixels\n*       barSpacing - Gap between bars in pixels\n*       colorMap - Optional mappnig of values to colors to override the *BarColor values above\n*                  can be an Array of values to control the color of individual bars or a range map\n*                  to specify colors for individual ranges of values\n*\n*   discrete - Options:\n*       lineHeight - Height of each line in pixels - Defaults to 30% of the graph height\n*       thesholdValue - Values less than this value will be drawn using thresholdColor instead of lineColor\n*       thresholdColor\n*\n*   bullet - Values for bullet graphs msut be in the order: target, performance, range1, range2, range3, ...\n*       options:\n*       targetColor - The color of the vertical target marker\n*       targetWidth - The width of the target marker in pixels\n*       performanceColor - The color of the performance measure horizontal bar\n*       rangeColors - Colors to use for each qualitative range background color\n*\n*   pie - Pie chart. Options:\n*       sliceColors - An array of colors to use for pie slices\n*       offset - Angle in degrees to offset the first slice - Try -90 or +90\n*       borderWidth - Width of border to draw around the pie chart, in pixels - Defaults to 0 (no border)\n*       borderColor - Color to use for the pie chart border - Defaults to #000\n*\n*   box - Box plot. Options:\n*       raw - Set to true to supply pre-computed plot points as values\n*             values should be: low_outlier, low_whisker, q1, median, q3, high_whisker, high_outlier\n*             When set to false you can supply any number of values and the box plot will\n*             be computed for you.  Default is false.\n*       showOutliers - Set to true (default) to display outliers as circles\n*       outlierIQR - Interquartile range used to determine outliers.  Default 1.5\n*       boxLineColor - Outline color of the box\n*       boxFillColor - Fill color for the box\n*       whiskerColor - Line color used for whiskers\n*       outlierLineColor - Outline color of outlier circles\n*       outlierFillColor - Fill color of the outlier circles\n*       spotRadius - Radius of outlier circles\n*       medianColor - Line color of the median line\n*       target - Draw a target cross hair at the supplied value (default undefined)\n*\n*\n*\n*   Examples:\n*   $('#sparkline1').sparkline(myvalues, { lineColor: '#f00', fillColor: false });\n*   $('.barsparks').sparkline('html', { type:'bar', height:'40px', barWidth:5 });\n*   $('#tristate').sparkline([1,1,-1,1,0,0,-1], { type:'tristate' }):\n*   $('#discrete').sparkline([1,3,4,5,5,3,4,5], { type:'discrete' });\n*   $('#bullet').sparkline([10,12,12,9,7], { type:'bullet' });\n*   $('#pie').sparkline([1,1,2], { type:'pie' });\n*/\n\n/*jslint regexp: true, browser: true, jquery: true, white: true, nomen: false, plusplus: false, maxerr: 500, indent: 4 */\n\n(function(document, Math, undefined) { // performance/minified-size optimization\n(function(factory) {\n    if(typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (jQuery && !jQuery.fn.sparkline) {\n        factory(jQuery);\n    }\n}\n(function($) {\n    'use strict';\n\n    var UNSET_OPTION = {},\n        getDefaults, createClass, SPFormat, clipval, quartile, normalizeValue, normalizeValues,\n        remove, isNumber, all, sum, addCSS, ensureArray, formatNumber, RangeMap,\n        MouseHandler, Tooltip, barHighlightMixin,\n        line, bar, tristate, discrete, bullet, pie, box, defaultStyles, initStyles,\n        VShape, VCanvas_base, VCanvas_canvas, VCanvas_vml, pending, shapeCount = 0;\n\n\n    /**\n     * Default configuration settings\n     */\n    getDefaults = function () {\n        return {\n            // Settings common to most/all chart types\n            common: {\n                type: 'line',\n                lineColor: '#00f',\n                fillColor: '#cdf',\n                defaultPixelsPerValue: 3,\n                width: 'auto',\n                height: 'auto',\n                composite: false,\n                tagValuesAttribute: 'values',\n                tagOptionsPrefix: 'spark',\n                enableTagOptions: false,\n                enableHighlight: true,\n                highlightLighten: 1.4,\n                tooltipSkipNull: true,\n                tooltipPrefix: '',\n                tooltipSuffix: '',\n                disableHiddenCheck: false,\n                numberFormatter: false,\n                numberDigitGroupCount: 3,\n                numberDigitGroupSep: ',',\n                numberDecimalMark: '.',\n                disableTooltips: false,\n                disableInteraction: false\n            },\n            // Defaults for line charts\n            line: {\n                spotColor: '#f80',\n                highlightSpotColor: '#5f5',\n                highlightLineColor: '#f22',\n                spotRadius: 1.5,\n                minSpotColor: '#f80',\n                maxSpotColor: '#f80',\n                lineWidth: 1,\n                normalRangeMin: undefined,\n                normalRangeMax: undefined,\n                normalRangeColor: '#ccc',\n                drawNormalOnTop: false,\n                chartRangeMin: undefined,\n                chartRangeMax: undefined,\n                chartRangeMinX: undefined,\n                chartRangeMaxX: undefined,\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{prefix}}{{y}}{{suffix}}')\n            },\n            // Defaults for bar charts\n            bar: {\n                barColor: '#3366cc',\n                negBarColor: '#f44',\n                stackedBarColor: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',\n                    '#dd4477', '#0099c6', '#990099'],\n                zeroColor: undefined,\n                nullColor: undefined,\n                zeroAxis: true,\n                barWidth: 4,\n                barSpacing: 1,\n                chartRangeMax: undefined,\n                chartRangeMin: undefined,\n                chartRangeClip: false,\n                colorMap: undefined,\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{prefix}}{{value}}{{suffix}}')\n            },\n            // Defaults for tristate charts\n            tristate: {\n                barWidth: 4,\n                barSpacing: 1,\n                posBarColor: '#6f6',\n                negBarColor: '#f44',\n                zeroBarColor: '#999',\n                colorMap: {},\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{value:map}}'),\n                tooltipValueLookups: { map: { '-1': 'Loss', '0': 'Draw', '1': 'Win' } }\n            },\n            // Defaults for discrete charts\n            discrete: {\n                lineHeight: 'auto',\n                thresholdColor: undefined,\n                thresholdValue: 0,\n                chartRangeMax: undefined,\n                chartRangeMin: undefined,\n                chartRangeClip: false,\n                tooltipFormat: new SPFormat('{{prefix}}{{value}}{{suffix}}')\n            },\n            // Defaults for bullet charts\n            bullet: {\n                targetColor: '#f33',\n                targetWidth: 3, // width of the target bar in pixels\n                performanceColor: '#33f',\n                rangeColors: ['#d3dafe', '#a8b6ff', '#7f94ff'],\n                base: undefined, // set this to a number to change the base start number\n                tooltipFormat: new SPFormat('{{fieldkey:fields}} - {{value}}'),\n                tooltipValueLookups: { fields: {r: 'Range', p: 'Performance', t: 'Target'} }\n            },\n            // Defaults for pie charts\n            pie: {\n                offset: 0,\n                sliceColors: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',\n                    '#dd4477', '#0099c6', '#990099'],\n                borderWidth: 0,\n                borderColor: '#000',\n                tooltipFormat: new SPFormat('<span style=\"color: {{color}}\">&#9679;</span> {{value}} ({{percent.1}}%)')\n            },\n            // Defaults for box plots\n            box: {\n                raw: false,\n                boxLineColor: '#000',\n                boxFillColor: '#cdf',\n                whiskerColor: '#000',\n                outlierLineColor: '#333',\n                outlierFillColor: '#fff',\n                medianColor: '#f00',\n                showOutliers: true,\n                outlierIQR: 1.5,\n                spotRadius: 1.5,\n                target: undefined,\n                targetColor: '#4a2',\n                chartRangeMax: undefined,\n                chartRangeMin: undefined,\n                tooltipFormat: new SPFormat('{{field:fields}}: {{value}}'),\n                tooltipFormatFieldlistKey: 'field',\n                tooltipValueLookups: { fields: { lq: 'Lower Quartile', med: 'Median',\n                    uq: 'Upper Quartile', lo: 'Left Outlier', ro: 'Right Outlier',\n                    lw: 'Left Whisker', rw: 'Right Whisker'} }\n            }\n        };\n    };\n\n    // You can have tooltips use a css class other than jqstooltip by specifying tooltipClassname\n    defaultStyles = '.jqstooltip { ' +\n            'position: absolute;' +\n            'left: 0px;' +\n            'top: 0px;' +\n            'visibility: hidden;' +\n            'background: rgb(0, 0, 0) transparent;' +\n            'background-color: rgba(0,0,0,0.6);' +\n            'filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);' +\n            '-ms-filter: \"progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)\";' +\n            'color: white;' +\n            'font: 10px arial, san serif;' +\n            'text-align: left;' +\n            'white-space: nowrap;' +\n            'padding: 5px;' +\n            'border: 1px solid white;' +\n            'box-sizing: content-box;' +\n            'z-index: 10000;' +\n            '}' +\n            '.jqsfield { ' +\n            'color: white;' +\n            'font: 10px arial, san serif;' +\n            'text-align: left;' +\n            '}';\n\n\n    /**\n     * Utilities\n     */\n\n    createClass = function (/* [baseclass, [mixin, ...]], definition */) {\n        var Class, args;\n        Class = function () {\n            this.init.apply(this, arguments);\n        };\n        if (arguments.length > 1) {\n            if (arguments[0]) {\n                Class.prototype = $.extend(new arguments[0](), arguments[arguments.length - 1]);\n                Class._super = arguments[0].prototype;\n            } else {\n                Class.prototype = arguments[arguments.length - 1];\n            }\n            if (arguments.length > 2) {\n                args = Array.prototype.slice.call(arguments, 1, -1);\n                args.unshift(Class.prototype);\n                $.extend.apply($, args);\n            }\n        } else {\n            Class.prototype = arguments[0];\n        }\n        Class.prototype.cls = Class;\n        return Class;\n    };\n\n    /**\n     * Wraps a format string for tooltips\n     * {{x}}\n     * {{x.2}\n     * {{x:months}}\n     */\n    $.SPFormatClass = SPFormat = createClass({\n        fre: /\\{\\{([\\w.]+?)(:(.+?))?\\}\\}/g,\n        precre: /(\\w+)\\.(\\d+)/,\n\n        init: function (format, fclass) {\n            this.format = format;\n            this.fclass = fclass;\n        },\n\n        render: function (fieldset, lookups, options) {\n            var self = this,\n                fields = fieldset,\n                match, token, lookupkey, fieldvalue, prec;\n            return this.format.replace(this.fre, function () {\n                var lookup;\n                token = arguments[1];\n                lookupkey = arguments[3];\n                match = self.precre.exec(token);\n                if (match) {\n                    prec = match[2];\n                    token = match[1];\n                } else {\n                    prec = false;\n                }\n                fieldvalue = fields[token];\n                if (fieldvalue === undefined) {\n                    return '';\n                }\n                if (lookupkey && lookups && lookups[lookupkey]) {\n                    lookup = lookups[lookupkey];\n                    if (lookup.get) { // RangeMap\n                        return lookups[lookupkey].get(fieldvalue) || fieldvalue;\n                    } else {\n                        return lookups[lookupkey][fieldvalue] || fieldvalue;\n                    }\n                }\n                if (isNumber(fieldvalue)) {\n                    if (options.get('numberFormatter')) {\n                        fieldvalue = options.get('numberFormatter')(fieldvalue);\n                    } else {\n                        fieldvalue = formatNumber(fieldvalue, prec,\n                            options.get('numberDigitGroupCount'),\n                            options.get('numberDigitGroupSep'),\n                            options.get('numberDecimalMark'));\n                    }\n                }\n                return fieldvalue;\n            });\n        }\n    });\n\n    // convience method to avoid needing the new operator\n    $.spformat = function(format, fclass) {\n        return new SPFormat(format, fclass);\n    };\n\n    clipval = function (val, min, max) {\n        if (val < min) {\n            return min;\n        }\n        if (val > max) {\n            return max;\n        }\n        return val;\n    };\n\n    quartile = function (values, q) {\n        var vl;\n        if (q === 2) {\n            vl = Math.floor(values.length / 2);\n            return values.length % 2 ? values[vl] : (values[vl-1] + values[vl]) / 2;\n        } else {\n            if (values.length % 2 ) { // odd\n                vl = (values.length * q + q) / 4;\n                return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl-1];\n            } else { //even\n                vl = (values.length * q + 2) / 4;\n                return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 :  values[vl-1];\n\n            }\n        }\n    };\n\n    normalizeValue = function (val) {\n        var nf;\n        switch (val) {\n            case 'undefined':\n                val = undefined;\n                break;\n            case 'null':\n                val = null;\n                break;\n            case 'true':\n                val = true;\n                break;\n            case 'false':\n                val = false;\n                break;\n            default:\n                nf = parseFloat(val);\n                if (val == nf) {\n                    val = nf;\n                }\n        }\n        return val;\n    };\n\n    normalizeValues = function (vals) {\n        var i, result = [];\n        for (i = vals.length; i--;) {\n            result[i] = normalizeValue(vals[i]);\n        }\n        return result;\n    };\n\n    remove = function (vals, filter) {\n        var i, vl, result = [];\n        for (i = 0, vl = vals.length; i < vl; i++) {\n            if (vals[i] !== filter) {\n                result.push(vals[i]);\n            }\n        }\n        return result;\n    };\n\n    isNumber = function (num) {\n        return !isNaN(parseFloat(num)) && isFinite(num);\n    };\n\n    formatNumber = function (num, prec, groupsize, groupsep, decsep) {\n        var p, i;\n        num = (prec === false ? parseFloat(num).toString() : num.toFixed(prec)).split('');\n        p = (p = $.inArray('.', num)) < 0 ? num.length : p;\n        if (p < num.length) {\n            num[p] = decsep;\n        }\n        for (i = p - groupsize; i > 0; i -= groupsize) {\n            num.splice(i, 0, groupsep);\n        }\n        return num.join('');\n    };\n\n    // determine if all values of an array match a value\n    // returns true if the array is empty\n    all = function (val, arr, ignoreNull) {\n        var i;\n        for (i = arr.length; i--; ) {\n            if (ignoreNull && arr[i] === null) continue;\n            if (arr[i] !== val) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // sums the numeric values in an array, ignoring other values\n    sum = function (vals) {\n        var total = 0, i;\n        for (i = vals.length; i--;) {\n            total += typeof vals[i] === 'number' ? vals[i] : 0;\n        }\n        return total;\n    };\n\n    ensureArray = function (val) {\n        return $.isArray(val) ? val : [val];\n    };\n\n    // http://paulirish.com/2008/bookmarklet-inject-new-css-rules/\n    addCSS = function(css) {\n        var tag, iefail;\n        if (document.createStyleSheet) {\n            try {\n                document.createStyleSheet().cssText = css;\n                return;\n            } catch (e) {\n                // IE <= 9 maxes out at 31 stylesheets; inject into page instead.\n                iefail = true;\n            }\n        }\n        tag = document.createElement('style');\n        tag.type = 'text/css';\n        document.getElementsByTagName('head')[0].appendChild(tag);\n        if (iefail) {\n            document.styleSheets[document.styleSheets.length - 1].cssText = css;\n        } else {\n            tag[(typeof document.body.style.WebkitAppearance == 'string') /* webkit only */ ? 'innerText' : 'innerHTML'] = css;\n        }\n    };\n\n\n    // Provide a cross-browser interface to a few simple drawing primitives\n    $.fn.simpledraw = function (width, height, useExisting, interact) {\n        var target, mhandler;\n        if (useExisting && (target = this.data('_jqs_vcanvas'))) {\n            return target;\n        }\n\n        if ($.fn.sparkline.canvas === false) {\n            // We've already determined that neither Canvas nor VML are available\n            return false;\n\n        } else if ($.fn.sparkline.canvas === undefined) {\n            // No function defined yet -- need to see if we support Canvas or VML\n            var el = document.createElement('canvas');\n            if (!!(el.getContext && el.getContext('2d'))) {\n                // Canvas is available\n                $.fn.sparkline.canvas = function(width, height, target, interact) {\n                    return new VCanvas_canvas(width, height, target, interact);\n                };\n            } else if (document.namespaces && !document.namespaces.v) {\n                // VML is available\n                document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML');\n                $.fn.sparkline.canvas = function(width, height, target, interact) {\n                    return new VCanvas_vml(width, height, target);\n                };\n            } else {\n                // Neither Canvas nor VML are available\n                $.fn.sparkline.canvas = false;\n                return false;\n            }\n        }\n\n        if (width === undefined) {\n            width = $(this).innerWidth();\n        }\n        if (height === undefined) {\n            height = $(this).innerHeight();\n        }\n\n        target = $.fn.sparkline.canvas(width, height, this, interact);\n\n        mhandler = $(this).data('_jqs_mhandler');\n        if (mhandler) {\n            mhandler.registerCanvas(target);\n        }\n        return target;\n    };\n\n    $.fn.cleardraw = function () {\n        var target = this.data('_jqs_vcanvas');\n        if (target) {\n            target.reset();\n        }\n    };\n\n\n    $.RangeMapClass = RangeMap = createClass({\n        init: function (map) {\n            var key, range, rangelist = [];\n            for (key in map) {\n                if (map.hasOwnProperty(key) && typeof key === 'string' && key.indexOf(':') > -1) {\n                    range = key.split(':');\n                    range[0] = range[0].length === 0 ? -Infinity : parseFloat(range[0]);\n                    range[1] = range[1].length === 0 ? Infinity : parseFloat(range[1]);\n                    range[2] = map[key];\n                    rangelist.push(range);\n                }\n            }\n            this.map = map;\n            this.rangelist = rangelist || false;\n        },\n\n        get: function (value) {\n            var rangelist = this.rangelist,\n                i, range, result;\n            if ((result = this.map[value]) !== undefined) {\n                return result;\n            }\n            if (rangelist) {\n                for (i = rangelist.length; i--;) {\n                    range = rangelist[i];\n                    if (range[0] <= value && range[1] >= value) {\n                        return range[2];\n                    }\n                }\n            }\n            return undefined;\n        }\n    });\n\n    // Convenience function\n    $.range_map = function(map) {\n        return new RangeMap(map);\n    };\n\n\n    MouseHandler = createClass({\n        init: function (el, options) {\n            var $el = $(el);\n            this.$el = $el;\n            this.options = options;\n            this.currentPageX = 0;\n            this.currentPageY = 0;\n            this.el = el;\n            this.splist = [];\n            this.tooltip = null;\n            this.over = false;\n            this.displayTooltips = !options.get('disableTooltips');\n            this.highlightEnabled = !options.get('disableHighlight');\n        },\n\n        registerSparkline: function (sp) {\n            this.splist.push(sp);\n            if (this.over) {\n                this.updateDisplay();\n            }\n        },\n\n        registerCanvas: function (canvas) {\n            var $canvas = $(canvas.canvas);\n            this.canvas = canvas;\n            this.$canvas = $canvas;\n            $canvas.mouseenter($.proxy(this.mouseenter, this));\n            $canvas.mouseleave($.proxy(this.mouseleave, this));\n            $canvas.click($.proxy(this.mouseclick, this));\n        },\n\n        reset: function (removeTooltip) {\n            this.splist = [];\n            if (this.tooltip && removeTooltip) {\n                this.tooltip.remove();\n                this.tooltip = undefined;\n            }\n        },\n\n        mouseclick: function (e) {\n            var clickEvent = $.Event('sparklineClick');\n            clickEvent.originalEvent = e;\n            clickEvent.sparklines = this.splist;\n            this.$el.trigger(clickEvent);\n        },\n\n        mouseenter: function (e) {\n            $(document.body).unbind('mousemove.jqs');\n            $(document.body).bind('mousemove.jqs', $.proxy(this.mousemove, this));\n            this.over = true;\n            this.currentPageX = e.pageX;\n            this.currentPageY = e.pageY;\n            this.currentEl = e.target;\n            if (!this.tooltip && this.displayTooltips) {\n                this.tooltip = new Tooltip(this.options);\n                this.tooltip.updatePosition(e.pageX, e.pageY);\n            }\n            this.updateDisplay();\n        },\n\n        mouseleave: function () {\n            $(document.body).unbind('mousemove.jqs');\n            var splist = this.splist,\n                 spcount = splist.length,\n                 needsRefresh = false,\n                 sp, i;\n            this.over = false;\n            this.currentEl = null;\n\n            if (this.tooltip) {\n                this.tooltip.remove();\n                this.tooltip = null;\n            }\n\n            for (i = 0; i < spcount; i++) {\n                sp = splist[i];\n                if (sp.clearRegionHighlight()) {\n                    needsRefresh = true;\n                }\n            }\n\n            if (needsRefresh) {\n                this.canvas.render();\n            }\n        },\n\n        mousemove: function (e) {\n            this.currentPageX = e.pageX;\n            this.currentPageY = e.pageY;\n            this.currentEl = e.target;\n            if (this.tooltip) {\n                this.tooltip.updatePosition(e.pageX, e.pageY);\n            }\n            this.updateDisplay();\n        },\n\n        updateDisplay: function () {\n            var splist = this.splist,\n                 spcount = splist.length,\n                 needsRefresh = false,\n                 offset = this.$canvas.offset(),\n                 localX = this.currentPageX - offset.left,\n                 localY = this.currentPageY - offset.top,\n                 tooltiphtml, sp, i, result, changeEvent;\n            if (!this.over) {\n                return;\n            }\n            for (i = 0; i < spcount; i++) {\n                sp = splist[i];\n                result = sp.setRegionHighlight(this.currentEl, localX, localY);\n                if (result) {\n                    needsRefresh = true;\n                }\n            }\n            if (needsRefresh) {\n                changeEvent = $.Event('sparklineRegionChange');\n                changeEvent.sparklines = this.splist;\n                this.$el.trigger(changeEvent);\n                if (this.tooltip) {\n                    tooltiphtml = '';\n                    for (i = 0; i < spcount; i++) {\n                        sp = splist[i];\n                        tooltiphtml += sp.getCurrentRegionTooltip();\n                    }\n                    this.tooltip.setContent(tooltiphtml);\n                }\n                if (!this.disableHighlight) {\n                    this.canvas.render();\n                }\n            }\n            if (result === null) {\n                this.mouseleave();\n            }\n        }\n    });\n\n\n    Tooltip = createClass({\n        sizeStyle: 'position: static !important;' +\n            'display: block !important;' +\n            'visibility: hidden !important;' +\n            'float: left !important;',\n\n        init: function (options) {\n            var tooltipClassname = options.get('tooltipClassname', 'jqstooltip'),\n                sizetipStyle = this.sizeStyle,\n                offset;\n            this.container = options.get('tooltipContainer') || document.body;\n            this.tooltipOffsetX = options.get('tooltipOffsetX', 10);\n            this.tooltipOffsetY = options.get('tooltipOffsetY', 12);\n            // remove any previous lingering tooltip\n            $('#jqssizetip').remove();\n            $('#jqstooltip').remove();\n            this.sizetip = $('<div/>', {\n                id: 'jqssizetip',\n                style: sizetipStyle,\n                'class': tooltipClassname\n            });\n            this.tooltip = $('<div/>', {\n                id: 'jqstooltip',\n                'class': tooltipClassname\n            }).appendTo(this.container);\n            // account for the container's location\n            offset = this.tooltip.offset();\n            this.offsetLeft = offset.left;\n            this.offsetTop = offset.top;\n            this.hidden = true;\n            $(window).unbind('resize.jqs scroll.jqs');\n            $(window).bind('resize.jqs scroll.jqs', $.proxy(this.updateWindowDims, this));\n            this.updateWindowDims();\n        },\n\n        updateWindowDims: function () {\n            this.scrollTop = $(window).scrollTop();\n            this.scrollLeft = $(window).scrollLeft();\n            this.scrollRight = this.scrollLeft + $(window).width();\n            this.updatePosition();\n        },\n\n        getSize: function (content) {\n            this.sizetip.html(content).appendTo(this.container);\n            this.width = this.sizetip.width() + 1;\n            this.height = this.sizetip.height();\n            this.sizetip.remove();\n        },\n\n        setContent: function (content) {\n            if (!content) {\n                this.tooltip.css('visibility', 'hidden');\n                this.hidden = true;\n                return;\n            }\n            this.getSize(content);\n            this.tooltip.html(content)\n                .css({\n                    'width': this.width,\n                    'height': this.height,\n                    'visibility': 'visible'\n                });\n            if (this.hidden) {\n                this.hidden = false;\n                this.updatePosition();\n            }\n        },\n\n        updatePosition: function (x, y) {\n            if (x === undefined) {\n                if (this.mousex === undefined) {\n                    return;\n                }\n                x = this.mousex - this.offsetLeft;\n                y = this.mousey - this.offsetTop;\n\n            } else {\n                this.mousex = x = x - this.offsetLeft;\n                this.mousey = y = y - this.offsetTop;\n            }\n            if (!this.height || !this.width || this.hidden) {\n                return;\n            }\n\n            y -= this.height + this.tooltipOffsetY;\n            x += this.tooltipOffsetX;\n\n            if (y < this.scrollTop) {\n                y = this.scrollTop;\n            }\n            if (x < this.scrollLeft) {\n                x = this.scrollLeft;\n            } else if (x + this.width > this.scrollRight) {\n                x = this.scrollRight - this.width;\n            }\n\n            this.tooltip.css({\n                'left': x,\n                'top': y\n            });\n        },\n\n        remove: function () {\n            this.tooltip.remove();\n            this.sizetip.remove();\n            this.sizetip = this.tooltip = undefined;\n            $(window).unbind('resize.jqs scroll.jqs');\n        }\n    });\n\n\n    initStyles = function() {\n        addCSS(defaultStyles);\n    };\n\n    $(initStyles);\n\n    pending = [];\n    $.fn.sparkline = function (userValues, userOptions) {\n        return this.each(function () {\n            var options = new $.fn.sparkline.options(this, userOptions),\n                 $this = $(this),\n                 render, i;\n            render = function () {\n                var values, width, height, tmp, mhandler, sp, vals;\n                if (userValues === 'html' || userValues === undefined) {\n                    vals = this.getAttribute(options.get('tagValuesAttribute'));\n                    if (vals === undefined || vals === null) {\n                        vals = $this.html();\n                    }\n                    values = vals.replace(/(^\\s*\x3c!--)|(--\x3e\\s*$)|\\s+/g, '').split(',');\n                } else {\n                    values = userValues;\n                }\n\n                width = options.get('width') === 'auto' ? values.length * options.get('defaultPixelsPerValue') : options.get('width');\n                if (options.get('height') === 'auto') {\n                    if (!options.get('composite') || !$.data(this, '_jqs_vcanvas')) {\n                        // must be a better way to get the line height\n                        tmp = document.createElement('span');\n                        tmp.innerHTML = 'a';\n                        $this.html(tmp);\n                        height = $(tmp).innerHeight() || $(tmp).height();\n                        $(tmp).remove();\n                        tmp = null;\n                    }\n                } else {\n                    height = options.get('height');\n                }\n\n                if (!options.get('disableInteraction')) {\n                    mhandler = $.data(this, '_jqs_mhandler');\n                    if (!mhandler) {\n                        mhandler = new MouseHandler(this, options);\n                        $.data(this, '_jqs_mhandler', mhandler);\n                    } else if (!options.get('composite')) {\n                        mhandler.reset();\n                    }\n                } else {\n                    mhandler = false;\n                }\n\n                if (options.get('composite') && !$.data(this, '_jqs_vcanvas')) {\n                    if (!$.data(this, '_jqs_errnotify')) {\n                        alert('Attempted to attach a composite sparkline to an element with no existing sparkline');\n                        $.data(this, '_jqs_errnotify', true);\n                    }\n                    return;\n                }\n\n                sp = new $.fn.sparkline[options.get('type')](this, values, options, width, height);\n\n                sp.render();\n\n                if (mhandler) {\n                    mhandler.registerSparkline(sp);\n                }\n            };\n            if (($(this).html() && !options.get('disableHiddenCheck') && $(this).is(':hidden')) || !$(this).parents('body').length) {\n                if (!options.get('composite') && $.data(this, '_jqs_pending')) {\n                    // remove any existing references to the element\n                    for (i = pending.length; i; i--) {\n                        if (pending[i - 1][0] == this) {\n                            pending.splice(i - 1, 1);\n                        }\n                    }\n                }\n                pending.push([this, render]);\n                $.data(this, '_jqs_pending', true);\n            } else {\n                render.call(this);\n            }\n        });\n    };\n\n    $.fn.sparkline.defaults = getDefaults();\n\n\n    $.sparkline_display_visible = function () {\n        var el, i, pl;\n        var done = [];\n        for (i = 0, pl = pending.length; i < pl; i++) {\n            el = pending[i][0];\n            if ($(el).is(':visible') && !$(el).parents().is(':hidden')) {\n                pending[i][1].call(el);\n                $.data(pending[i][0], '_jqs_pending', false);\n                done.push(i);\n            } else if (!$(el).closest('html').length && !$.data(el, '_jqs_pending')) {\n                // element has been inserted and removed from the DOM\n                // If it was not yet inserted into the dom then the .data request\n                // will return true.\n                // removing from the dom causes the data to be removed.\n                $.data(pending[i][0], '_jqs_pending', false);\n                done.push(i);\n            }\n        }\n        for (i = done.length; i; i--) {\n            pending.splice(done[i - 1], 1);\n        }\n    };\n\n\n    /**\n     * User option handler\n     */\n    $.fn.sparkline.options = createClass({\n        init: function (tag, userOptions) {\n            var extendedOptions, defaults, base, tagOptionType;\n            this.userOptions = userOptions = userOptions || {};\n            this.tag = tag;\n            this.tagValCache = {};\n            defaults = $.fn.sparkline.defaults;\n            base = defaults.common;\n            this.tagOptionsPrefix = userOptions.enableTagOptions && (userOptions.tagOptionsPrefix || base.tagOptionsPrefix);\n\n            tagOptionType = this.getTagSetting('type');\n            if (tagOptionType === UNSET_OPTION) {\n                extendedOptions = defaults[userOptions.type || base.type];\n            } else {\n                extendedOptions = defaults[tagOptionType];\n            }\n            this.mergedOptions = $.extend({}, base, extendedOptions, userOptions);\n        },\n\n\n        getTagSetting: function (key) {\n            var prefix = this.tagOptionsPrefix,\n                val, i, pairs, keyval;\n            if (prefix === false || prefix === undefined) {\n                return UNSET_OPTION;\n            }\n            if (this.tagValCache.hasOwnProperty(key)) {\n                val = this.tagValCache.key;\n            } else {\n                val = this.tag.getAttribute(prefix + key);\n                if (val === undefined || val === null) {\n                    val = UNSET_OPTION;\n                } else if (val.substr(0, 1) === '[') {\n                    val = val.substr(1, val.length - 2).split(',');\n                    for (i = val.length; i--;) {\n                        val[i] = normalizeValue(val[i].replace(/(^\\s*)|(\\s*$)/g, ''));\n                    }\n                } else if (val.substr(0, 1) === '{') {\n                    pairs = val.substr(1, val.length - 2).split(',');\n                    val = {};\n                    for (i = pairs.length; i--;) {\n                        keyval = pairs[i].split(':', 2);\n                        val[keyval[0].replace(/(^\\s*)|(\\s*$)/g, '')] = normalizeValue(keyval[1].replace(/(^\\s*)|(\\s*$)/g, ''));\n                    }\n                } else {\n                    val = normalizeValue(val);\n                }\n                this.tagValCache.key = val;\n            }\n            return val;\n        },\n\n        get: function (key, defaultval) {\n            var tagOption = this.getTagSetting(key),\n                result;\n            if (tagOption !== UNSET_OPTION) {\n                return tagOption;\n            }\n            return (result = this.mergedOptions[key]) === undefined ? defaultval : result;\n        }\n    });\n\n\n    $.fn.sparkline._base = createClass({\n        disabled: false,\n\n        init: function (el, values, options, width, height) {\n            this.el = el;\n            this.$el = $(el);\n            this.values = values;\n            this.options = options;\n            this.width = width;\n            this.height = height;\n            this.currentRegion = undefined;\n        },\n\n        /**\n         * Setup the canvas\n         */\n        initTarget: function () {\n            var interactive = !this.options.get('disableInteraction');\n            if (!(this.target = this.$el.simpledraw(this.width, this.height, this.options.get('composite'), interactive))) {\n                this.disabled = true;\n            } else {\n                this.canvasWidth = this.target.pixelWidth;\n                this.canvasHeight = this.target.pixelHeight;\n            }\n        },\n\n        /**\n         * Actually render the chart to the canvas\n         */\n        render: function () {\n            if (this.disabled) {\n                this.el.innerHTML = '';\n                return false;\n            }\n            return true;\n        },\n\n        /**\n         * Return a region id for a given x/y co-ordinate\n         */\n        getRegion: function (x, y) {\n        },\n\n        /**\n         * Highlight an item based on the moused-over x,y co-ordinate\n         */\n        setRegionHighlight: function (el, x, y) {\n            var currentRegion = this.currentRegion,\n                highlightEnabled = !this.options.get('disableHighlight'),\n                newRegion;\n            if (x > this.canvasWidth || y > this.canvasHeight || x < 0 || y < 0) {\n                return null;\n            }\n            newRegion = this.getRegion(el, x, y);\n            if (currentRegion !== newRegion) {\n                if (currentRegion !== undefined && highlightEnabled) {\n                    this.removeHighlight();\n                }\n                this.currentRegion = newRegion;\n                if (newRegion !== undefined && highlightEnabled) {\n                    this.renderHighlight();\n                }\n                return true;\n            }\n            return false;\n        },\n\n        /**\n         * Reset any currently highlighted item\n         */\n        clearRegionHighlight: function () {\n            if (this.currentRegion !== undefined) {\n                this.removeHighlight();\n                this.currentRegion = undefined;\n                return true;\n            }\n            return false;\n        },\n\n        renderHighlight: function () {\n            this.changeHighlight(true);\n        },\n\n        removeHighlight: function () {\n            this.changeHighlight(false);\n        },\n\n        changeHighlight: function (highlight)  {},\n\n        /**\n         * Fetch the HTML to display as a tooltip\n         */\n        getCurrentRegionTooltip: function () {\n            var options = this.options,\n                header = '',\n                entries = [],\n                fields, formats, formatlen, fclass, text, i,\n                showFields, showFieldsKey, newFields, fv,\n                formatter, format, fieldlen, j;\n            if (this.currentRegion === undefined) {\n                return '';\n            }\n            fields = this.getCurrentRegionFields();\n            formatter = options.get('tooltipFormatter');\n            if (formatter) {\n                return formatter(this, options, fields);\n            }\n            if (options.get('tooltipChartTitle')) {\n                header += '<div class=\"jqs jqstitle\">' + options.get('tooltipChartTitle') + '</div>\\n';\n            }\n            formats = this.options.get('tooltipFormat');\n            if (!formats) {\n                return '';\n            }\n            if (!$.isArray(formats)) {\n                formats = [formats];\n            }\n            if (!$.isArray(fields)) {\n                fields = [fields];\n            }\n            showFields = this.options.get('tooltipFormatFieldlist');\n            showFieldsKey = this.options.get('tooltipFormatFieldlistKey');\n            if (showFields && showFieldsKey) {\n                // user-selected ordering of fields\n                newFields = [];\n                for (i = fields.length; i--;) {\n                    fv = fields[i][showFieldsKey];\n                    if ((j = $.inArray(fv, showFields)) != -1) {\n                        newFields[j] = fields[i];\n                    }\n                }\n                fields = newFields;\n            }\n            formatlen = formats.length;\n            fieldlen = fields.length;\n            for (i = 0; i < formatlen; i++) {\n                format = formats[i];\n                if (typeof format === 'string') {\n                    format = new SPFormat(format);\n                }\n                fclass = format.fclass || 'jqsfield';\n                for (j = 0; j < fieldlen; j++) {\n                    if (!fields[j].isNull || !options.get('tooltipSkipNull')) {\n                        $.extend(fields[j], {\n                            prefix: options.get('tooltipPrefix'),\n                            suffix: options.get('tooltipSuffix')\n                        });\n                        text = format.render(fields[j], options.get('tooltipValueLookups'), options);\n                        entries.push('<div class=\"' + fclass + '\">' + text + '</div>');\n                    }\n                }\n            }\n            if (entries.length) {\n                return header + entries.join('\\n');\n            }\n            return '';\n        },\n\n        getCurrentRegionFields: function () {},\n\n        calcHighlightColor: function (color, options) {\n            var highlightColor = options.get('highlightColor'),\n                lighten = options.get('highlightLighten'),\n                parse, mult, rgbnew, i;\n            if (highlightColor) {\n                return highlightColor;\n            }\n            if (lighten) {\n                // extract RGB values\n                parse = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(color) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color);\n                if (parse) {\n                    rgbnew = [];\n                    mult = color.length === 4 ? 16 : 1;\n                    for (i = 0; i < 3; i++) {\n                        rgbnew[i] = clipval(Math.round(parseInt(parse[i + 1], 16) * mult * lighten), 0, 255);\n                    }\n                    return 'rgb(' + rgbnew.join(',') + ')';\n                }\n\n            }\n            return color;\n        }\n\n    });\n\n    barHighlightMixin = {\n        changeHighlight: function (highlight) {\n            var currentRegion = this.currentRegion,\n                target = this.target,\n                shapeids = this.regionShapes[currentRegion],\n                newShapes;\n            // will be null if the region value was null\n            if (shapeids) {\n                newShapes = this.renderRegion(currentRegion, highlight);\n                if ($.isArray(newShapes) || $.isArray(shapeids)) {\n                    target.replaceWithShapes(shapeids, newShapes);\n                    this.regionShapes[currentRegion] = $.map(newShapes, function (newShape) {\n                        return newShape.id;\n                    });\n                } else {\n                    target.replaceWithShape(shapeids, newShapes);\n                    this.regionShapes[currentRegion] = newShapes.id;\n                }\n            }\n        },\n\n        render: function () {\n            var values = this.values,\n                target = this.target,\n                regionShapes = this.regionShapes,\n                shapes, ids, i, j;\n\n            if (!this.cls._super.render.call(this)) {\n                return;\n            }\n            for (i = values.length; i--;) {\n                shapes = this.renderRegion(i);\n                if (shapes) {\n                    if ($.isArray(shapes)) {\n                        ids = [];\n                        for (j = shapes.length; j--;) {\n                            shapes[j].append();\n                            ids.push(shapes[j].id);\n                        }\n                        regionShapes[i] = ids;\n                    } else {\n                        shapes.append();\n                        regionShapes[i] = shapes.id; // store just the shapeid\n                    }\n                } else {\n                    // null value\n                    regionShapes[i] = null;\n                }\n            }\n            target.render();\n        }\n    };\n\n\n    /**\n     * Line charts\n     */\n    $.fn.sparkline.line = line = createClass($.fn.sparkline._base, {\n        type: 'line',\n\n        init: function (el, values, options, width, height) {\n            line._super.init.call(this, el, values, options, width, height);\n            this.vertices = [];\n            this.regionMap = [];\n            this.xvalues = [];\n            this.yvalues = [];\n            this.yminmax = [];\n            this.hightlightSpotId = null;\n            this.lastShapeId = null;\n            this.initTarget();\n        },\n\n        getRegion: function (el, x, y) {\n            var i,\n                regionMap = this.regionMap; // maps regions to value positions\n            for (i = regionMap.length; i--;) {\n                if (regionMap[i] !== null && x >= regionMap[i][0] && x <= regionMap[i][1]) {\n                    return regionMap[i][2];\n                }\n            }\n            return undefined;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.yvalues[currentRegion] === null,\n                x: this.xvalues[currentRegion],\n                y: this.yvalues[currentRegion],\n                color: this.options.get('lineColor'),\n                fillColor: this.options.get('fillColor'),\n                offset: currentRegion\n            };\n        },\n\n        renderHighlight: function () {\n            var currentRegion = this.currentRegion,\n                target = this.target,\n                vertex = this.vertices[currentRegion],\n                options = this.options,\n                spotRadius = options.get('spotRadius'),\n                highlightSpotColor = options.get('highlightSpotColor'),\n                highlightLineColor = options.get('highlightLineColor'),\n                highlightSpot, highlightLine;\n\n            if (!vertex) {\n                return;\n            }\n            if (spotRadius && highlightSpotColor) {\n                highlightSpot = target.drawCircle(vertex[0], vertex[1],\n                    spotRadius, undefined, highlightSpotColor);\n                this.highlightSpotId = highlightSpot.id;\n                target.insertAfterShape(this.lastShapeId, highlightSpot);\n            }\n            if (highlightLineColor) {\n                highlightLine = target.drawLine(vertex[0], this.canvasTop, vertex[0],\n                    this.canvasTop + this.canvasHeight, highlightLineColor);\n                this.highlightLineId = highlightLine.id;\n                target.insertAfterShape(this.lastShapeId, highlightLine);\n            }\n        },\n\n        removeHighlight: function () {\n            var target = this.target;\n            if (this.highlightSpotId) {\n                target.removeShapeId(this.highlightSpotId);\n                this.highlightSpotId = null;\n            }\n            if (this.highlightLineId) {\n                target.removeShapeId(this.highlightLineId);\n                this.highlightLineId = null;\n            }\n        },\n\n        scanValues: function () {\n            var values = this.values,\n                valcount = values.length,\n                xvalues = this.xvalues,\n                yvalues = this.yvalues,\n                yminmax = this.yminmax,\n                i, val, isStr, isArray, sp;\n            for (i = 0; i < valcount; i++) {\n                val = values[i];\n                isStr = typeof(values[i]) === 'string';\n                isArray = typeof(values[i]) === 'object' && values[i] instanceof Array;\n                sp = isStr && values[i].split(':');\n                if (isStr && sp.length === 2) { // x:y\n                    xvalues.push(Number(sp[0]));\n                    yvalues.push(Number(sp[1]));\n                    yminmax.push(Number(sp[1]));\n                } else if (isArray) {\n                    xvalues.push(val[0]);\n                    yvalues.push(val[1]);\n                    yminmax.push(val[1]);\n                } else {\n                    xvalues.push(i);\n                    if (values[i] === null || values[i] === 'null') {\n                        yvalues.push(null);\n                    } else {\n                        yvalues.push(Number(val));\n                        yminmax.push(Number(val));\n                    }\n                }\n            }\n            if (this.options.get('xvalues')) {\n                xvalues = this.options.get('xvalues');\n            }\n\n            this.maxy = this.maxyorg = Math.max.apply(Math, yminmax);\n            this.miny = this.minyorg = Math.min.apply(Math, yminmax);\n\n            this.maxx = Math.max.apply(Math, xvalues);\n            this.minx = Math.min.apply(Math, xvalues);\n\n            this.xvalues = xvalues;\n            this.yvalues = yvalues;\n            this.yminmax = yminmax;\n\n        },\n\n        processRangeOptions: function () {\n            var options = this.options,\n                normalRangeMin = options.get('normalRangeMin'),\n                normalRangeMax = options.get('normalRangeMax');\n\n            if (normalRangeMin !== undefined) {\n                if (normalRangeMin < this.miny) {\n                    this.miny = normalRangeMin;\n                }\n                if (normalRangeMax > this.maxy) {\n                    this.maxy = normalRangeMax;\n                }\n            }\n            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.miny)) {\n                this.miny = options.get('chartRangeMin');\n            }\n            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.maxy)) {\n                this.maxy = options.get('chartRangeMax');\n            }\n            if (options.get('chartRangeMinX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMinX') < this.minx)) {\n                this.minx = options.get('chartRangeMinX');\n            }\n            if (options.get('chartRangeMaxX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMaxX') > this.maxx)) {\n                this.maxx = options.get('chartRangeMaxX');\n            }\n\n        },\n\n        drawNormalRange: function (canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey) {\n            var normalRangeMin = this.options.get('normalRangeMin'),\n                normalRangeMax = this.options.get('normalRangeMax'),\n                ytop = canvasTop + Math.round(canvasHeight - (canvasHeight * ((normalRangeMax - this.miny) / rangey))),\n                height = Math.round((canvasHeight * (normalRangeMax - normalRangeMin)) / rangey);\n            this.target.drawRect(canvasLeft, ytop, canvasWidth, height, undefined, this.options.get('normalRangeColor')).append();\n        },\n\n        render: function () {\n            var options = this.options,\n                target = this.target,\n                canvasWidth = this.canvasWidth,\n                canvasHeight = this.canvasHeight,\n                vertices = this.vertices,\n                spotRadius = options.get('spotRadius'),\n                regionMap = this.regionMap,\n                rangex, rangey, yvallast,\n                canvasTop, canvasLeft,\n                vertex, path, paths, x, y, xnext, xpos, xposnext,\n                last, next, yvalcount, lineShapes, fillShapes, plen,\n                valueSpots, hlSpotsEnabled, color, xvalues, yvalues, i;\n\n            if (!line._super.render.call(this)) {\n                return;\n            }\n\n            this.scanValues();\n            this.processRangeOptions();\n\n            xvalues = this.xvalues;\n            yvalues = this.yvalues;\n\n            if (!this.yminmax.length || this.yvalues.length < 2) {\n                // empty or all null valuess\n                return;\n            }\n\n            canvasTop = canvasLeft = 0;\n\n            rangex = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx;\n            rangey = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny;\n            yvallast = this.yvalues.length - 1;\n\n            if (spotRadius && (canvasWidth < (spotRadius * 4) || canvasHeight < (spotRadius * 4))) {\n                spotRadius = 0;\n            }\n            if (spotRadius) {\n                // adjust the canvas size as required so that spots will fit\n                hlSpotsEnabled = options.get('highlightSpotColor') &&  !options.get('disableInteraction');\n                if (hlSpotsEnabled || options.get('minSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.miny)) {\n                    canvasHeight -= Math.ceil(spotRadius);\n                }\n                if (hlSpotsEnabled || options.get('maxSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.maxy)) {\n                    canvasHeight -= Math.ceil(spotRadius);\n                    canvasTop += Math.ceil(spotRadius);\n                }\n                if (hlSpotsEnabled ||\n                     ((options.get('minSpotColor') || options.get('maxSpotColor')) && (yvalues[0] === this.miny || yvalues[0] === this.maxy))) {\n                    canvasLeft += Math.ceil(spotRadius);\n                    canvasWidth -= Math.ceil(spotRadius);\n                }\n                if (hlSpotsEnabled || options.get('spotColor') ||\n                    (options.get('minSpotColor') || options.get('maxSpotColor') &&\n                        (yvalues[yvallast] === this.miny || yvalues[yvallast] === this.maxy))) {\n                    canvasWidth -= Math.ceil(spotRadius);\n                }\n            }\n\n\n            canvasHeight--;\n\n            if (options.get('normalRangeMin') !== undefined && !options.get('drawNormalOnTop')) {\n                this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);\n            }\n\n            path = [];\n            paths = [path];\n            last = next = null;\n            yvalcount = yvalues.length;\n            for (i = 0; i < yvalcount; i++) {\n                x = xvalues[i];\n                xnext = xvalues[i + 1];\n                y = yvalues[i];\n                xpos = canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex));\n                xposnext = i < yvalcount - 1 ? canvasLeft + Math.round((xnext - this.minx) * (canvasWidth / rangex)) : canvasWidth;\n                next = xpos + ((xposnext - xpos) / 2);\n                regionMap[i] = [last || 0, next, i];\n                last = next;\n                if (y === null) {\n                    if (i) {\n                        if (yvalues[i - 1] !== null) {\n                            path = [];\n                            paths.push(path);\n                        }\n                        vertices.push(null);\n                    }\n                } else {\n                    if (y < this.miny) {\n                        y = this.miny;\n                    }\n                    if (y > this.maxy) {\n                        y = this.maxy;\n                    }\n                    if (!path.length) {\n                        // previous value was null\n                        path.push([xpos, canvasTop + canvasHeight]);\n                    }\n                    vertex = [xpos, canvasTop + Math.round(canvasHeight - (canvasHeight * ((y - this.miny) / rangey)))];\n                    path.push(vertex);\n                    vertices.push(vertex);\n                }\n            }\n\n            lineShapes = [];\n            fillShapes = [];\n            plen = paths.length;\n            for (i = 0; i < plen; i++) {\n                path = paths[i];\n                if (path.length) {\n                    if (options.get('fillColor')) {\n                        path.push([path[path.length - 1][0], (canvasTop + canvasHeight)]);\n                        fillShapes.push(path.slice(0));\n                        path.pop();\n                    }\n                    // if there's only a single point in this path, then we want to display it\n                    // as a vertical line which means we keep path[0]  as is\n                    if (path.length > 2) {\n                        // else we want the first value\n                        path[0] = [path[0][0], path[1][1]];\n                    }\n                    lineShapes.push(path);\n                }\n            }\n\n            // draw the fill first, then optionally the normal range, then the line on top of that\n            plen = fillShapes.length;\n            for (i = 0; i < plen; i++) {\n                target.drawShape(fillShapes[i],\n                    options.get('fillColor'), options.get('fillColor')).append();\n            }\n\n            if (options.get('normalRangeMin') !== undefined && options.get('drawNormalOnTop')) {\n                this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);\n            }\n\n            plen = lineShapes.length;\n            for (i = 0; i < plen; i++) {\n                target.drawShape(lineShapes[i], options.get('lineColor'), undefined,\n                    options.get('lineWidth')).append();\n            }\n\n            if (spotRadius && options.get('valueSpots')) {\n                valueSpots = options.get('valueSpots');\n                if (valueSpots.get === undefined) {\n                    valueSpots = new RangeMap(valueSpots);\n                }\n                for (i = 0; i < yvalcount; i++) {\n                    color = valueSpots.get(yvalues[i]);\n                    if (color) {\n                        target.drawCircle(canvasLeft + Math.round((xvalues[i] - this.minx) * (canvasWidth / rangex)),\n                            canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[i] - this.miny) / rangey))),\n                            spotRadius, undefined,\n                            color).append();\n                    }\n                }\n\n            }\n            if (spotRadius && options.get('spotColor') && yvalues[yvallast] !== null) {\n                target.drawCircle(canvasLeft + Math.round((xvalues[xvalues.length - 1] - this.minx) * (canvasWidth / rangex)),\n                    canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[yvallast] - this.miny) / rangey))),\n                    spotRadius, undefined,\n                    options.get('spotColor')).append();\n            }\n            if (this.maxy !== this.minyorg) {\n                if (spotRadius && options.get('minSpotColor')) {\n                    x = xvalues[$.inArray(this.minyorg, yvalues)];\n                    target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),\n                        canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.minyorg - this.miny) / rangey))),\n                        spotRadius, undefined,\n                        options.get('minSpotColor')).append();\n                }\n                if (spotRadius && options.get('maxSpotColor')) {\n                    x = xvalues[$.inArray(this.maxyorg, yvalues)];\n                    target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),\n                        canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.maxyorg - this.miny) / rangey))),\n                        spotRadius, undefined,\n                        options.get('maxSpotColor')).append();\n                }\n            }\n\n            this.lastShapeId = target.getLastShapeId();\n            this.canvasTop = canvasTop;\n            target.render();\n        }\n    });\n\n\n    /**\n     * Bar charts\n     */\n    $.fn.sparkline.bar = bar = createClass($.fn.sparkline._base, barHighlightMixin, {\n        type: 'bar',\n\n        init: function (el, values, options, width, height) {\n            var barWidth = parseInt(options.get('barWidth'), 10),\n                barSpacing = parseInt(options.get('barSpacing'), 10),\n                chartRangeMin = options.get('chartRangeMin'),\n                chartRangeMax = options.get('chartRangeMax'),\n                chartRangeClip = options.get('chartRangeClip'),\n                stackMin = Infinity,\n                stackMax = -Infinity,\n                isStackString, groupMin, groupMax, stackRanges,\n                numValues, i, vlen, range, zeroAxis, xaxisOffset, min, max, clipMin, clipMax,\n                stacked, vlist, j, slen, svals, val, yoffset, yMaxCalc, canvasHeightEf;\n            bar._super.init.call(this, el, values, options, width, height);\n\n            // scan values to determine whether to stack bars\n            for (i = 0, vlen = values.length; i < vlen; i++) {\n                val = values[i];\n                isStackString = typeof(val) === 'string' && val.indexOf(':') > -1;\n                if (isStackString || $.isArray(val)) {\n                    stacked = true;\n                    if (isStackString) {\n                        val = values[i] = normalizeValues(val.split(':'));\n                    }\n                    val = remove(val, null); // min/max will treat null as zero\n                    groupMin = Math.min.apply(Math, val);\n                    groupMax = Math.max.apply(Math, val);\n                    if (groupMin < stackMin) {\n                        stackMin = groupMin;\n                    }\n                    if (groupMax > stackMax) {\n                        stackMax = groupMax;\n                    }\n                }\n            }\n\n            this.stacked = stacked;\n            this.regionShapes = {};\n            this.barWidth = barWidth;\n            this.barSpacing = barSpacing;\n            this.totalBarWidth = barWidth + barSpacing;\n            this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);\n\n            this.initTarget();\n\n            if (chartRangeClip) {\n                clipMin = chartRangeMin === undefined ? -Infinity : chartRangeMin;\n                clipMax = chartRangeMax === undefined ? Infinity : chartRangeMax;\n            }\n\n            numValues = [];\n            stackRanges = stacked ? [] : numValues;\n            var stackTotals = [];\n            var stackRangesNeg = [];\n            for (i = 0, vlen = values.length; i < vlen; i++) {\n                if (stacked) {\n                    vlist = values[i];\n                    values[i] = svals = [];\n                    stackTotals[i] = 0;\n                    stackRanges[i] = stackRangesNeg[i] = 0;\n                    for (j = 0, slen = vlist.length; j < slen; j++) {\n                        val = svals[j] = chartRangeClip ? clipval(vlist[j], clipMin, clipMax) : vlist[j];\n                        if (val !== null) {\n                            if (val > 0) {\n                                stackTotals[i] += val;\n                            }\n                            if (stackMin < 0 && stackMax > 0) {\n                                if (val < 0) {\n                                    stackRangesNeg[i] += Math.abs(val);\n                                } else {\n                                    stackRanges[i] += val;\n                                }\n                            } else {\n                                stackRanges[i] += Math.abs(val - (val < 0 ? stackMax : stackMin));\n                            }\n                            numValues.push(val);\n                        }\n                    }\n                } else {\n                    val = chartRangeClip ? clipval(values[i], clipMin, clipMax) : values[i];\n                    val = values[i] = normalizeValue(val);\n                    if (val !== null) {\n                        numValues.push(val);\n                    }\n                }\n            }\n            this.max = max = Math.max.apply(Math, numValues);\n            this.min = min = Math.min.apply(Math, numValues);\n            this.stackMax = stackMax = stacked ? Math.max.apply(Math, stackTotals) : max;\n            this.stackMin = stackMin = stacked ? Math.min.apply(Math, numValues) : min;\n\n            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < min)) {\n                min = options.get('chartRangeMin');\n            }\n            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > max)) {\n                max = options.get('chartRangeMax');\n            }\n\n            this.zeroAxis = zeroAxis = options.get('zeroAxis', true);\n            if (min <= 0 && max >= 0 && zeroAxis) {\n                xaxisOffset = 0;\n            } else if (zeroAxis == false) {\n                xaxisOffset = min;\n            } else if (min > 0) {\n                xaxisOffset = min;\n            } else {\n                xaxisOffset = max;\n            }\n            this.xaxisOffset = xaxisOffset;\n\n            range = stacked ? (Math.max.apply(Math, stackRanges) + Math.max.apply(Math, stackRangesNeg)) : max - min;\n\n            // as we plot zero/min values a single pixel line, we add a pixel to all other\n            // values - Reduce the effective canvas size to suit\n            this.canvasHeightEf = (zeroAxis && min < 0) ? this.canvasHeight - 2 : this.canvasHeight - 1;\n\n            if (min < xaxisOffset) {\n                yMaxCalc = (stacked && max >= 0) ? stackMax : max;\n                yoffset = (yMaxCalc - xaxisOffset) / range * this.canvasHeight;\n                if (yoffset !== Math.ceil(yoffset)) {\n                    this.canvasHeightEf -= 2;\n                    yoffset = Math.ceil(yoffset);\n                }\n            } else {\n                yoffset = this.canvasHeight;\n            }\n            this.yoffset = yoffset;\n\n            if ($.isArray(options.get('colorMap'))) {\n                this.colorMapByIndex = options.get('colorMap');\n                this.colorMapByValue = null;\n            } else {\n                this.colorMapByIndex = null;\n                this.colorMapByValue = options.get('colorMap');\n                if (this.colorMapByValue && this.colorMapByValue.get === undefined) {\n                    this.colorMapByValue = new RangeMap(this.colorMapByValue);\n                }\n            }\n\n            this.range = range;\n        },\n\n        getRegion: function (el, x, y) {\n            var result = Math.floor(x / this.totalBarWidth);\n            return (result < 0 || result >= this.values.length) ? undefined : result;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion,\n                values = ensureArray(this.values[currentRegion]),\n                result = [],\n                value, i;\n            for (i = values.length; i--;) {\n                value = values[i];\n                result.push({\n                    isNull: value === null,\n                    value: value,\n                    color: this.calcColor(i, value, currentRegion),\n                    offset: currentRegion\n                });\n            }\n            return result;\n        },\n\n        calcColor: function (stacknum, value, valuenum) {\n            var colorMapByIndex = this.colorMapByIndex,\n                colorMapByValue = this.colorMapByValue,\n                options = this.options,\n                color, newColor;\n            if (this.stacked) {\n                color = options.get('stackedBarColor');\n            } else {\n                color = (value < 0) ? options.get('negBarColor') : options.get('barColor');\n            }\n            if (value === 0 && options.get('zeroColor') !== undefined) {\n                color = options.get('zeroColor');\n            }\n            if (colorMapByValue && (newColor = colorMapByValue.get(value))) {\n                color = newColor;\n            } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {\n                color = colorMapByIndex[valuenum];\n            }\n            return $.isArray(color) ? color[stacknum % color.length] : color;\n        },\n\n        /**\n         * Render bar(s) for a region\n         */\n        renderRegion: function (valuenum, highlight) {\n            var vals = this.values[valuenum],\n                options = this.options,\n                xaxisOffset = this.xaxisOffset,\n                result = [],\n                range = this.range,\n                stacked = this.stacked,\n                target = this.target,\n                x = valuenum * this.totalBarWidth,\n                canvasHeightEf = this.canvasHeightEf,\n                yoffset = this.yoffset,\n                y, height, color, isNull, yoffsetNeg, i, valcount, val, minPlotted, allMin;\n\n            vals = $.isArray(vals) ? vals : [vals];\n            valcount = vals.length;\n            val = vals[0];\n            isNull = all(null, vals);\n            allMin = all(xaxisOffset, vals, true);\n\n            if (isNull) {\n                if (options.get('nullColor')) {\n                    color = highlight ? options.get('nullColor') : this.calcHighlightColor(options.get('nullColor'), options);\n                    y = (yoffset > 0) ? yoffset - 1 : yoffset;\n                    return target.drawRect(x, y, this.barWidth - 1, 0, color, color);\n                } else {\n                    return undefined;\n                }\n            }\n            yoffsetNeg = yoffset;\n            for (i = 0; i < valcount; i++) {\n                val = vals[i];\n\n                if (stacked && val === xaxisOffset) {\n                    if (!allMin || minPlotted) {\n                        continue;\n                    }\n                    minPlotted = true;\n                }\n\n                if (range > 0) {\n                    height = Math.floor(canvasHeightEf * ((Math.abs(val - xaxisOffset) / range))) + 1;\n                } else {\n                    height = 1;\n                }\n                if (val < xaxisOffset || (val === xaxisOffset && yoffset === 0)) {\n                    y = yoffsetNeg;\n                    yoffsetNeg += height;\n                } else {\n                    y = yoffset - height;\n                    yoffset -= height;\n                }\n                color = this.calcColor(i, val, valuenum);\n                if (highlight) {\n                    color = this.calcHighlightColor(color, options);\n                }\n                result.push(target.drawRect(x, y, this.barWidth - 1, height - 1, color, color));\n            }\n            if (result.length === 1) {\n                return result[0];\n            }\n            return result;\n        }\n    });\n\n\n    /**\n     * Tristate charts\n     */\n    $.fn.sparkline.tristate = tristate = createClass($.fn.sparkline._base, barHighlightMixin, {\n        type: 'tristate',\n\n        init: function (el, values, options, width, height) {\n            var barWidth = parseInt(options.get('barWidth'), 10),\n                barSpacing = parseInt(options.get('barSpacing'), 10);\n            tristate._super.init.call(this, el, values, options, width, height);\n\n            this.regionShapes = {};\n            this.barWidth = barWidth;\n            this.barSpacing = barSpacing;\n            this.totalBarWidth = barWidth + barSpacing;\n            this.values = $.map(values, Number);\n            this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);\n\n            if ($.isArray(options.get('colorMap'))) {\n                this.colorMapByIndex = options.get('colorMap');\n                this.colorMapByValue = null;\n            } else {\n                this.colorMapByIndex = null;\n                this.colorMapByValue = options.get('colorMap');\n                if (this.colorMapByValue && this.colorMapByValue.get === undefined) {\n                    this.colorMapByValue = new RangeMap(this.colorMapByValue);\n                }\n            }\n            this.initTarget();\n        },\n\n        getRegion: function (el, x, y) {\n            return Math.floor(x / this.totalBarWidth);\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.values[currentRegion] === undefined,\n                value: this.values[currentRegion],\n                color: this.calcColor(this.values[currentRegion], currentRegion),\n                offset: currentRegion\n            };\n        },\n\n        calcColor: function (value, valuenum) {\n            var values = this.values,\n                options = this.options,\n                colorMapByIndex = this.colorMapByIndex,\n                colorMapByValue = this.colorMapByValue,\n                color, newColor;\n\n            if (colorMapByValue && (newColor = colorMapByValue.get(value))) {\n                color = newColor;\n            } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {\n                color = colorMapByIndex[valuenum];\n            } else if (values[valuenum] < 0) {\n                color = options.get('negBarColor');\n            } else if (values[valuenum] > 0) {\n                color = options.get('posBarColor');\n            } else {\n                color = options.get('zeroBarColor');\n            }\n            return color;\n        },\n\n        renderRegion: function (valuenum, highlight) {\n            var values = this.values,\n                options = this.options,\n                target = this.target,\n                canvasHeight, height, halfHeight,\n                x, y, color;\n\n            canvasHeight = target.pixelHeight;\n            halfHeight = Math.round(canvasHeight / 2);\n\n            x = valuenum * this.totalBarWidth;\n            if (values[valuenum] < 0) {\n                y = halfHeight;\n                height = halfHeight - 1;\n            } else if (values[valuenum] > 0) {\n                y = 0;\n                height = halfHeight - 1;\n            } else {\n                y = halfHeight - 1;\n                height = 2;\n            }\n            color = this.calcColor(values[valuenum], valuenum);\n            if (color === null) {\n                return;\n            }\n            if (highlight) {\n                color = this.calcHighlightColor(color, options);\n            }\n            return target.drawRect(x, y, this.barWidth - 1, height - 1, color, color);\n        }\n    });\n\n\n    /**\n     * Discrete charts\n     */\n    $.fn.sparkline.discrete = discrete = createClass($.fn.sparkline._base, barHighlightMixin, {\n        type: 'discrete',\n\n        init: function (el, values, options, width, height) {\n            discrete._super.init.call(this, el, values, options, width, height);\n\n            this.regionShapes = {};\n            this.values = values = $.map(values, Number);\n            this.min = Math.min.apply(Math, values);\n            this.max = Math.max.apply(Math, values);\n            this.range = this.max - this.min;\n            this.width = width = options.get('width') === 'auto' ? values.length * 2 : this.width;\n            this.interval = Math.floor(width / values.length);\n            this.itemWidth = width / values.length;\n            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.min)) {\n                this.min = options.get('chartRangeMin');\n            }\n            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.max)) {\n                this.max = options.get('chartRangeMax');\n            }\n            this.initTarget();\n            if (this.target) {\n                this.lineHeight = options.get('lineHeight') === 'auto' ? Math.round(this.canvasHeight * 0.3) : options.get('lineHeight');\n            }\n        },\n\n        getRegion: function (el, x, y) {\n            return Math.floor(x / this.itemWidth);\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.values[currentRegion] === undefined,\n                value: this.values[currentRegion],\n                offset: currentRegion\n            };\n        },\n\n        renderRegion: function (valuenum, highlight) {\n            var values = this.values,\n                options = this.options,\n                min = this.min,\n                max = this.max,\n                range = this.range,\n                interval = this.interval,\n                target = this.target,\n                canvasHeight = this.canvasHeight,\n                lineHeight = this.lineHeight,\n                pheight = canvasHeight - lineHeight,\n                ytop, val, color, x;\n\n            val = clipval(values[valuenum], min, max);\n            x = valuenum * interval;\n            ytop = Math.round(pheight - pheight * ((val - min) / range));\n            color = (options.get('thresholdColor') && val < options.get('thresholdValue')) ? options.get('thresholdColor') : options.get('lineColor');\n            if (highlight) {\n                color = this.calcHighlightColor(color, options);\n            }\n            return target.drawLine(x, ytop, x, ytop + lineHeight, color);\n        }\n    });\n\n\n    /**\n     * Bullet charts\n     */\n    $.fn.sparkline.bullet = bullet = createClass($.fn.sparkline._base, {\n        type: 'bullet',\n\n        init: function (el, values, options, width, height) {\n            var min, max, vals;\n            bullet._super.init.call(this, el, values, options, width, height);\n\n            // values: target, performance, range1, range2, range3\n            this.values = values = normalizeValues(values);\n            // target or performance could be null\n            vals = values.slice();\n            vals[0] = vals[0] === null ? vals[2] : vals[0];\n            vals[1] = values[1] === null ? vals[2] : vals[1];\n            min = Math.min.apply(Math, values);\n            max = Math.max.apply(Math, values);\n            if (options.get('base') === undefined) {\n                min = min < 0 ? min : 0;\n            } else {\n                min = options.get('base');\n            }\n            this.min = min;\n            this.max = max;\n            this.range = max - min;\n            this.shapes = {};\n            this.valueShapes = {};\n            this.regiondata = {};\n            this.width = width = options.get('width') === 'auto' ? '4.0em' : width;\n            this.target = this.$el.simpledraw(width, height, options.get('composite'));\n            if (!values.length) {\n                this.disabled = true;\n            }\n            this.initTarget();\n        },\n\n        getRegion: function (el, x, y) {\n            var shapeid = this.target.getShapeAt(el, x, y);\n            return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                fieldkey: currentRegion.substr(0, 1),\n                value: this.values[currentRegion.substr(1)],\n                region: currentRegion\n            };\n        },\n\n        changeHighlight: function (highlight) {\n            var currentRegion = this.currentRegion,\n                shapeid = this.valueShapes[currentRegion],\n                shape;\n            delete this.shapes[shapeid];\n            switch (currentRegion.substr(0, 1)) {\n                case 'r':\n                    shape = this.renderRange(currentRegion.substr(1), highlight);\n                    break;\n                case 'p':\n                    shape = this.renderPerformance(highlight);\n                    break;\n                case 't':\n                    shape = this.renderTarget(highlight);\n                    break;\n            }\n            this.valueShapes[currentRegion] = shape.id;\n            this.shapes[shape.id] = currentRegion;\n            this.target.replaceWithShape(shapeid, shape);\n        },\n\n        renderRange: function (rn, highlight) {\n            var rangeval = this.values[rn],\n                rangewidth = Math.round(this.canvasWidth * ((rangeval - this.min) / this.range)),\n                color = this.options.get('rangeColors')[rn - 2];\n            if (highlight) {\n                color = this.calcHighlightColor(color, this.options);\n            }\n            return this.target.drawRect(0, 0, rangewidth - 1, this.canvasHeight - 1, color, color);\n        },\n\n        renderPerformance: function (highlight) {\n            var perfval = this.values[1],\n                perfwidth = Math.round(this.canvasWidth * ((perfval - this.min) / this.range)),\n                color = this.options.get('performanceColor');\n            if (highlight) {\n                color = this.calcHighlightColor(color, this.options);\n            }\n            return this.target.drawRect(0, Math.round(this.canvasHeight * 0.3), perfwidth - 1,\n                Math.round(this.canvasHeight * 0.4) - 1, color, color);\n        },\n\n        renderTarget: function (highlight) {\n            var targetval = this.values[0],\n                x = Math.round(this.canvasWidth * ((targetval - this.min) / this.range) - (this.options.get('targetWidth') / 2)),\n                targettop = Math.round(this.canvasHeight * 0.10),\n                targetheight = this.canvasHeight - (targettop * 2),\n                color = this.options.get('targetColor');\n            if (highlight) {\n                color = this.calcHighlightColor(color, this.options);\n            }\n            return this.target.drawRect(x, targettop, this.options.get('targetWidth') - 1, targetheight - 1, color, color);\n        },\n\n        render: function () {\n            var vlen = this.values.length,\n                target = this.target,\n                i, shape;\n            if (!bullet._super.render.call(this)) {\n                return;\n            }\n            for (i = 2; i < vlen; i++) {\n                shape = this.renderRange(i).append();\n                this.shapes[shape.id] = 'r' + i;\n                this.valueShapes['r' + i] = shape.id;\n            }\n            if (this.values[1] !== null) {\n                shape = this.renderPerformance().append();\n                this.shapes[shape.id] = 'p1';\n                this.valueShapes.p1 = shape.id;\n            }\n            if (this.values[0] !== null) {\n                shape = this.renderTarget().append();\n                this.shapes[shape.id] = 't0';\n                this.valueShapes.t0 = shape.id;\n            }\n            target.render();\n        }\n    });\n\n\n    /**\n     * Pie charts\n     */\n    $.fn.sparkline.pie = pie = createClass($.fn.sparkline._base, {\n        type: 'pie',\n\n        init: function (el, values, options, width, height) {\n            var total = 0, i;\n\n            pie._super.init.call(this, el, values, options, width, height);\n\n            this.shapes = {}; // map shape ids to value offsets\n            this.valueShapes = {}; // maps value offsets to shape ids\n            this.values = values = $.map(values, Number);\n\n            if (options.get('width') === 'auto') {\n                this.width = this.height;\n            }\n\n            if (values.length > 0) {\n                for (i = values.length; i--;) {\n                    total += values[i];\n                }\n            }\n            this.total = total;\n            this.initTarget();\n            this.radius = Math.floor(Math.min(this.canvasWidth, this.canvasHeight) / 2);\n        },\n\n        getRegion: function (el, x, y) {\n            var shapeid = this.target.getShapeAt(el, x, y);\n            return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;\n        },\n\n        getCurrentRegionFields: function () {\n            var currentRegion = this.currentRegion;\n            return {\n                isNull: this.values[currentRegion] === undefined,\n                value: this.values[currentRegion],\n                percent: this.values[currentRegion] / this.total * 100,\n                color: this.options.get('sliceColors')[currentRegion % this.options.get('sliceColors').length],\n                offset: currentRegion\n            };\n        },\n\n        changeHighlight: function (highlight) {\n            var currentRegion = this.currentRegion,\n                 newslice = this.renderSlice(currentRegion, highlight),\n                 shapeid = this.valueShapes[currentRegion];\n            delete this.shapes[shapeid];\n            this.target.replaceWithShape(shapeid, newslice);\n            this.valueShapes[currentRegion] = newslice.id;\n            this.shapes[newslice.id] = currentRegion;\n        },\n\n        renderSlice: function (valuenum, highlight) {\n            var target = this.target,\n                options = this.options,\n                radius = this.radius,\n                borderWidth = options.get('borderWidth'),\n                offset = options.get('offset'),\n                circle = 2 * Math.PI,\n                values = this.values,\n                total = this.total,\n                next = offset ? (2*Math.PI)*(offset/360) : 0,\n                start, end, i, vlen, color;\n\n            vlen = values.length;\n            for (i = 0; i < vlen; i++) {\n                start = next;\n                end = next;\n                if (total > 0) {  // avoid divide by zero\n                    end = next + (circle * (values[i] / total));\n                }\n                if (valuenum === i) {\n                    color = options.get('sliceColors')[i % options.get('sliceColors').length];\n                    if (highlight) {\n                        color = this.calcHighlightColor(color, options);\n                    }\n\n                    return target.drawPieSlice(radius, radius, radius - borderWidth, start, end, undefined, color);\n                }\n                next = end;\n            }\n        },\n\n        render: function () {\n            var target = this.target,\n                values = this.values,\n                options = this.options,\n                radius = this.radius,\n                borderWidth = options.get('borderWidth'),\n                shape, i;\n\n            if (!pie._super.render.call(this)) {\n                return;\n            }\n            if (borderWidth) {\n                target.drawCircle(radius, radius, Math.floor(radius - (borderWidth / 2)),\n                    options.get('borderColor'), undefined, borderWidth).append();\n            }\n            for (i = values.length; i--;) {\n                if (values[i]) { // don't render zero values\n                    shape = this.renderSlice(i).append();\n                    this.valueShapes[i] = shape.id; // store just the shapeid\n                    this.shapes[shape.id] = i;\n                }\n            }\n            target.render();\n        }\n    });\n\n\n    /**\n     * Box plots\n     */\n    $.fn.sparkline.box = box = createClass($.fn.sparkline._base, {\n        type: 'box',\n\n        init: function (el, values, options, width, height) {\n            box._super.init.call(this, el, values, options, width, height);\n            this.values = $.map(values, Number);\n            this.width = options.get('width') === 'auto' ? '4.0em' : width;\n            this.initTarget();\n            if (!this.values.length) {\n                this.disabled = 1;\n            }\n        },\n\n        /**\n         * Simulate a single region\n         */\n        getRegion: function () {\n            return 1;\n        },\n\n        getCurrentRegionFields: function () {\n            var result = [\n                { field: 'lq', value: this.quartiles[0] },\n                { field: 'med', value: this.quartiles[1] },\n                { field: 'uq', value: this.quartiles[2] }\n            ];\n            if (this.loutlier !== undefined) {\n                result.push({ field: 'lo', value: this.loutlier});\n            }\n            if (this.routlier !== undefined) {\n                result.push({ field: 'ro', value: this.routlier});\n            }\n            if (this.lwhisker !== undefined) {\n                result.push({ field: 'lw', value: this.lwhisker});\n            }\n            if (this.rwhisker !== undefined) {\n                result.push({ field: 'rw', value: this.rwhisker});\n            }\n            return result;\n        },\n\n        render: function () {\n            var target = this.target,\n                values = this.values,\n                vlen = values.length,\n                options = this.options,\n                canvasWidth = this.canvasWidth,\n                canvasHeight = this.canvasHeight,\n                minValue = options.get('chartRangeMin') === undefined ? Math.min.apply(Math, values) : options.get('chartRangeMin'),\n                maxValue = options.get('chartRangeMax') === undefined ? Math.max.apply(Math, values) : options.get('chartRangeMax'),\n                canvasLeft = 0,\n                lwhisker, loutlier, iqr, q1, q2, q3, rwhisker, routlier, i,\n                size, unitSize;\n\n            if (!box._super.render.call(this)) {\n                return;\n            }\n\n            if (options.get('raw')) {\n                if (options.get('showOutliers') && values.length > 5) {\n                    loutlier = values[0];\n                    lwhisker = values[1];\n                    q1 = values[2];\n                    q2 = values[3];\n                    q3 = values[4];\n                    rwhisker = values[5];\n                    routlier = values[6];\n                } else {\n                    lwhisker = values[0];\n                    q1 = values[1];\n                    q2 = values[2];\n                    q3 = values[3];\n                    rwhisker = values[4];\n                }\n            } else {\n                values.sort(function (a, b) { return a - b; });\n                q1 = quartile(values, 1);\n                q2 = quartile(values, 2);\n                q3 = quartile(values, 3);\n                iqr = q3 - q1;\n                if (options.get('showOutliers')) {\n                    lwhisker = rwhisker = undefined;\n                    for (i = 0; i < vlen; i++) {\n                        if (lwhisker === undefined && values[i] > q1 - (iqr * options.get('outlierIQR'))) {\n                            lwhisker = values[i];\n                        }\n                        if (values[i] < q3 + (iqr * options.get('outlierIQR'))) {\n                            rwhisker = values[i];\n                        }\n                    }\n                    loutlier = values[0];\n                    routlier = values[vlen - 1];\n                } else {\n                    lwhisker = values[0];\n                    rwhisker = values[vlen - 1];\n                }\n            }\n            this.quartiles = [q1, q2, q3];\n            this.lwhisker = lwhisker;\n            this.rwhisker = rwhisker;\n            this.loutlier = loutlier;\n            this.routlier = routlier;\n\n            unitSize = canvasWidth / (maxValue - minValue + 1);\n            if (options.get('showOutliers')) {\n                canvasLeft = Math.ceil(options.get('spotRadius'));\n                canvasWidth -= 2 * Math.ceil(options.get('spotRadius'));\n                unitSize = canvasWidth / (maxValue - minValue + 1);\n                if (loutlier < lwhisker) {\n                    target.drawCircle((loutlier - minValue) * unitSize + canvasLeft,\n                        canvasHeight / 2,\n                        options.get('spotRadius'),\n                        options.get('outlierLineColor'),\n                        options.get('outlierFillColor')).append();\n                }\n                if (routlier > rwhisker) {\n                    target.drawCircle((routlier - minValue) * unitSize + canvasLeft,\n                        canvasHeight / 2,\n                        options.get('spotRadius'),\n                        options.get('outlierLineColor'),\n                        options.get('outlierFillColor')).append();\n                }\n            }\n\n            // box\n            target.drawRect(\n                Math.round((q1 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight * 0.1),\n                Math.round((q3 - q1) * unitSize),\n                Math.round(canvasHeight * 0.8),\n                options.get('boxLineColor'),\n                options.get('boxFillColor')).append();\n            // left whisker\n            target.drawLine(\n                Math.round((lwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                Math.round((q1 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                options.get('lineColor')).append();\n            target.drawLine(\n                Math.round((lwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 4),\n                Math.round((lwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight - canvasHeight / 4),\n                options.get('whiskerColor')).append();\n            // right whisker\n            target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                Math.round((q3 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 2),\n                options.get('lineColor')).append();\n            target.drawLine(\n                Math.round((rwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight / 4),\n                Math.round((rwhisker - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight - canvasHeight / 4),\n                options.get('whiskerColor')).append();\n            // median line\n            target.drawLine(\n                Math.round((q2 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight * 0.1),\n                Math.round((q2 - minValue) * unitSize + canvasLeft),\n                Math.round(canvasHeight * 0.9),\n                options.get('medianColor')).append();\n            if (options.get('target')) {\n                size = Math.ceil(options.get('spotRadius'));\n                target.drawLine(\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft),\n                    Math.round((canvasHeight / 2) - size),\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft),\n                    Math.round((canvasHeight / 2) + size),\n                    options.get('targetColor')).append();\n                target.drawLine(\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft - size),\n                    Math.round(canvasHeight / 2),\n                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft + size),\n                    Math.round(canvasHeight / 2),\n                    options.get('targetColor')).append();\n            }\n            target.render();\n        }\n    });\n\n\n    // Setup a very simple \"virtual canvas\" to make drawing the few shapes we need easier\n    // This is accessible as $(foo).simpledraw()\n\n    VShape = createClass({\n        init: function (target, id, type, args) {\n            this.target = target;\n            this.id = id;\n            this.type = type;\n            this.args = args;\n        },\n        append: function () {\n            this.target.appendShape(this);\n            return this;\n        }\n    });\n\n    VCanvas_base = createClass({\n        _pxregex: /(\\d+)(px)?\\s*$/i,\n\n        init: function (width, height, target) {\n            if (!width) {\n                return;\n            }\n            this.width = width;\n            this.height = height;\n            this.target = target;\n            this.lastShapeId = null;\n            if (target[0]) {\n                target = target[0];\n            }\n            $.data(target, '_jqs_vcanvas', this);\n        },\n\n        drawLine: function (x1, y1, x2, y2, lineColor, lineWidth) {\n            return this.drawShape([[x1, y1], [x2, y2]], lineColor, lineWidth);\n        },\n\n        drawShape: function (path, lineColor, fillColor, lineWidth) {\n            return this._genShape('Shape', [path, lineColor, fillColor, lineWidth]);\n        },\n\n        drawCircle: function (x, y, radius, lineColor, fillColor, lineWidth) {\n            return this._genShape('Circle', [x, y, radius, lineColor, fillColor, lineWidth]);\n        },\n\n        drawPieSlice: function (x, y, radius, startAngle, endAngle, lineColor, fillColor) {\n            return this._genShape('PieSlice', [x, y, radius, startAngle, endAngle, lineColor, fillColor]);\n        },\n\n        drawRect: function (x, y, width, height, lineColor, fillColor) {\n            return this._genShape('Rect', [x, y, width, height, lineColor, fillColor]);\n        },\n\n        getElement: function () {\n            return this.canvas;\n        },\n\n        /**\n         * Return the most recently inserted shape id\n         */\n        getLastShapeId: function () {\n            return this.lastShapeId;\n        },\n\n        /**\n         * Clear and reset the canvas\n         */\n        reset: function () {\n            alert('reset not implemented');\n        },\n\n        _insert: function (el, target) {\n            $(target).html(el);\n        },\n\n        /**\n         * Calculate the pixel dimensions of the canvas\n         */\n        _calculatePixelDims: function (width, height, canvas) {\n            // XXX This should probably be a configurable option\n            var match;\n            match = this._pxregex.exec(height);\n            if (match) {\n                this.pixelHeight = match[1];\n            } else {\n                this.pixelHeight = $(canvas).height();\n            }\n            match = this._pxregex.exec(width);\n            if (match) {\n                this.pixelWidth = match[1];\n            } else {\n                this.pixelWidth = $(canvas).width();\n            }\n        },\n\n        /**\n         * Generate a shape object and id for later rendering\n         */\n        _genShape: function (shapetype, shapeargs) {\n            var id = shapeCount++;\n            shapeargs.unshift(id);\n            return new VShape(this, id, shapetype, shapeargs);\n        },\n\n        /**\n         * Add a shape to the end of the render queue\n         */\n        appendShape: function (shape) {\n            alert('appendShape not implemented');\n        },\n\n        /**\n         * Replace one shape with another\n         */\n        replaceWithShape: function (shapeid, shape) {\n            alert('replaceWithShape not implemented');\n        },\n\n        /**\n         * Insert one shape after another in the render queue\n         */\n        insertAfterShape: function (shapeid, shape) {\n            alert('insertAfterShape not implemented');\n        },\n\n        /**\n         * Remove a shape from the queue\n         */\n        removeShapeId: function (shapeid) {\n            alert('removeShapeId not implemented');\n        },\n\n        /**\n         * Find a shape at the specified x/y co-ordinates\n         */\n        getShapeAt: function (el, x, y) {\n            alert('getShapeAt not implemented');\n        },\n\n        /**\n         * Render all queued shapes onto the canvas\n         */\n        render: function () {\n            alert('render not implemented');\n        }\n    });\n\n\n    VCanvas_canvas = createClass(VCanvas_base, {\n        init: function (width, height, target, interact) {\n            VCanvas_canvas._super.init.call(this, width, height, target);\n            this.canvas = document.createElement('canvas');\n            if (target[0]) {\n                target = target[0];\n            }\n            $.data(target, '_jqs_vcanvas', this);\n            $(this.canvas).css({ display: 'inline-block', width: width, height: height, verticalAlign: 'top' });\n            this._insert(this.canvas, target);\n            this._calculatePixelDims(width, height, this.canvas);\n            this.canvas.width = this.pixelWidth;\n            this.canvas.height = this.pixelHeight;\n            this.interact = interact;\n            this.shapes = {};\n            this.shapeseq = [];\n            this.currentTargetShapeId = undefined;\n            $(this.canvas).css({width: this.pixelWidth, height: this.pixelHeight});\n        },\n\n        _getContext: function (lineColor, fillColor, lineWidth) {\n            var context = this.canvas.getContext('2d');\n            if (lineColor !== undefined) {\n                context.strokeStyle = lineColor;\n            }\n            context.lineWidth = lineWidth === undefined ? 1 : lineWidth;\n            if (fillColor !== undefined) {\n                context.fillStyle = fillColor;\n            }\n            return context;\n        },\n\n        reset: function () {\n            var context = this._getContext();\n            context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);\n            this.shapes = {};\n            this.shapeseq = [];\n            this.currentTargetShapeId = undefined;\n        },\n\n        _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {\n            var context = this._getContext(lineColor, fillColor, lineWidth),\n                i, plen;\n            context.beginPath();\n            context.moveTo(path[0][0] + 0.5, path[0][1] + 0.5);\n            for (i = 1, plen = path.length; i < plen; i++) {\n                context.lineTo(path[i][0] + 0.5, path[i][1] + 0.5); // the 0.5 offset gives us crisp pixel-width lines\n            }\n            if (lineColor !== undefined) {\n                context.stroke();\n            }\n            if (fillColor !== undefined) {\n                context.fill();\n            }\n            if (this.targetX !== undefined && this.targetY !== undefined &&\n                context.isPointInPath(this.targetX, this.targetY)) {\n                this.currentTargetShapeId = shapeid;\n            }\n        },\n\n        _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {\n            var context = this._getContext(lineColor, fillColor, lineWidth);\n            context.beginPath();\n            context.arc(x, y, radius, 0, 2 * Math.PI, false);\n            if (this.targetX !== undefined && this.targetY !== undefined &&\n                context.isPointInPath(this.targetX, this.targetY)) {\n                this.currentTargetShapeId = shapeid;\n            }\n            if (lineColor !== undefined) {\n                context.stroke();\n            }\n            if (fillColor !== undefined) {\n                context.fill();\n            }\n        },\n\n        _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {\n            var context = this._getContext(lineColor, fillColor);\n            context.beginPath();\n            context.moveTo(x, y);\n            context.arc(x, y, radius, startAngle, endAngle, false);\n            context.lineTo(x, y);\n            context.closePath();\n            if (lineColor !== undefined) {\n                context.stroke();\n            }\n            if (fillColor) {\n                context.fill();\n            }\n            if (this.targetX !== undefined && this.targetY !== undefined &&\n                context.isPointInPath(this.targetX, this.targetY)) {\n                this.currentTargetShapeId = shapeid;\n            }\n        },\n\n        _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {\n            return this._drawShape(shapeid, [[x, y], [x + width, y], [x + width, y + height], [x, y + height], [x, y]], lineColor, fillColor);\n        },\n\n        appendShape: function (shape) {\n            this.shapes[shape.id] = shape;\n            this.shapeseq.push(shape.id);\n            this.lastShapeId = shape.id;\n            return shape.id;\n        },\n\n        replaceWithShape: function (shapeid, shape) {\n            var shapeseq = this.shapeseq,\n                i;\n            this.shapes[shape.id] = shape;\n            for (i = shapeseq.length; i--;) {\n                if (shapeseq[i] == shapeid) {\n                    shapeseq[i] = shape.id;\n                }\n            }\n            delete this.shapes[shapeid];\n        },\n\n        replaceWithShapes: function (shapeids, shapes) {\n            var shapeseq = this.shapeseq,\n                shapemap = {},\n                sid, i, first;\n\n            for (i = shapeids.length; i--;) {\n                shapemap[shapeids[i]] = true;\n            }\n            for (i = shapeseq.length; i--;) {\n                sid = shapeseq[i];\n                if (shapemap[sid]) {\n                    shapeseq.splice(i, 1);\n                    delete this.shapes[sid];\n                    first = i;\n                }\n            }\n            for (i = shapes.length; i--;) {\n                shapeseq.splice(first, 0, shapes[i].id);\n                this.shapes[shapes[i].id] = shapes[i];\n            }\n\n        },\n\n        insertAfterShape: function (shapeid, shape) {\n            var shapeseq = this.shapeseq,\n                i;\n            for (i = shapeseq.length; i--;) {\n                if (shapeseq[i] === shapeid) {\n                    shapeseq.splice(i + 1, 0, shape.id);\n                    this.shapes[shape.id] = shape;\n                    return;\n                }\n            }\n        },\n\n        removeShapeId: function (shapeid) {\n            var shapeseq = this.shapeseq,\n                i;\n            for (i = shapeseq.length; i--;) {\n                if (shapeseq[i] === shapeid) {\n                    shapeseq.splice(i, 1);\n                    break;\n                }\n            }\n            delete this.shapes[shapeid];\n        },\n\n        getShapeAt: function (el, x, y) {\n            this.targetX = x;\n            this.targetY = y;\n            this.render();\n            return this.currentTargetShapeId;\n        },\n\n        render: function () {\n            var shapeseq = this.shapeseq,\n                shapes = this.shapes,\n                shapeCount = shapeseq.length,\n                context = this._getContext(),\n                shapeid, shape, i;\n            context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);\n            for (i = 0; i < shapeCount; i++) {\n                shapeid = shapeseq[i];\n                shape = shapes[shapeid];\n                this['_draw' + shape.type].apply(this, shape.args);\n            }\n            if (!this.interact) {\n                // not interactive so no need to keep the shapes array\n                this.shapes = {};\n                this.shapeseq = [];\n            }\n        }\n\n    });\n\n\n    VCanvas_vml = createClass(VCanvas_base, {\n        init: function (width, height, target) {\n            var groupel;\n            VCanvas_vml._super.init.call(this, width, height, target);\n            if (target[0]) {\n                target = target[0];\n            }\n            $.data(target, '_jqs_vcanvas', this);\n            this.canvas = document.createElement('span');\n            $(this.canvas).css({ display: 'inline-block', position: 'relative', overflow: 'hidden', width: width, height: height, margin: '0px', padding: '0px', verticalAlign: 'top'});\n            this._insert(this.canvas, target);\n            this._calculatePixelDims(width, height, this.canvas);\n            this.canvas.width = this.pixelWidth;\n            this.canvas.height = this.pixelHeight;\n            groupel = '<v:group coordorigin=\"0 0\" coordsize=\"' + this.pixelWidth + ' ' + this.pixelHeight + '\"' +\n                    ' style=\"position:absolute;top:0;left:0;width:' + this.pixelWidth + 'px;height=' + this.pixelHeight + 'px;\"></v:group>';\n            this.canvas.insertAdjacentHTML('beforeEnd', groupel);\n            this.group = $(this.canvas).children()[0];\n            this.rendered = false;\n            this.prerender = '';\n        },\n\n        _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {\n            var vpath = [],\n                initial, stroke, fill, closed, vel, plen, i;\n            for (i = 0, plen = path.length; i < plen; i++) {\n                vpath[i] = '' + (path[i][0]) + ',' + (path[i][1]);\n            }\n            initial = vpath.splice(0, 1);\n            lineWidth = lineWidth === undefined ? 1 : lineWidth;\n            stroke = lineColor === undefined ? ' stroked=\"false\" ' : ' strokeWeight=\"' + lineWidth + 'px\" strokeColor=\"' + lineColor + '\" ';\n            fill = fillColor === undefined ? ' filled=\"false\"' : ' fillColor=\"' + fillColor + '\" filled=\"true\" ';\n            closed = vpath[0] === vpath[vpath.length - 1] ? 'x ' : '';\n            vel = '<v:shape coordorigin=\"0 0\" coordsize=\"' + this.pixelWidth + ' ' + this.pixelHeight + '\" ' +\n                 ' id=\"jqsshape' + shapeid + '\" ' +\n                 stroke +\n                 fill +\n                ' style=\"position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;\" ' +\n                ' path=\"m ' + initial + ' l ' + vpath.join(', ') + ' ' + closed + 'e\">' +\n                ' </v:shape>';\n            return vel;\n        },\n\n        _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {\n            var stroke, fill, vel;\n            x -= radius;\n            y -= radius;\n            stroke = lineColor === undefined ? ' stroked=\"false\" ' : ' strokeWeight=\"' + lineWidth + 'px\" strokeColor=\"' + lineColor + '\" ';\n            fill = fillColor === undefined ? ' filled=\"false\"' : ' fillColor=\"' + fillColor + '\" filled=\"true\" ';\n            vel = '<v:oval ' +\n                 ' id=\"jqsshape' + shapeid + '\" ' +\n                stroke +\n                fill +\n                ' style=\"position:absolute;top:' + y + 'px; left:' + x + 'px; width:' + (radius * 2) + 'px; height:' + (radius * 2) + 'px\"></v:oval>';\n            return vel;\n\n        },\n\n        _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {\n            var vpath, startx, starty, endx, endy, stroke, fill, vel;\n            if (startAngle === endAngle) {\n                return '';  // VML seems to have problem when start angle equals end angle.\n            }\n            if ((endAngle - startAngle) === (2 * Math.PI)) {\n                startAngle = 0.0;  // VML seems to have a problem when drawing a full circle that doesn't start 0\n                endAngle = (2 * Math.PI);\n            }\n\n            startx = x + Math.round(Math.cos(startAngle) * radius);\n            starty = y + Math.round(Math.sin(startAngle) * radius);\n            endx = x + Math.round(Math.cos(endAngle) * radius);\n            endy = y + Math.round(Math.sin(endAngle) * radius);\n\n            if (startx === endx && starty === endy) {\n                if ((endAngle - startAngle) < Math.PI) {\n                    // Prevent very small slices from being mistaken as a whole pie\n                    return '';\n                }\n                // essentially going to be the entire circle, so ignore startAngle\n                startx = endx = x + radius;\n                starty = endy = y;\n            }\n\n            if (startx === endx && starty === endy && (endAngle - startAngle) < Math.PI) {\n                return '';\n            }\n\n            vpath = [x - radius, y - radius, x + radius, y + radius, startx, starty, endx, endy];\n            stroke = lineColor === undefined ? ' stroked=\"false\" ' : ' strokeWeight=\"1px\" strokeColor=\"' + lineColor + '\" ';\n            fill = fillColor === undefined ? ' filled=\"false\"' : ' fillColor=\"' + fillColor + '\" filled=\"true\" ';\n            vel = '<v:shape coordorigin=\"0 0\" coordsize=\"' + this.pixelWidth + ' ' + this.pixelHeight + '\" ' +\n                 ' id=\"jqsshape' + shapeid + '\" ' +\n                 stroke +\n                 fill +\n                ' style=\"position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;\" ' +\n                ' path=\"m ' + x + ',' + y + ' wa ' + vpath.join(', ') + ' x e\">' +\n                ' </v:shape>';\n            return vel;\n        },\n\n        _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {\n            return this._drawShape(shapeid, [[x, y], [x, y + height], [x + width, y + height], [x + width, y], [x, y]], lineColor, fillColor);\n        },\n\n        reset: function () {\n            this.group.innerHTML = '';\n        },\n\n        appendShape: function (shape) {\n            var vel = this['_draw' + shape.type].apply(this, shape.args);\n            if (this.rendered) {\n                this.group.insertAdjacentHTML('beforeEnd', vel);\n            } else {\n                this.prerender += vel;\n            }\n            this.lastShapeId = shape.id;\n            return shape.id;\n        },\n\n        replaceWithShape: function (shapeid, shape) {\n            var existing = $('#jqsshape' + shapeid),\n                vel = this['_draw' + shape.type].apply(this, shape.args);\n            existing[0].outerHTML = vel;\n        },\n\n        replaceWithShapes: function (shapeids, shapes) {\n            // replace the first shapeid with all the new shapes then toast the remaining old shapes\n            var existing = $('#jqsshape' + shapeids[0]),\n                replace = '',\n                slen = shapes.length,\n                i;\n            for (i = 0; i < slen; i++) {\n                replace += this['_draw' + shapes[i].type].apply(this, shapes[i].args);\n            }\n            existing[0].outerHTML = replace;\n            for (i = 1; i < shapeids.length; i++) {\n                $('#jqsshape' + shapeids[i]).remove();\n            }\n        },\n\n        insertAfterShape: function (shapeid, shape) {\n            var existing = $('#jqsshape' + shapeid),\n                 vel = this['_draw' + shape.type].apply(this, shape.args);\n            existing[0].insertAdjacentHTML('afterEnd', vel);\n        },\n\n        removeShapeId: function (shapeid) {\n            var existing = $('#jqsshape' + shapeid);\n            this.group.removeChild(existing[0]);\n        },\n\n        getShapeAt: function (el, x, y) {\n            var shapeid = el.id.substr(8);\n            return shapeid;\n        },\n\n        render: function () {\n            if (!this.rendered) {\n                // batch the intial render into a single repaint\n                this.group.innerHTML = this.prerender;\n                this.rendered = true;\n            }\n        }\n    });\n\n\n}))}(document, Math));\n"},590:function(e,t,n){n(581)(n(589))},591:function(e,t){!function(e,t,n,i){function a(t,n){this.obj=e(t),this.o=e.extend({},e.fn[o].defaults,n),this.objId=this.obj.attr("id"),this.pwCtrls=".jarviswidget-ctrls",this.widget=this.obj.find(this.o.widgets),this.toggleClass=this.o.toggleClass.split("|"),this.editClass=this.o.editClass.split("|"),this.fullscreenClass=this.o.fullscreenClass.split("|"),this.customClass=this.o.customClass.split("|"),this.storage={enabled:this.o.localStorage},this.initialized=!1,this.init()}var o="jarvisWidgets",s=("ontouchstart"in t||t.DocumentTouch&&n instanceof DocumentTouch?"touchstart":"click")+"."+o;a.prototype={_runLoaderWidget:function(e){var t=this;!0===t.o.indicator&&e.parents(t.o.widgets).find(".jarviswidget-loader:first").stop(!0,!0).fadeIn(100).delay(t.o.indicatorTime).fadeOut(100)},_getPastTimestamp:function(e){var t=this,n=new Date(e),i=n.getMonth()+1,a=n.getDate(),o=n.getFullYear(),s=n.getHours(),r=n.getMinutes(),l=n.getUTCSeconds();return i<10&&(i="0"+i),a<10&&(a="0"+a),s<10&&(s="0"+s),r<10&&(r="0"+r),l<10&&(l="0"+l),t.o.timestampFormat.replace(/%d%/g,a).replace(/%m%/g,i).replace(/%y%/g,o).replace(/%h%/g,s).replace(/%i%/g,r).replace(/%s%/g,l)},_loadAjaxFile:function(t,n,i){var a=this;t.find(".widget-body").load(n,function(n,i,o){var s=e(this);if("error"==i&&s.html('<h4 class="alert alert-danger">'+a.o.labelError+"<b> "+o.status+" "+o.statusText+"</b></h4>"),"success"==i){var r=t.find(a.o.timestampPlaceholder);r.length&&r.html(a._getPastTimestamp(new Date)),"function"==typeof a.o.afterLoad&&a.o.afterLoad.call(this,t)}a=null}),this._runLoaderWidget(i)},_loadKeys:function(){var e=this;if(!0===e.o.ajaxnav){var t=location.hash.replace(/^#/,"");e.storage.keySettings="Plugin_settings_"+t+"_"+e.objId,e.storage.keyPosition="Plugin_position_"+t+"_"+e.objId}else if(!1===e.initialized){var t=e.o.pageKey||location.pathname;e.storage.keySettings="jarvisWidgets_settings_"+t+"_"+e.objId,e.storage.keyPosition="jarvisWidgets_position_"+t+"_"+e.objId}},_saveSettingsWidget:function(){var t=this,n=t.storage;t._loadKeys();var i=t.obj.find(t.o.widgets).map(function(){var t={};return t.id=e(this).attr("id"),t.style=e(this).attr("data-widget-attstyle"),t.title=e(this).children("header").children("h2").text(),t.hidden="none"==e(this).css("display")?1:0,t.collapsed=e(this).hasClass("jarviswidget-collapsed")?1:0,t}).get(),a=JSON.stringify({widget:i});n.enabled&&n.getKeySettings!=a&&(localStorage.setItem(n.keySettings,a),n.getKeySettings=a),"function"==typeof t.o.onSave&&t.o.onSave.call(this,null,a,n.keySettings)},_savePositionWidget:function(){var t=this,n=t.storage;t._loadKeys();var i=t.obj.find(t.o.grid+".sortable-grid").map(function(){return{section:e(this).children(t.o.widgets).map(function(){return{id:e(this).attr("id")}}).get()}}).get(),a=JSON.stringify({grid:i});n.enabled&&n.getKeyPosition!=a&&(localStorage.setItem(n.keyPosition,a),n.getKeyPosition=a),"function"==typeof t.o.onSave&&t.o.onSave.call(this,a,n.keyPosition)},init:function(){var t=this;if(!t.initialized){if(t._initStorage(t.storage),e("#"+t.objId).length||alert("It looks like your using a class instead of an ID, dont do that!"),!0===t.o.rtl&&e("body").addClass("rtl"),e(t.o.grid).each(function(){e(this).find(t.o.widgets).length&&e(this).addClass("sortable-grid")}),t.storage.enabled&&t.storage.getKeyPosition){var n=JSON.parse(t.storage.getKeyPosition);for(var i in n.grid){var a=t.obj.find(t.o.grid+".sortable-grid").eq(i);for(var r in n.grid[i].section)a.append(e("#"+n.grid[i].section[r].id))}}if(t.storage.enabled&&t.storage.getKeySettings){var l=JSON.parse(t.storage.getKeySettings);for(var i in l.widget){var h=e("#"+l.widget[i].id);l.widget[i].style&&h.removeClassPrefix("jarviswidget-color-").addClass(l.widget[i].style).attr("data-widget-attstyle",""+l.widget[i].style),1==l.widget[i].hidden?h.hide(1):h.show(1).removeAttr("data-widget-hidden"),1==l.widget[i].collapsed&&h.addClass("jarviswidget-collapsed").children("div").hide(1),h.children("header").children("h2").text()!=l.widget[i].title&&h.children("header").children("h2").text(l.widget[i].title)}}if(t.widget.each(function(){var n,i,a,o,s,r,l,h,p=e(this),c=e(this).children("header");if(!c.parent().attr("role")){!0===p.data("widget-hidden")&&p.hide(),!0===p.data("widget-collapsed")&&p.addClass("jarviswidget-collapsed").children("div").hide(),n=!0===t.o.customButton&&void 0===p.data("widget-custombutton")&&0!==t.customClass[0].length?'<a href="javascript:void(0);" class="button-icon jarviswidget-custom-btn"><i class="'+t.customClass[0]+'"></i></a>':"",i=!0===t.o.deleteButton&&void 0===p.data("widget-deletebutton")?'<a href="javascript:void(0);" class="button-icon jarviswidget-delete-btn" rel="tooltip" title="Delete" data-placement="bottom"><i class="'+t.o.deleteClass+'"></i></a>':"",a=!0===t.o.editButton&&void 0===p.data("widget-editbutton")?'<a href="javascript:void(0);" class="button-icon jarviswidget-edit-btn" rel="tooltip" title="Edit" data-placement="bottom"><i class="'+t.editClass[0]+'"></i></a>':"",o=!0===t.o.fullscreenButton&&void 0===p.data("widget-fullscreenbutton")?'<a href="javascript:void(0);" class="button-icon jarviswidget-fullscreen-btn" rel="tooltip" title="Fullscreen" data-placement="bottom"><i class="'+t.fullscreenClass[0]+'"></i></a>':"",!0===t.o.colorButton&&void 0===p.data("widget-colorbutton")?(s='<a data-toggle="dropdown" class="dropdown-toggle color-box selector" href="javascript:void(0);"></a><ul class="dropdown-menu arrow-box-up-right color-select pull-right"><li><span class="bg-color-green" data-widget-setstyle="jarviswidget-color-green" rel="tooltip" data-placement="left" data-original-title="Green Grass"></span></li><li><span class="bg-color-greenDark" data-widget-setstyle="jarviswidget-color-greenDark" rel="tooltip" data-placement="top" data-original-title="Dark Green"></span></li><li><span class="bg-color-greenLight" data-widget-setstyle="jarviswidget-color-greenLight" rel="tooltip" data-placement="top" data-original-title="Light Green"></span></li><li><span class="bg-color-purple" data-widget-setstyle="jarviswidget-color-purple" rel="tooltip" data-placement="top" data-original-title="Purple"></span></li><li><span class="bg-color-magenta" data-widget-setstyle="jarviswidget-color-magenta" rel="tooltip" data-placement="top" data-original-title="Magenta"></span></li><li><span class="bg-color-pink" data-widget-setstyle="jarviswidget-color-pink" rel="tooltip" data-placement="right" data-original-title="Pink"></span></li><li><span class="bg-color-pinkDark" data-widget-setstyle="jarviswidget-color-pinkDark" rel="tooltip" data-placement="left" data-original-title="Fade Pink"></span></li><li><span class="bg-color-blueLight" data-widget-setstyle="jarviswidget-color-blueLight" rel="tooltip" data-placement="top" data-original-title="Light Blue"></span></li><li><span class="bg-color-teal" data-widget-setstyle="jarviswidget-color-teal" rel="tooltip" data-placement="top" data-original-title="Teal"></span></li><li><span class="bg-color-blue" data-widget-setstyle="jarviswidget-color-blue" rel="tooltip" data-placement="top" data-original-title="Ocean Blue"></span></li><li><span class="bg-color-blueDark" data-widget-setstyle="jarviswidget-color-blueDark" rel="tooltip" data-placement="top" data-original-title="Night Sky"></span></li><li><span class="bg-color-darken" data-widget-setstyle="jarviswidget-color-darken" rel="tooltip" data-placement="right" data-original-title="Night"></span></li><li><span class="bg-color-yellow" data-widget-setstyle="jarviswidget-color-yellow" rel="tooltip" data-placement="left" data-original-title="Day Light"></span></li><li><span class="bg-color-orange" data-widget-setstyle="jarviswidget-color-orange" rel="tooltip" data-placement="bottom" data-original-title="Orange"></span></li><li><span class="bg-color-orangeDark" data-widget-setstyle="jarviswidget-color-orangeDark" rel="tooltip" data-placement="bottom" data-original-title="Dark Orange"></span></li><li><span class="bg-color-red" data-widget-setstyle="jarviswidget-color-red" rel="tooltip" data-placement="bottom" data-original-title="Red Rose"></span></li><li><span class="bg-color-redLight" data-widget-setstyle="jarviswidget-color-redLight" rel="tooltip" data-placement="bottom" data-original-title="Light Red"></span></li><li><span class="bg-color-white" data-widget-setstyle="jarviswidget-color-white" rel="tooltip" data-placement="right" data-original-title="Purity"></span></li><li><a href="javascript:void(0);" class="jarviswidget-remove-colors" data-widget-setstyle="" rel="tooltip" data-placement="bottom" data-original-title="Reset widget color to default">Remove</a></li></ul>',c.prepend('<div class="widget-toolbar">'+s+"</div>")):s="",!0===t.o.toggleButton&&void 0===p.data("widget-togglebutton")?(l=!0===p.data("widget-collapsed")||p.hasClass("jarviswidget-collapsed")?t.toggleClass[1]:t.toggleClass[0],r='<a href="javascript:void(0);" class="button-icon jarviswidget-toggle-btn" rel="tooltip" title="Collapse" data-placement="bottom"><i class="'+l+'"></i></a>'):r="",h=!0===t.o.refreshButton&&!1!==p.data("widget-refreshbutton")&&p.data("widget-load")?'<a href="javascript:void(0);" class="button-icon jarviswidget-refresh-btn" data-loading-text="&nbsp;&nbsp;Loading...&nbsp;" rel="tooltip" title="Refresh" data-placement="bottom"><i class="'+t.o.refreshButtonClass+'"></i></a>':"";var d=t.o.buttonOrder.replace(/%refresh%/g,h).replace(/%delete%/g,i).replace(/%custom%/g,n).replace(/%fullscreen%/g,o).replace(/%edit%/g,a).replace(/%toggle%/g,r);""===h&&""===i&&""===n&&""===o&&""===a&&""===r||c.prepend('<div class="jarviswidget-ctrls">'+d+"</div>"),!0===t.o.sortable&&void 0===p.data("widget-sortable")&&p.addClass("jarviswidget-sortable"),p.find(t.o.editPlaceholder).length&&p.find(t.o.editPlaceholder).find("input").val(e.trim(c.children("h2").text())),c.append('<span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>'),p.attr("role","widget").children("div").attr("role","content").prev("header").attr("role","heading").children("div").attr("role","menu")}}),!0===t.o.buttonsHidden&&e(t.o.pwCtrls).hide(),t.obj.find("[data-widget-load]").each(function(){var n=e(this),i=n.children(),a=n.data("widget-load"),o=1e3*n.data("widget-refresh");n.children();n.find(".jarviswidget-ajax-placeholder").length||(n.children("widget-body").append('<div class="jarviswidget-ajax-placeholder">'+t.o.loadingLabel+"</div>"),n.data("widget-refresh")>0?(t._loadAjaxFile(n,a,i),e.intervalArr.push(setInterval(function(){t._loadAjaxFile(n,a,i)},o))):t._loadAjaxFile(n,a,i))}),!0===t.o.sortable&&jQuery.ui){var p=t.obj.find(t.o.grid+".sortable-grid").not("[data-widget-excludegrid]");p.sortable({items:p.find(t.o.widgets+".jarviswidget-sortable"),connectWith:p,placeholder:t.o.placeholderClass,cursor:"move",revert:!0,opacity:t.o.opacity,delay:200,cancel:".button-icon, #jarviswidget-fullscreen-mode > div",zIndex:1e4,handle:t.o.dragHandle,forcePlaceholderSize:!0,forceHelperSize:!0,update:function(e,n){t._runLoaderWidget(n.item.children()),t._savePositionWidget(),"function"==typeof t.o.onChange&&t.o.onChange.call(this,n.item)}})}!0===t.o.buttonsHidden&&t.widget.children("header").on("mouseenter."+o,function(){e(this).children(t.o.pwCtrls).stop(!0,!0).fadeTo(100,1)}).on("mouseleave."+o,function(){e(this).children(t.o.pwCtrls).stop(!0,!0).fadeTo(100,0)}),t._clickEvents(),t.storage.enabled&&(e(t.o.deleteSettingsKey).on(s,this,function(e){confirm(t.o.settingsKeyLabel)&&localStorage.removeItem(keySettings),e.preventDefault()}),e(t.o.deletePositionKey).on(s,this,function(e){confirm(t.o.positionKeyLabel)&&localStorage.removeItem(keyPosition),e.preventDefault()})),initialized=!0}},_initStorage:function(e){e.enabled=e.enabled&&!!function(){var e,t=+new Date;try{return localStorage.setItem(t,t),e=localStorage.getItem(t)==t,localStorage.removeItem(t),e}catch(e){}}(),this._loadKeys(),e.enabled&&(e.getKeySettings=localStorage.getItem(e.keySettings),e.getKeyPosition=localStorage.getItem(e.keyPosition))},_clickEvents:function(){function n(){if(e("#jarviswidget-fullscreen-mode").length){var n=e(t).height(),a=e("#jarviswidget-fullscreen-mode").children(i.o.widgets).children("header").height();e("#jarviswidget-fullscreen-mode").children(i.o.widgets).children("div").height(n-a-15)}}var i=this,a=i.widget.children("header");a.on(s,".jarviswidget-toggle-btn",function(t){var n=e(this),a=n.parents(i.o.widgets);i._runLoaderWidget(n),a.hasClass("jarviswidget-collapsed")?n.children().removeClass(i.toggleClass[1]).addClass(i.toggleClass[0]).parents(i.o.widgets).removeClass("jarviswidget-collapsed").children("[role=content]").slideDown(i.o.toggleSpeed,function(){i._saveSettingsWidget()}):n.children().removeClass(i.toggleClass[0]).addClass(i.toggleClass[1]).parents(i.o.widgets).addClass("jarviswidget-collapsed").children("[role=content]").slideUp(i.o.toggleSpeed,function(){i._saveSettingsWidget()}),"function"==typeof i.o.onToggle&&i.o.onToggle.call(this,a),t.preventDefault()}),a.on(s,".jarviswidget-fullscreen-btn",function(t){var a=e(this).parents(i.o.widgets),o=a.children("div");i._runLoaderWidget(e(this)),e("#jarviswidget-fullscreen-mode").length?(e(".nooverflow").removeClass("nooverflow"),a.unwrap("div").children("div").removeAttr("style").end().find(".jarviswidget-fullscreen-btn:first").children().removeClass(i.fullscreenClass[1]).addClass(i.fullscreenClass[0]).parents(i.pwCtrls).children("a").show(),o.hasClass("jarviswidget-visible")&&o.hide().removeClass("jarviswidget-visible")):(e("body").addClass("nooverflow"),a.wrap('<div id="jarviswidget-fullscreen-mode"/>').parent().find(".jarviswidget-fullscreen-btn:first").children().removeClass(i.fullscreenClass[0]).addClass(i.fullscreenClass[1]).parents(i.pwCtrls).children("a:not(.jarviswidget-fullscreen-btn)").hide(),o.is(":hidden")&&o.show().addClass("jarviswidget-visible")),n(),"function"==typeof i.o.onFullscreen&&i.o.onFullscreen.call(this,a),t.preventDefault()}),e(t).on("resize."+o,function(){n()}),a.on(s,".jarviswidget-edit-btn",function(t){var n=e(this).parents(i.o.widgets);i._runLoaderWidget(e(this)),n.find(i.o.editPlaceholder).is(":visible")?e(this).children().removeClass(i.editClass[1]).addClass(i.editClass[0]).parents(i.o.widgets).find(i.o.editPlaceholder).slideUp(i.o.editSpeed,function(){i._saveSettingsWidget()}):e(this).children().removeClass(i.editClass[0]).addClass(i.editClass[1]).parents(i.o.widgets).find(i.o.editPlaceholder).slideDown(i.o.editSpeed),"function"==typeof i.o.onEdit&&i.o.onEdit.call(this,n),t.preventDefault()}),e(i.o.editPlaceholder).find("input").keyup(function(){e(this).parents(i.o.widgets).children("header").children("h2").text(e(this).val())}),a.on(s,"[data-widget-setstyle]",function(t){var n=e(this).data("widget-setstyle"),a="";e(this).parents(i.o.editPlaceholder).find("[data-widget-setstyle]").each(function(){a+=e(this).data("widget-setstyle")+" "}),e(this).parents(i.o.widgets).attr("data-widget-attstyle",""+n).removeClassPrefix("jarviswidget-color-").addClass(n),i._runLoaderWidget(e(this)),i._saveSettingsWidget(),t.preventDefault()}),a.on(s,".jarviswidget-custom-btn",function(t){var n=e(this).parents(i.o.widgets);i._runLoaderWidget(e(this)),e(this).children("."+i.customClass[0]).length?(e(this).children().removeClass(i.customClass[0]).addClass(i.customClass[1]),"function"==typeof i.o.customStart&&i.o.customStart.call(this,n)):(e(this).children().removeClass(i.customClass[1]).addClass(i.customClass[0]),"function"==typeof i.o.customEnd&&i.o.customEnd.call(this,n)),i._saveSettingsWidget(),t.preventDefault()}),a.on(s,".jarviswidget-delete-btn",function(t){var n=e(this).parents(i.o.widgets),a=n.attr("id"),o=n.children("header").children("h2").text();e.SmartMessageBox?e.SmartMessageBox({title:"<i class='fa fa-times' style='color:#ed1c24'></i> "+i.o.labelDelete+' "'+o+'"',content:i.o.deleteMsg,buttons:"[No][Yes]"},function(t){"Yes"==t&&(i._runLoaderWidget(e(this)),e("#"+a).fadeOut(i.o.deleteSpeed,function(){e(this).remove(),"function"==typeof i.o.onDelete&&i.o.onDelete.call(this,n)}))}):e("#"+a).fadeOut(i.o.deleteSpeed,function(){e(this).remove(),"function"==typeof i.o.onDelete&&i.o.onDelete.call(this,n)}),t.preventDefault()}),a.on(s,".jarviswidget-refresh-btn",function(t){var n=e(this).parents(i.o.widgets),a=n.data("widget-load"),o=n.children(),s=e(this);s.button("loading"),o.addClass("widget-body-ajax-loading"),setTimeout(function(){s.button("reset"),o.removeClass("widget-body-ajax-loading"),i._loadAjaxFile(n,a,o)},1e3),t.preventDefault()}),a=null},destroy:function(){var n=this,i="."+o;n.obj.find(n.o.grid+".sortable-grid").not("[data-widget-excludegrid]").sortable("destroy"),n.widget.children("header").off(i),e(n.o.deleteSettingsKey).off(i),e(n.o.deletePositionKey).off(i),e(t).off(i),n.obj.removeData(o)}},e.fn[o]=function(t){return this.each(function(){var n=e(this),i=n.data(o);if(!i){var s="object"==typeof t&&t;n.data(o,i=new a(this,s))}"string"==typeof t&&i[t]()})},e.fn[o].defaults={grid:"section",widgets:".jarviswidget",localStorage:!0,deleteSettingsKey:"",settingsKeyLabel:"Reset settings?",deletePositionKey:"",positionKeyLabel:"Reset position?",sortable:!0,buttonsHidden:!1,toggleButton:!0,toggleClass:"min-10 | plus-10",toggleSpeed:200,onToggle:function(){},deleteButton:!0,deleteMsg:"Warning: This action cannot be undone",deleteClass:"trashcan-10",deleteSpeed:200,onDelete:function(){},editButton:!0,editPlaceholder:".jarviswidget-editbox",editClass:"pencil-10 | delete-10",editSpeed:200,onEdit:function(){},colorButton:!0,fullscreenButton:!0,fullscreenClass:"fullscreen-10 | normalscreen-10",fullscreenDiff:3,onFullscreen:function(){},customButton:!0,customClass:"",customStart:function(){},customEnd:function(){},buttonOrder:"%refresh% %delete% %custom% %edit% %fullscreen% %toggle%",opacity:1,dragHandle:"> header",placeholderClass:"jarviswidget-placeholder",indicator:!0,indicatorTime:600,ajax:!0,loadingLabel:"loading...",timestampPlaceholder:".jarviswidget-timestamp",timestampFormat:"Last update: %m%/%d%/%y% %h%:%i%:%s%",refreshButton:!0,refreshButtonClass:"refresh-10",labelError:"Sorry but there was a error:",labelUpdated:"Last Update:",labelRefresh:"Refresh",labelDelete:"Delete widget:",afterLoad:function(){},rtl:!1,onChange:function(){},onSave:function(){},ajaxnav:!0},e.fn.removeClassPrefix=function(t){return this.each(function(n,i){var a=i.className.split(" ").map(function(e){return 0===e.indexOf(t)?"":e});i.className=e.trim(a.join(" "))}),this}}(jQuery,window,document)},592:function(e,t,n){"use strict";var i=n(585),a=(n(593),n(586)),o=n(588),s=n(583);n.d(t,"d",function(){return i.a}),n.d(t,"a",function(){return a.a}),n.d(t,"c",function(){return o.a}),n.d(t,"b",function(){return s.a})},691:function(e,t,n){"use strict";function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var s=n(0),r=n.n(s),l=n(785),h=(n.n(l),function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}()),p=function(e){function t(){return i(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),h(t,[{key:"componentDidMount",value:function(){this._renderChart(this.props.data)}},{key:"componentWillReceiveProps",value:function(e){JSON.stringify(e.data)!==JSON.stringify(this.props.data)&&this._renderChart(e.data)}},{key:"_renderChart",value:function(e){e&&$.plot(this.container,e,this.props.options)}},{key:"shouldComponentUpdate",value:function(e,t){return JSON.stringify(e.data)!==JSON.stringify(this.props.data)}},{key:"render",value:function(){var e=this,t=this.props.className||"chart";return r.a.createElement("div",{ref:function(t){return e.container=t},className:t})}}]),t}(r.a.Component),c=p;t.a=c;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(p,"FlotChart","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/graphs/flot/FlotChart.js"),__REACT_HOT_LOADER__.register(c,"default","/Volumes/WorkData/Dev/WMS/e-wms/src/app/components/graphs/flot/FlotChart.js"))}()},785:function(e,t){(function(){!function(e){e.color={},e.color.make=function(t,n,i,a){var o={};return o.r=t||0,o.g=n||0,o.b=i||0,o.a=null!=a?a:1,o.add=function(e,t){for(var n=0;n<e.length;++n)o[e.charAt(n)]+=t;return o.normalize()},o.scale=function(e,t){for(var n=0;n<e.length;++n)o[e.charAt(n)]*=t;return o.normalize()},o.toString=function(){return o.a>=1?"rgb("+[o.r,o.g,o.b].join(",")+")":"rgba("+[o.r,o.g,o.b,o.a].join(",")+")"},o.normalize=function(){function e(e,t,n){return e>t?e:t>n?n:t}return o.r=e(0,parseInt(o.r),255),o.g=e(0,parseInt(o.g),255),o.b=e(0,parseInt(o.b),255),o.a=e(0,o.a,1),o},o.clone=function(){return e.color.make(o.r,o.b,o.g,o.a)},o.normalize()},e.color.extract=function(t,n){var i;do{if(""!=(i=t.css(n).toLowerCase())&&"transparent"!=i)break;t=t.parent()}while(t.length&&!e.nodeName(t.get(0),"body"));return"rgba(0, 0, 0, 0)"==i&&(i="transparent"),e.color.parse(i)},e.color.parse=function(n){var i,a=e.color.make;if(i=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(n))return a(parseInt(i[1],10),parseInt(i[2],10),parseInt(i[3],10));if(i=/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n))return a(parseInt(i[1],10),parseInt(i[2],10),parseInt(i[3],10),parseFloat(i[4]));if(i=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(n))return a(2.55*parseFloat(i[1]),2.55*parseFloat(i[2]),2.55*parseFloat(i[3]));if(i=/rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n))return a(2.55*parseFloat(i[1]),2.55*parseFloat(i[2]),2.55*parseFloat(i[3]),parseFloat(i[4]));if(i=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(n))return a(parseInt(i[1],16),parseInt(i[2],16),parseInt(i[3],16));if(i=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(n))return a(parseInt(i[1]+i[1],16),parseInt(i[2]+i[2],16),parseInt(i[3]+i[3],16));var o=e.trim(n).toLowerCase();return"transparent"==o?a(255,255,255,0):(i=t[o]||[0,0,0],a(i[0],i[1],i[2]))};var t={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}}(jQuery),function(e){function t(t,n){var i=n.children("."+t)[0];if(null==i&&(i=document.createElement("canvas"),i.className=t,e(i).css({direction:"ltr",position:"absolute",left:0,top:0}).appendTo(n),!i.getContext)){if(!window.G_vmlCanvasManager)throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");i=window.G_vmlCanvasManager.initElement(i)}this.element=i;var a=this.context=i.getContext("2d"),o=window.devicePixelRatio||1,s=a.webkitBackingStorePixelRatio||a.mozBackingStorePixelRatio||a.msBackingStorePixelRatio||a.oBackingStorePixelRatio||a.backingStorePixelRatio||1;this.pixelRatio=o/s,this.resize(n.width(),n.height()),this.textContainer=null,this.text={},this._textCache={}}function n(n,a,o,s){function r(e,t){t=[de].concat(t);for(var n=0;n<e.length;++n)e[n].apply(this,t)}function l(e){Z=h(e),f(),m()}function h(t){for(var n=[],i=0;i<t.length;++i){var a=e.extend(!0,{},ee.series);null!=t[i].data?(a.data=t[i].data,delete t[i].data,e.extend(!0,a,t[i]),t[i].data=a.data):a.data=t[i],n.push(a)}return n}function p(e,t){var n=e[t+"axis"];return"object"==typeof n&&(n=n.n),"number"!=typeof n&&(n=1),n}function c(){return e.grep(se.concat(re),function(e){return e})}function d(e){var t,n,i={};for(t=0;t<se.length;++t)(n=se[t])&&n.used&&(i["x"+n.n]=n.c2p(e.left));for(t=0;t<re.length;++t)(n=re[t])&&n.used&&(i["y"+n.n]=n.c2p(e.top));return void 0!==i.x1&&(i.x=i.x1),void 0!==i.y1&&(i.y=i.y1),i}function u(e){var t,n,i,a={};for(t=0;t<se.length;++t)if((n=se[t])&&n.used&&(i="x"+n.n,null==e[i]&&1==n.n&&(i="x"),null!=e[i])){a.left=n.p2c(e[i]);break}for(t=0;t<re.length;++t)if((n=re[t])&&n.used&&(i="y"+n.n,null==e[i]&&1==n.n&&(i="y"),null!=e[i])){a.top=n.p2c(e[i]);break}return a}function g(t,n){return t[n-1]||(t[n-1]={n:n,direction:t==se?"x":"y",options:e.extend(!0,{},t==se?ee.xaxis:ee.yaxis)}),t[n-1]}function f(){var t,n=Z.length,i=-1;for(t=0;t<Z.length;++t){var a=Z[t].color;null!=a&&(n--,"number"==typeof a&&a>i&&(i=a))}i>=n&&(n=i+1);var o,s=[],r=ee.colors,l=r.length,h=0;for(t=0;n>t;t++)o=e.color.parse(r[t%l]||"#666"),t%l==0&&t&&(h=h>=0?.5>h?-h-.2:0:-h),s[t]=o.scale("rgb",1+h);var c,d=0;for(t=0;t<Z.length;++t){if(c=Z[t],null==c.color?(c.color=s[d].toString(),++d):"number"==typeof c.color&&(c.color=s[c.color].toString()),null==c.lines.show){var u,f=!0;for(u in c)if(c[u]&&c[u].show){f=!1;break}f&&(c.lines.show=!0)}null==c.lines.zero&&(c.lines.zero=!!c.lines.fill),c.xaxis=g(se,p(c,"x")),c.yaxis=g(re,p(c,"y"))}}function m(){function t(e,t,n){t<e.datamin&&t!=-b&&(e.datamin=t),n>e.datamax&&n!=b&&(e.datamax=n)}var n,i,a,o,s,l,h,p,d,u,g,f,m=Number.POSITIVE_INFINITY,v=Number.NEGATIVE_INFINITY,b=Number.MAX_VALUE;for(e.each(c(),function(e,t){t.datamin=m,t.datamax=v,t.used=!1}),n=0;n<Z.length;++n)s=Z[n],s.datapoints={points:[]},r(ce.processRawData,[s,s.data,s.datapoints]);for(n=0;n<Z.length;++n){if(s=Z[n],g=s.data,!(f=s.datapoints.format)){if(f=[],f.push({x:!0,number:!0,required:!0}),f.push({y:!0,number:!0,required:!0}),s.bars.show||s.lines.show&&s.lines.fill){var x=!!(s.bars.show&&s.bars.zero||s.lines.show&&s.lines.zero);f.push({y:!0,number:!0,required:!1,defaultValue:0,autoscale:x}),s.bars.horizontal&&(delete f[f.length-1].y,f[f.length-1].x=!0)}s.datapoints.format=f}if(null==s.datapoints.pointsize){s.datapoints.pointsize=f.length,h=s.datapoints.pointsize,l=s.datapoints.points;var y=s.lines.show&&s.lines.steps;for(s.xaxis.used=s.yaxis.used=!0,i=a=0;i<g.length;++i,a+=h){u=g[i];var w=null==u;if(!w)for(o=0;h>o;++o)p=u[o],d=f[o],d&&(d.number&&null!=p&&(p=+p,isNaN(p)?p=null:1/0==p?p=b:p==-1/0&&(p=-b)),null==p&&(d.required&&(w=!0),null!=d.defaultValue&&(p=d.defaultValue))),l[a+o]=p;if(w)for(o=0;h>o;++o)p=l[a+o],null!=p&&(d=f[o],!1!==d.autoscale&&(d.x&&t(s.xaxis,p,p),d.y&&t(s.yaxis,p,p))),l[a+o]=null;else if(y&&a>0&&null!=l[a-h]&&l[a-h]!=l[a]&&l[a-h+1]!=l[a+1]){for(o=0;h>o;++o)l[a+h+o]=l[a+o];l[a+1]=l[a-h+1],a+=h}}}}for(n=0;n<Z.length;++n)s=Z[n],r(ce.processDatapoints,[s,s.datapoints]);for(n=0;n<Z.length;++n){s=Z[n],l=s.datapoints.points,h=s.datapoints.pointsize,f=s.datapoints.format;var k=m,C=m,S=v,M=v;for(i=0;i<l.length;i+=h)if(null!=l[i])for(o=0;h>o;++o)p=l[i+o],(d=f[o])&&!1!==d.autoscale&&p!=b&&p!=-b&&(d.x&&(k>p&&(k=p),p>S&&(S=p)),d.y&&(C>p&&(C=p),p>M&&(M=p)));if(s.bars.show){var R;switch(s.bars.align){case"left":R=0;break;case"right":R=-s.bars.barWidth;break;default:R=-s.bars.barWidth/2}s.bars.horizontal?(C+=R,M+=R+s.bars.barWidth):(k+=R,S+=R+s.bars.barWidth)}t(s.xaxis,k,S),t(s.yaxis,C,M)}e.each(c(),function(e,t){t.datamin==m&&(t.datamin=null),t.datamax==v&&(t.datamax=null)})}function v(){ge&&clearTimeout(ge),ie.unbind("mousemove",F),ie.unbind("mouseleave",B),ie.unbind("click",q),r(ce.shutdown,[ie])}function b(e){function t(e){return e}var n,i,a=e.options.transform||t,o=e.options.inverseTransform;"x"==e.direction?(n=e.scale=he/Math.abs(a(e.max)-a(e.min)),i=Math.min(a(e.max),a(e.min))):(n=e.scale=pe/Math.abs(a(e.max)-a(e.min)),n=-n,i=Math.max(a(e.max),a(e.min))),e.p2c=a==t?function(e){return(e-i)*n}:function(e){return(a(e)-i)*n},e.c2p=o?function(e){return o(i+e/n)}:function(e){return i+e/n}}function x(e){for(var t=e.options,n=e.ticks||[],i=t.labelWidth||0,a=t.labelHeight||0,o=i||("x"==e.direction?Math.floor(te.width/(n.length||1)):null),s=e.direction+"Axis "+e.direction+e.n+"Axis",r="flot-"+e.direction+"-axis flot-"+e.direction+e.n+"-axis "+s,l=t.font||"flot-tick-label tickLabel",h=0;h<n.length;++h){var p=n[h];if(p.label){var c=te.getTextInfo(r,p.label,l,null,o);i=Math.max(i,c.width),a=Math.max(a,c.height)}}e.labelWidth=t.labelWidth||i,e.labelHeight=t.labelHeight||a}function y(t){var n=t.labelWidth,i=t.labelHeight,a=t.options.position,o="x"===t.direction,s=t.options.tickLength,r=ee.grid.axisMargin,l=ee.grid.labelMargin,h=!0,p=!0,c=!0,d=!1;e.each(o?se:re,function(e,n){n&&(n.show||n.reserveSpace)&&(n===t?d=!0:n.options.position===a&&(d?p=!1:h=!1),d||(c=!1))}),p&&(r=0),null==s&&(s=c?"full":5),isNaN(+s)||(l+=+s),o?(i+=l,"bottom"==a?(le.bottom+=i+r,t.box={top:te.height-le.bottom,height:i}):(t.box={top:le.top+r,height:i},le.top+=i+r)):(n+=l,"left"==a?(t.box={left:le.left+r,width:n},le.left+=n+r):(le.right+=n+r,t.box={left:te.width-le.right,width:n})),t.position=a,t.tickLength=s,t.box.padding=l,t.innermost=h}function w(e){"x"==e.direction?(e.box.left=le.left-e.labelWidth/2,e.box.width=te.width-le.left-le.right+e.labelWidth):(e.box.top=le.top-e.labelHeight/2,e.box.height=te.height-le.bottom-le.top+e.labelHeight)}function k(){var t,n=ee.grid.minBorderMargin;if(null==n)for(n=0,t=0;t<Z.length;++t)n=Math.max(n,2*(Z[t].points.radius+Z[t].points.lineWidth/2));var i={left:n,right:n,top:n,bottom:n};e.each(c(),function(e,t){t.reserveSpace&&t.ticks&&t.ticks.length&&("x"===t.direction?(i.left=Math.max(i.left,t.labelWidth/2),i.right=Math.max(i.right,t.labelWidth/2)):(i.bottom=Math.max(i.bottom,t.labelHeight/2),i.top=Math.max(i.top,t.labelHeight/2)))}),le.left=Math.ceil(Math.max(i.left,le.left)),le.right=Math.ceil(Math.max(i.right,le.right)),le.top=Math.ceil(Math.max(i.top,le.top)),le.bottom=Math.ceil(Math.max(i.bottom,le.bottom))}function C(){var t,n=c(),i=ee.grid.show;for(var a in le){var o=ee.grid.margin||0;le[a]="number"==typeof o?o:o[a]||0}r(ce.processOffset,[le]);for(var a in le)le[a]+="object"==typeof ee.grid.borderWidth?i?ee.grid.borderWidth[a]:0:i?ee.grid.borderWidth:0;if(e.each(n,function(e,t){var n=t.options;t.show=null==n.show?t.used:n.show,t.reserveSpace=null==n.reserveSpace?t.show:n.reserveSpace,S(t)}),i){var s=e.grep(n,function(e){return e.show||e.reserveSpace});for(e.each(s,function(e,t){M(t),R(t),_(t,t.ticks),x(t)}),t=s.length-1;t>=0;--t)y(s[t]);k(),e.each(s,function(e,t){w(t)})}he=te.width-le.left-le.right,pe=te.height-le.bottom-le.top,e.each(n,function(e,t){b(t)}),i&&D(),N()}function S(e){var t=e.options,n=+(null!=t.min?t.min:e.datamin),i=+(null!=t.max?t.max:e.datamax),a=i-n;if(0==a){var o=0==i?1:.01;null==t.min&&(n-=o),(null==t.max||null!=t.min)&&(i+=o)}else{var s=t.autoscaleMargin;null!=s&&(null==t.min&&0>(n-=a*s)&&null!=e.datamin&&e.datamin>=0&&(n=0),null==t.max&&(i+=a*s)>0&&null!=e.datamax&&e.datamax<=0&&(i=0))}e.min=n,e.max=i}function M(t){var n,a=t.options;n="number"==typeof a.ticks&&a.ticks>0?a.ticks:.3*Math.sqrt("x"==t.direction?te.width:te.height);var o=(t.max-t.min)/n,s=-Math.floor(Math.log(o)/Math.LN10),r=a.tickDecimals;null!=r&&s>r&&(s=r);var l,h=Math.pow(10,-s),p=o/h;if(1.5>p?l=1:3>p?(l=2,p>2.25&&(null==r||r>=s+1)&&(l=2.5,++s)):l=7.5>p?5:10,l*=h,null!=a.minTickSize&&l<a.minTickSize&&(l=a.minTickSize),t.delta=o,t.tickDecimals=Math.max(0,null!=r?r:s),t.tickSize=a.tickSize||l,"time"==a.mode&&!t.tickGenerator)throw new Error("Time mode requires the flot.time plugin.");if(t.tickGenerator||(t.tickGenerator=function(e){var t,n=[],a=i(e.min,e.tickSize),o=0,s=Number.NaN;do{t=s,s=a+o*e.tickSize,n.push(s),++o}while(s<e.max&&s!=t);return n},t.tickFormatter=function(e,t){var n=t.tickDecimals?Math.pow(10,t.tickDecimals):1,i=""+Math.round(e*n)/n;if(null!=t.tickDecimals){var a=i.indexOf("."),o=-1==a?0:i.length-a-1;if(o<t.tickDecimals)return(o?i:i+".")+(""+n).substr(1,t.tickDecimals-o)}return i}),e.isFunction(a.tickFormatter)&&(t.tickFormatter=function(e,t){return""+a.tickFormatter(e,t)}),null!=a.alignTicksWithAxis){var c=("x"==t.direction?se:re)[a.alignTicksWithAxis-1];if(c&&c.used&&c!=t){var d=t.tickGenerator(t);if(d.length>0&&(null==a.min&&(t.min=Math.min(t.min,d[0])),null==a.max&&d.length>1&&(t.max=Math.max(t.max,d[d.length-1]))),t.tickGenerator=function(e){var t,n,i=[];for(n=0;n<c.ticks.length;++n)t=(c.ticks[n].v-c.min)/(c.max-c.min),t=e.min+t*(e.max-e.min),i.push(t);return i},!t.mode&&null==a.tickDecimals){var u=Math.max(0,1-Math.floor(Math.log(t.delta)/Math.LN10)),g=t.tickGenerator(t);g.length>1&&/\..*0$/.test((g[1]-g[0]).toFixed(u))||(t.tickDecimals=u)}}}}function R(t){var n=t.options.ticks,i=[];null==n||"number"==typeof n&&n>0?i=t.tickGenerator(t):n&&(i=e.isFunction(n)?n(t):n);var a,o;for(t.ticks=[],a=0;a<i.length;++a){var s=null,r=i[a];"object"==typeof r?(o=+r[0],r.length>1&&(s=r[1])):o=+r,null==s&&(s=t.tickFormatter(o,t)),isNaN(o)||t.ticks.push({v:o,label:s})}}function _(e,t){e.options.autoscaleMargin&&t.length>0&&(null==e.options.min&&(e.min=Math.min(e.min,t[0].v)),null==e.options.max&&t.length>1&&(e.max=Math.max(e.max,t[t.length-1].v)))}function T(){te.clear(),r(ce.drawBackground,[ae]);var e=ee.grid;e.show&&e.backgroundColor&&E(),e.show&&!e.aboveData&&W();for(var t=0;t<Z.length;++t)r(ce.drawSeries,[ae,Z[t]]),j(Z[t]);r(ce.draw,[ae]),e.show&&e.aboveData&&W(),te.render(),V()}function O(e,t){for(var n,i,a,o,s=c(),r=0;r<s.length;++r)if(n=s[r],n.direction==t&&(o=t+n.n+"axis",e[o]||1!=n.n||(o=t+"axis"),e[o])){i=e[o].from,a=e[o].to;break}if(e[o]||(n="x"==t?se[0]:re[0],i=e[t+"1"],a=e[t+"2"]),null!=i&&null!=a&&i>a){var l=i;i=a,a=l}return{from:i,to:a,axis:n}}function E(){ae.save(),ae.translate(le.left,le.top),ae.fillStyle=J(ee.grid.backgroundColor,pe,0,"rgba(255, 255, 255, 0)"),ae.fillRect(0,0,he,pe),ae.restore()}function W(){var t,n,i,a;ae.save(),ae.translate(le.left,le.top);var o=ee.grid.markings;if(o)for(e.isFunction(o)&&(n=de.getAxes(),n.xmin=n.xaxis.min,n.xmax=n.xaxis.max,n.ymin=n.yaxis.min,n.ymax=n.yaxis.max,o=o(n)),t=0;t<o.length;++t){var s=o[t],r=O(s,"x"),l=O(s,"y");if(null==r.from&&(r.from=r.axis.min),null==r.to&&(r.to=r.axis.max),null==l.from&&(l.from=l.axis.min),null==l.to&&(l.to=l.axis.max),!(r.to<r.axis.min||r.from>r.axis.max||l.to<l.axis.min||l.from>l.axis.max)){r.from=Math.max(r.from,r.axis.min),r.to=Math.min(r.to,r.axis.max),l.from=Math.max(l.from,l.axis.min),l.to=Math.min(l.to,l.axis.max);var h=r.from===r.to,p=l.from===l.to;if(!h||!p)if(r.from=Math.floor(r.axis.p2c(r.from)),r.to=Math.floor(r.axis.p2c(r.to)),l.from=Math.floor(l.axis.p2c(l.from)),l.to=Math.floor(l.axis.p2c(l.to)),h||p){var d=s.lineWidth||ee.grid.markingsLineWidth,u=d%2?.5:0;ae.beginPath(),ae.strokeStyle=s.color||ee.grid.markingsColor,ae.lineWidth=d,h?(ae.moveTo(r.to+u,l.from),ae.lineTo(r.to+u,l.to)):(ae.moveTo(r.from,l.to+u),ae.lineTo(r.to,l.to+u)),ae.stroke()}else ae.fillStyle=s.color||ee.grid.markingsColor,ae.fillRect(r.from,l.to,r.to-r.from,l.from-l.to)}}n=c(),i=ee.grid.borderWidth;for(var g=0;g<n.length;++g){var f,m,v,b,x=n[g],y=x.box,w=x.tickLength;if(x.show&&0!=x.ticks.length){for(ae.lineWidth=1,"x"==x.direction?(f=0,m="full"==w?"top"==x.position?0:pe:y.top-le.top+("top"==x.position?y.height:0)):(m=0,f="full"==w?"left"==x.position?0:he:y.left-le.left+("left"==x.position?y.width:0)),x.innermost||(ae.strokeStyle=x.options.color,ae.beginPath(),v=b=0,"x"==x.direction?v=he+1:b=pe+1,1==ae.lineWidth&&("x"==x.direction?m=Math.floor(m)+.5:f=Math.floor(f)+.5),ae.moveTo(f,m),ae.lineTo(f+v,m+b),ae.stroke()),ae.strokeStyle=x.options.tickColor,ae.beginPath(),t=0;t<x.ticks.length;++t){var k=x.ticks[t].v;v=b=0,isNaN(k)||k<x.min||k>x.max||"full"==w&&("object"==typeof i&&i[x.position]>0||i>0)&&(k==x.min||k==x.max)||("x"==x.direction?(f=x.p2c(k),b="full"==w?-pe:w,"top"==x.position&&(b=-b)):(m=x.p2c(k),v="full"==w?-he:w,"left"==x.position&&(v=-v)),1==ae.lineWidth&&("x"==x.direction?f=Math.floor(f)+.5:m=Math.floor(m)+.5),ae.moveTo(f,m),ae.lineTo(f+v,m+b))}ae.stroke()}}i&&(a=ee.grid.borderColor,"object"==typeof i||"object"==typeof a?("object"!=typeof i&&(i={top:i,right:i,bottom:i,left:i}),"object"!=typeof a&&(a={top:a,right:a,bottom:a,left:a}),i.top>0&&(ae.strokeStyle=a.top,ae.lineWidth=i.top,ae.beginPath(),ae.moveTo(0-i.left,0-i.top/2),ae.lineTo(he,0-i.top/2),ae.stroke()),i.right>0&&(ae.strokeStyle=a.right,ae.lineWidth=i.right,ae.beginPath(),ae.moveTo(he+i.right/2,0-i.top),ae.lineTo(he+i.right/2,pe),ae.stroke()),i.bottom>0&&(ae.strokeStyle=a.bottom,ae.lineWidth=i.bottom,ae.beginPath(),ae.moveTo(he+i.right,pe+i.bottom/2),ae.lineTo(0,pe+i.bottom/2),ae.stroke()),i.left>0&&(ae.strokeStyle=a.left,ae.lineWidth=i.left,ae.beginPath(),ae.moveTo(0-i.left/2,pe+i.bottom),ae.lineTo(0-i.left/2,0),ae.stroke())):(ae.lineWidth=i,ae.strokeStyle=ee.grid.borderColor,ae.strokeRect(-i/2,-i/2,he+i,pe+i))),ae.restore()}function D(){e.each(c(),function(e,t){var n,i,a,o,s,r=t.box,l=t.direction+"Axis "+t.direction+t.n+"Axis",h="flot-"+t.direction+"-axis flot-"+t.direction+t.n+"-axis "+l,p=t.options.font||"flot-tick-label tickLabel";if(te.removeText(h),t.show&&0!=t.ticks.length)for(var c=0;c<t.ticks.length;++c)n=t.ticks[c],!n.label||n.v<t.min||n.v>t.max||("x"==t.direction?(o="center",i=le.left+t.p2c(n.v),"bottom"==t.position?a=r.top+r.padding:(a=r.top+r.height-r.padding,s="bottom")):(s="middle",a=le.top+t.p2c(n.v),"left"==t.position?(i=r.left+r.width-r.padding,o="right"):i=r.left+r.padding),te.addText(h,i,a,n.label,p,null,null,o,s))})}function j(e){e.lines.show&&A(e),e.bars.show&&L(e),e.points.show&&H(e)}function A(e){function t(e,t,n,i,a){var o=e.points,s=e.pointsize,r=null,l=null;ae.beginPath();for(var h=s;h<o.length;h+=s){var p=o[h-s],c=o[h-s+1],d=o[h],u=o[h+1];if(null!=p&&null!=d){if(u>=c&&c<a.min){if(u<a.min)continue;p=(a.min-c)/(u-c)*(d-p)+p,c=a.min}else if(c>=u&&u<a.min){if(c<a.min)continue;d=(a.min-c)/(u-c)*(d-p)+p,u=a.min}if(c>=u&&c>a.max){if(u>a.max)continue;p=(a.max-c)/(u-c)*(d-p)+p,c=a.max}else if(u>=c&&u>a.max){if(c>a.max)continue;d=(a.max-c)/(u-c)*(d-p)+p,u=a.max}if(d>=p&&p<i.min){if(d<i.min)continue;c=(i.min-p)/(d-p)*(u-c)+c,p=i.min}else if(p>=d&&d<i.min){if(p<i.min)continue;u=(i.min-p)/(d-p)*(u-c)+c,d=i.min}if(p>=d&&p>i.max){if(d>i.max)continue;c=(i.max-p)/(d-p)*(u-c)+c,p=i.max}else if(d>=p&&d>i.max){if(p>i.max)continue;u=(i.max-p)/(d-p)*(u-c)+c,d=i.max}(p!=r||c!=l)&&ae.moveTo(i.p2c(p)+t,a.p2c(c)+n),r=d,l=u,ae.lineTo(i.p2c(d)+t,a.p2c(u)+n)}}ae.stroke()}ae.save(),ae.translate(le.left,le.top),ae.lineJoin="round";var n=e.lines.lineWidth,i=e.shadowSize;if(n>0&&i>0){ae.lineWidth=i,ae.strokeStyle="rgba(0,0,0,0.1)";var a=Math.PI/18;t(e.datapoints,Math.sin(a)*(n/2+i/2),Math.cos(a)*(n/2+i/2),e.xaxis,e.yaxis),ae.lineWidth=i/2,t(e.datapoints,Math.sin(a)*(n/2+i/4),Math.cos(a)*(n/2+i/4),e.xaxis,e.yaxis)}ae.lineWidth=n,ae.strokeStyle=e.color;var o=P(e.lines,e.color,0,pe);o&&(ae.fillStyle=o,function(e,t,n){for(var i=e.points,a=e.pointsize,o=Math.min(Math.max(0,n.min),n.max),s=0,r=!1,l=1,h=0,p=0;!(a>0&&s>i.length+a);){s+=a;var c=i[s-a],d=i[s-a+l],u=i[s],g=i[s+l];if(r){if(a>0&&null!=c&&null==u){p=s,a=-a,l=2;continue}if(0>a&&s==h+a){ae.fill(),r=!1,a=-a,l=1,s=h=p+a;continue}}if(null!=c&&null!=u){if(u>=c&&c<t.min){if(u<t.min)continue;d=(t.min-c)/(u-c)*(g-d)+d,c=t.min}else if(c>=u&&u<t.min){if(c<t.min)continue;g=(t.min-c)/(u-c)*(g-d)+d,u=t.min}if(c>=u&&c>t.max){if(u>t.max)continue;d=(t.max-c)/(u-c)*(g-d)+d,c=t.max}else if(u>=c&&u>t.max){if(c>t.max)continue;g=(t.max-c)/(u-c)*(g-d)+d,u=t.max}if(r||(ae.beginPath(),ae.moveTo(t.p2c(c),n.p2c(o)),r=!0),d>=n.max&&g>=n.max)ae.lineTo(t.p2c(c),n.p2c(n.max)),ae.lineTo(t.p2c(u),n.p2c(n.max));else if(d<=n.min&&g<=n.min)ae.lineTo(t.p2c(c),n.p2c(n.min)),ae.lineTo(t.p2c(u),n.p2c(n.min));else{var f=c,m=u;g>=d&&d<n.min&&g>=n.min?(c=(n.min-d)/(g-d)*(u-c)+c,d=n.min):d>=g&&g<n.min&&d>=n.min&&(u=(n.min-d)/(g-d)*(u-c)+c,g=n.min),d>=g&&d>n.max&&g<=n.max?(c=(n.max-d)/(g-d)*(u-c)+c,d=n.max):g>=d&&g>n.max&&d<=n.max&&(u=(n.max-d)/(g-d)*(u-c)+c,g=n.max),c!=f&&ae.lineTo(t.p2c(f),n.p2c(d)),ae.lineTo(t.p2c(c),n.p2c(d)),ae.lineTo(t.p2c(u),n.p2c(g)),u!=m&&(ae.lineTo(t.p2c(u),n.p2c(g)),ae.lineTo(t.p2c(m),n.p2c(g)))}}}}(e.datapoints,e.xaxis,e.yaxis)),n>0&&t(e.datapoints,0,0,e.xaxis,e.yaxis),ae.restore()}function H(e){function t(e,t,n,i,a,o,s,r){for(var l=e.points,h=e.pointsize,p=0;p<l.length;p+=h){var c=l[p],d=l[p+1];null==c||c<o.min||c>o.max||d<s.min||d>s.max||(ae.beginPath(),c=o.p2c(c),d=s.p2c(d)+i,"circle"==r?ae.arc(c,d,t,0,a?Math.PI:2*Math.PI,!1):r(ae,c,d,t,a),ae.closePath(),n&&(ae.fillStyle=n,ae.fill()),ae.stroke())}}ae.save(),ae.translate(le.left,le.top);var n=e.points.lineWidth,i=e.shadowSize,a=e.points.radius,o=e.points.symbol;if(0==n&&(n=1e-4),n>0&&i>0){var s=i/2;ae.lineWidth=s,ae.strokeStyle="rgba(0,0,0,0.1)",t(e.datapoints,a,null,s+s/2,!0,e.xaxis,e.yaxis,o),ae.strokeStyle="rgba(0,0,0,0.2)",t(e.datapoints,a,null,s/2,!0,e.xaxis,e.yaxis,o)}ae.lineWidth=n,ae.strokeStyle=e.color,t(e.datapoints,a,P(e.points,e.color),0,!1,e.xaxis,e.yaxis,o),ae.restore()}function I(e,t,n,i,a,o,s,r,l,h,p){var c,d,u,g,f,m,v,b,x;h?(b=m=v=!0,f=!1,c=n,d=e,g=t+i,u=t+a,c>d&&(x=d,d=c,c=x,f=!0,m=!1)):(f=m=v=!0,b=!1,c=e+i,d=e+a,u=n,g=t,u>g&&(x=g,g=u,u=x,b=!0,v=!1)),d<s.min||c>s.max||g<r.min||u>r.max||(c<s.min&&(c=s.min,f=!1),d>s.max&&(d=s.max,m=!1),u<r.min&&(u=r.min,b=!1),g>r.max&&(g=r.max,v=!1),c=s.p2c(c),u=r.p2c(u),d=s.p2c(d),g=r.p2c(g),o&&(l.fillStyle=o(u,g),l.fillRect(c,g,d-c,u-g)),p>0&&(f||m||v||b)&&(l.beginPath(),l.moveTo(c,u),f?l.lineTo(c,g):l.moveTo(c,g),v?l.lineTo(d,g):l.moveTo(d,g),m?l.lineTo(d,u):l.moveTo(d,u),b?l.lineTo(c,u):l.moveTo(c,u),l.stroke()))}function L(e){ae.save(),ae.translate(le.left,le.top),ae.lineWidth=e.bars.lineWidth,ae.strokeStyle=e.color;var t;switch(e.bars.align){case"left":t=0;break;case"right":t=-e.bars.barWidth;break;default:t=-e.bars.barWidth/2}var n=e.bars.fill?function(t,n){return P(e.bars,e.color,t,n)}:null;(function(t,n,i,a,o,s){for(var r=t.points,l=t.pointsize,h=0;h<r.length;h+=l)null!=r[h]&&I(r[h],r[h+1],r[h+2],n,i,a,o,s,ae,e.bars.horizontal,e.bars.lineWidth)})(e.datapoints,t,t+e.bars.barWidth,n,e.xaxis,e.yaxis),ae.restore()}function P(t,n,i,a){var o=t.fill;if(!o)return null;if(t.fillColor)return J(t.fillColor,i,a,n);var s=e.color.parse(n);return s.a="number"==typeof o?o:.4,s.normalize(),s.toString()}function N(){if(null!=ee.legend.container?e(ee.legend.container).html(""):n.find(".legend").remove(),ee.legend.show){for(var t,i,a=[],o=[],s=!1,r=ee.legend.labelFormatter,l=0;l<Z.length;++l)t=Z[l],t.label&&(i=r?r(t.label,t):t.label)&&o.push({label:i,color:t.color});if(ee.legend.sorted)if(e.isFunction(ee.legend.sorted))o.sort(ee.legend.sorted);else if("reverse"==ee.legend.sorted)o.reverse();else{var h="descending"!=ee.legend.sorted;o.sort(function(e,t){return e.label==t.label?0:e.label<t.label!=h?1:-1})}for(var l=0;l<o.length;++l){var p=o[l];l%ee.legend.noColumns==0&&(s&&a.push("</tr>"),a.push("<tr>"),s=!0),a.push('<td class="legendColorBox"><div style="'+ee.legend.labelBoxBorderColor+'"><div style="border:2px solid '+p.color+';overflow:hidden"></div></div></td><td class="legendLabel"><span>'+p.label+"</span></td>")}if(s&&a.push("</tr>"),0!=a.length){var c='<table style="font-size:smaller;color:'+ee.grid.color+'">'+a.join("")+"</table>";if(null!=ee.legend.container)e(ee.legend.container).html(c);else{var d="",u=ee.legend.position,g=ee.legend.margin;null==g[0]&&(g=[g,g]),"n"==u.charAt(0)?d+="top:"+(g[1]+le.top)+"px;":"s"==u.charAt(0)&&(d+="bottom:"+(g[1]+le.bottom)+"px;"),"e"==u.charAt(1)?d+="right:"+(g[0]+le.right)+"px;":"w"==u.charAt(1)&&(d+="left:"+(g[0]+le.left)+"px;");var f=e('<div class="legend">'+c.replace('style="','style="position:absolute;'+d+";")+"</div>").appendTo(n);if(0!=ee.legend.backgroundOpacity){var m=ee.legend.backgroundColor;null==m&&(m=ee.grid.backgroundColor,m=m&&"string"==typeof m?e.color.parse(m):e.color.extract(f,"background-color"),m.a=1,m=m.toString());var v=f.children();e('<div style="position:absolute;width:'+v.width()+"px;height:"+v.height()+"px;"+d+"background-color:"+m+';"> </div>').prependTo(f).css("opacity",ee.legend.backgroundOpacity)}}}}}function z(e,t,n){var i,a,o,s=ee.grid.mouseActiveRadius,r=s*s+1,l=null;for(i=Z.length-1;i>=0;--i)if(n(Z[i])){var h=Z[i],p=h.xaxis,c=h.yaxis,d=h.datapoints.points,u=p.c2p(e),g=c.c2p(t),f=s/p.scale,m=s/c.scale;if(o=h.datapoints.pointsize,p.options.inverseTransform&&(f=Number.MAX_VALUE),c.options.inverseTransform&&(m=Number.MAX_VALUE),h.lines.show||h.points.show)for(a=0;a<d.length;a+=o){var v=d[a],b=d[a+1];if(null!=v&&!(v-u>f||-f>v-u||b-g>m||-m>b-g)){var x=Math.abs(p.p2c(v)-e),y=Math.abs(c.p2c(b)-t),w=x*x+y*y;r>w&&(r=w,l=[i,a/o])}}if(h.bars.show&&!l){var k,C;switch(h.bars.align){case"left":k=0;break;case"right":k=-h.bars.barWidth;break;default:k=-h.bars.barWidth/2}for(C=k+h.bars.barWidth,a=0;a<d.length;a+=o){var v=d[a],b=d[a+1],S=d[a+2];null!=v&&(Z[i].bars.horizontal?u<=Math.max(S,v)&&u>=Math.min(S,v)&&g>=b+k&&b+C>=g:u>=v+k&&v+C>=u&&g>=Math.min(S,b)&&g<=Math.max(S,b))&&(l=[i,a/o])}}}return l?(i=l[0],a=l[1],o=Z[i].datapoints.pointsize,{datapoint:Z[i].datapoints.points.slice(a*o,(a+1)*o),dataIndex:a,series:Z[i],seriesIndex:i}):null}function F(e){ee.grid.hoverable&&$("plothover",e,function(e){return 0!=e.hoverable})}function B(e){ee.grid.hoverable&&$("plothover",e,function(){return!1})}function q(e){$("plotclick",e,function(e){return 0!=e.clickable})}function $(e,t,i){var a=ie.offset(),o=t.pageX-a.left-le.left,s=t.pageY-a.top-le.top,r=d({left:o,top:s});r.pageX=t.pageX,r.pageY=t.pageY;var l=z(o,s,i);if(l&&(l.pageX=parseInt(l.series.xaxis.p2c(l.datapoint[0])+a.left+le.left,10),l.pageY=parseInt(l.series.yaxis.p2c(l.datapoint[1])+a.top+le.top,10)),ee.grid.autoHighlight){for(var h=0;h<ue.length;++h){var p=ue[h];p.auto!=e||l&&p.series==l.series&&p.point[0]==l.datapoint[0]&&p.point[1]==l.datapoint[1]||G(p.series,p.point)}l&&X(l.series,l.datapoint,e)}n.trigger(e,[r,l])}function V(){var e=ee.interaction.redrawOverlayInterval;return-1==e?void Y():void(ge||(ge=setTimeout(Y,e)))}function Y(){ge=null,oe.save(),ne.clear(),oe.translate(le.left,le.top);var e,t;for(e=0;e<ue.length;++e)t=ue[e],t.series.bars.show?Q(t.series,t.point):K(t.series,t.point);oe.restore(),r(ce.drawOverlay,[oe])}function X(e,t,n){if("number"==typeof e&&(e=Z[e]),"number"==typeof t){var i=e.datapoints.pointsize;t=e.datapoints.points.slice(i*t,i*(t+1))}var a=U(e,t);-1==a?(ue.push({series:e,point:t,auto:n}),V()):n||(ue[a].auto=!1)}function G(e,t){if(null==e&&null==t)return ue=[],void V();if("number"==typeof e&&(e=Z[e]),"number"==typeof t){var n=e.datapoints.pointsize;t=e.datapoints.points.slice(n*t,n*(t+1))}var i=U(e,t);-1!=i&&(ue.splice(i,1),V())}function U(e,t){for(var n=0;n<ue.length;++n){var i=ue[n];if(i.series==e&&i.point[0]==t[0]&&i.point[1]==t[1])return n}return-1}function K(t,n){var i=n[0],a=n[1],o=t.xaxis,s=t.yaxis,r="string"==typeof t.highlightColor?t.highlightColor:e.color.parse(t.color).scale("a",.5).toString();if(!(i<o.min||i>o.max||a<s.min||a>s.max)){var l=t.points.radius+t.points.lineWidth/2;oe.lineWidth=l,oe.strokeStyle=r;var h=1.5*l;i=o.p2c(i),a=s.p2c(a),oe.beginPath(),"circle"==t.points.symbol?oe.arc(i,a,h,0,2*Math.PI,!1):t.points.symbol(oe,i,a,h,!1),oe.closePath(),oe.stroke()}}function Q(t,n){var i,a="string"==typeof t.highlightColor?t.highlightColor:e.color.parse(t.color).scale("a",.5).toString(),o=a;switch(t.bars.align){case"left":i=0;break;case"right":i=-t.bars.barWidth;break;default:i=-t.bars.barWidth/2}oe.lineWidth=t.bars.lineWidth,oe.strokeStyle=a,I(n[0],n[1],n[2]||0,i,i+t.bars.barWidth,function(){return o},t.xaxis,t.yaxis,oe,t.bars.horizontal,t.bars.lineWidth)}function J(t,n,i,a){if("string"==typeof t)return t;for(var o=ae.createLinearGradient(0,i,0,n),s=0,r=t.colors.length;r>s;++s){var l=t.colors[s];if("string"!=typeof l){var h=e.color.parse(a);null!=l.brightness&&(h=h.scale("rgb",l.brightness)),null!=l.opacity&&(h.a*=l.opacity),l=h.toString()}o.addColorStop(s/(r-1),l)}return o}var Z=[],ee={colors:e.flot_colors||["#931313","#638167","#65596B","#60747C","#B09B5B"],legend:{show:!0,noColumns:e.flot_noColumns||0,labelFormatter:null,labelBoxBorderColor:"",container:null,position:"ne",margin:e.flot_margin||[-5,-32],backgroundColor:e.flot_backgroundColor||"",backgroundOpacity:e.flot_backgroundOpacity||1,sorted:null},xaxis:{show:null,position:"bottom",mode:null,font:null,color:null,tickColor:null,transform:null,inverseTransform:null,min:null,max:null,autoscaleMargin:null,ticks:null,tickFormatter:null,labelWidth:null,labelHeight:null,reserveSpace:null,tickLength:null,alignTicksWithAxis:null,tickDecimals:null,tickSize:null,minTickSize:null},yaxis:{autoscaleMargin:.02,position:"left"},xaxes:[],yaxes:[],series:{points:{show:!1,radius:3,lineWidth:2,fill:!0,fillColor:"#ffffff",symbol:"circle"},lines:{lineWidth:2,fill:!1,fillColor:null,steps:!1},bars:{show:!1,lineWidth:e.flot_bars_lineWidth||1,barWidth:1,fill:!0,fillColor:e.flot_bars_fillColor||{colors:[{opacity:.7},{opacity:1}]},align:"left",horizontal:!1,zero:!0},shadowSize:e.flot_shadowSize||0,highlightColor:null},grid:{show:!0,aboveData:!1,color:e.flot_grid_color||"#545454",backgroundColor:null,borderColor:e.flot_grid_borderColor||"#efefef",tickColor:e.flot_grid_tickColor||"rgba(0,0,0,0.06)",margin:0,labelMargin:e.flot_grid_labelMargin||10,axisMargin:8,borderWidth:e.flot_grid_borderWidth||0,minBorderMargin:e.flot_grid_minBorderMargin||10,markings:null,markingsColor:"#f4f4f4",markingsLineWidth:2,clickable:!1,hoverable:!1,autoHighlight:!0,mouseActiveRadius:e.flot_grid_mouseActiveRadius||5},interaction:{redrawOverlayInterval:1e3/60},hooks:{}},te=null,ne=null,ie=null,ae=null,oe=null,se=[],re=[],le={left:0,right:0,top:0,bottom:0},he=0,pe=0,ce={processOptions:[],processRawData:[],processDatapoints:[],processOffset:[],drawBackground:[],drawSeries:[],draw:[],bindEvents:[],drawOverlay:[],shutdown:[]},de=this;de.setData=l,de.setupGrid=C,de.draw=T,de.getPlaceholder=function(){return n},de.getCanvas=function(){return te.element},de.getPlotOffset=function(){return le},de.width=function(){return he},de.height=function(){return pe},de.offset=function(){var e=ie.offset();return e.left+=le.left,e.top+=le.top,e},de.getData=function(){return Z},de.getAxes=function(){var t={};return e.each(se.concat(re),function(e,n){n&&(t[n.direction+(1!=n.n?n.n:"")+"axis"]=n)}),t},de.getXAxes=function(){return se},de.getYAxes=function(){return re},de.c2p=d,de.p2c=u,de.getOptions=function(){return ee},de.highlight=X,de.unhighlight=G,de.triggerRedrawOverlay=V,de.pointOffset=function(e){return{left:parseInt(se[p(e,"x")-1].p2c(+e.x)+le.left,10),top:parseInt(re[p(e,"y")-1].p2c(+e.y)+le.top,10)}},de.shutdown=v,de.destroy=function(){v(),n.removeData("plot").empty(),Z=[],ee=null,te=null,ne=null,ie=null,ae=null,oe=null,se=[],re=[],ce=null,ue=[],de=null},de.resize=function(){var e=n.width(),t=n.height();te.resize(e,t),ne.resize(e,t)},de.hooks=ce,function(){for(var n={Canvas:t},i=0;i<s.length;++i){var a=s[i];a.init(de,n),a.options&&e.extend(!0,ee,a.options)}}(),function(t){e.extend(!0,ee,t),t&&t.colors&&(ee.colors=t.colors),null==ee.xaxis.color&&(ee.xaxis.color=e.color.parse(ee.grid.color).scale("a",.22).toString()),null==ee.yaxis.color&&(ee.yaxis.color=e.color.parse(ee.grid.color).scale("a",.22).toString()),null==ee.xaxis.tickColor&&(ee.xaxis.tickColor=ee.grid.tickColor||ee.xaxis.color),null==ee.yaxis.tickColor&&(ee.yaxis.tickColor=ee.grid.tickColor||ee.yaxis.color),null==ee.grid.borderColor&&(ee.grid.borderColor=ee.grid.color),null==ee.grid.tickColor&&(ee.grid.tickColor=e.color.parse(ee.grid.color).scale("a",.22).toString());var i,a,o,s=n.css("font-size"),l=s?+s.replace("px",""):13,h={style:n.css("font-style"),size:Math.round(.8*l),variant:n.css("font-variant"),weight:n.css("font-weight"),family:n.css("font-family")};for(o=ee.xaxes.length||1,i=0;o>i;++i)a=ee.xaxes[i],a&&!a.tickColor&&(a.tickColor=a.color),a=e.extend(!0,{},ee.xaxis,a),ee.xaxes[i]=a,a.font&&(a.font=e.extend({},h,a.font),a.font.color||(a.font.color=a.color),a.font.lineHeight||(a.font.lineHeight=Math.round(1.15*a.font.size)));for(o=ee.yaxes.length||1,i=0;o>i;++i)a=ee.yaxes[i],a&&!a.tickColor&&(a.tickColor=a.color),a=e.extend(!0,{},ee.yaxis,a),ee.yaxes[i]=a,a.font&&(a.font=e.extend({},h,a.font),a.font.color||(a.font.color=a.color),a.font.lineHeight||(a.font.lineHeight=Math.round(1.15*a.font.size)));for(ee.xaxis.noTicks&&null==ee.xaxis.ticks&&(ee.xaxis.ticks=ee.xaxis.noTicks),ee.yaxis.noTicks&&null==ee.yaxis.ticks&&(ee.yaxis.ticks=ee.yaxis.noTicks),ee.x2axis&&(ee.xaxes[1]=e.extend(!0,{},ee.xaxis,ee.x2axis),ee.xaxes[1].position="top",null==ee.x2axis.min&&(ee.xaxes[1].min=null),null==ee.x2axis.max&&(ee.xaxes[1].max=null)),ee.y2axis&&(ee.yaxes[1]=e.extend(!0,{},ee.yaxis,ee.y2axis),ee.yaxes[1].position="right",null==ee.y2axis.min&&(ee.yaxes[1].min=null),null==ee.y2axis.max&&(ee.yaxes[1].max=null)),ee.grid.coloredAreas&&(ee.grid.markings=ee.grid.coloredAreas),ee.grid.coloredAreasColor&&(ee.grid.markingsColor=ee.grid.coloredAreasColor),ee.lines&&e.extend(!0,ee.series.lines,ee.lines),ee.points&&e.extend(!0,ee.series.points,ee.points),ee.bars&&e.extend(!0,ee.series.bars,ee.bars),null!=ee.shadowSize&&(ee.series.shadowSize=ee.shadowSize),null!=ee.highlightColor&&(ee.series.highlightColor=ee.highlightColor),i=0;i<ee.xaxes.length;++i)g(se,i+1).options=ee.xaxes[i];for(i=0;i<ee.yaxes.length;++i)g(re,i+1).options=ee.yaxes[i];for(var p in ce)ee.hooks[p]&&ee.hooks[p].length&&(ce[p]=ce[p].concat(ee.hooks[p]));r(ce.processOptions,[ee])}(o),function(){n.css("padding",0).children().filter(function(){return!e(this).hasClass("flot-overlay")&&!e(this).hasClass("flot-base")}).remove(),"static"==n.css("position")&&n.css("position","relative"),te=new t("flot-base",n),ne=new t("flot-overlay",n),ae=te.context,oe=ne.context,ie=e(ne.element).unbind();var i=n.data("plot");i&&(i.shutdown(),ne.clear()),n.data("plot",de)}(),l(a),C(),T(),function(){ee.grid.hoverable&&(ie.mousemove(F),ie.bind("mouseleave",B)),ee.grid.clickable&&ie.click(q),r(ce.bindEvents,[ie])}();var ue=[],ge=null}function i(e,t){return t*Math.floor(e/t)}var a=Object.prototype.hasOwnProperty;e.fn.detach||(e.fn.detach=function(){return this.each(function(){this.parentNode&&this.parentNode.removeChild(this)})}),t.prototype.resize=function(e,t){if(0>=e||0>=t)throw new Error("Invalid dimensions for plot, width = "+e+", height = "+t);var n=this.element,i=this.context,a=this.pixelRatio;this.width!=e&&(n.width=e*a,n.style.width=e+"px",this.width=e),this.height!=t&&(n.height=t*a,n.style.height=t+"px",this.height=t),i.restore(),i.save(),i.scale(a,a)},t.prototype.clear=function(){this.context.clearRect(0,0,this.width,this.height)},t.prototype.render=function(){var e=this._textCache;for(var t in e)if(a.call(e,t)){var n=this.getTextLayer(t),i=e[t];n.hide();for(var o in i)if(a.call(i,o)){var s=i[o];for(var r in s)if(a.call(s,r)){for(var l,h=s[r].positions,p=0;l=h[p];p++)l.active?l.rendered||(n.append(l.element),l.rendered=!0):(h.splice(p--,1),l.rendered&&l.element.detach());0==h.length&&delete s[r]}}n.show()}},t.prototype.getTextLayer=function(t){var n=this.text[t];return null==n&&(null==this.textContainer&&(this.textContainer=e("<div class='flot-text'></div>").css({position:"absolute",top:0,left:0,bottom:0,right:0,"font-size":"smaller",color:"#545454"}).insertAfter(this.element)),n=this.text[t]=e("<div></div>").addClass(t).css({position:"absolute",top:0,left:0,bottom:0,right:0}).appendTo(this.textContainer)),n},t.prototype.getTextInfo=function(t,n,i,a,o){var s,r,l,h;if(n=""+n,s="object"==typeof i?i.style+" "+i.variant+" "+i.weight+" "+i.size+"px/"+i.lineHeight+"px "+i.family:i,r=this._textCache[t],null==r&&(r=this._textCache[t]={}),l=r[s],null==l&&(l=r[s]={}),null==(h=l[n])){var p=e("<div></div>").html(n).css({position:"absolute","max-width":o,top:-9999}).appendTo(this.getTextLayer(t));"object"==typeof i?p.css({font:s,color:i.color}):"string"==typeof i&&p.addClass(i),h=l[n]={width:p.outerWidth(!0),height:p.outerHeight(!0),element:p,positions:[]},p.detach()}return h},t.prototype.addText=function(e,t,n,i,a,o,s,r,l){var h=this.getTextInfo(e,i,a,o,s),p=h.positions;"center"==r?t-=h.width/2:"right"==r&&(t-=h.width),"middle"==l?n-=h.height/2:"bottom"==l&&(n-=h.height);for(var c,d=0;c=p[d];d++)if(c.x==t&&c.y==n)return void(c.active=!0);c={active:!0,rendered:!1,element:p.length?h.element.clone():h.element,x:t,y:n},p.push(c),c.element.css({top:Math.round(n),left:Math.round(t),"text-align":r})},t.prototype.removeText=function(e,t,n,i,o,s){if(null==i){var r=this._textCache[e];if(null!=r)for(var l in r)if(a.call(r,l)){var h=r[l];for(var p in h)if(a.call(h,p))for(var c,d=h[p].positions,u=0;c=d[u];u++)c.active=!1}}else for(var c,d=this.getTextInfo(e,i,o,s).positions,u=0;c=d[u];u++)c.x==t&&c.y==n&&(c.active=!1)},e.plot=function(t,i,a){return new n(e(t),i,a,e.plot.plugins)},e.plot.version="0.8.3",e.plot.plugins=[],e.fn.plot=function(t,n){return this.each(function(){e.plot(this,t,n)})}}(jQuery),function(e,t,n){"$:nomunge";function i(n){!0===r&&(r=n||1);for(var l=o.length-1;l>=0;l--){var d=e(o[l]);if(d[0]==t||d.is(":visible")){var u=d.width(),g=d.height(),f=d.data(p);!f||u===f.w&&g===f.h||(d.trigger(h,[f.w=u,f.h=g]),r=n||!0)}else f=d.data(p),f.w=0,f.h=0}null!==a&&(r&&(null==n||1e3>n-r)?a=t.requestAnimationFrame(i):(a=setTimeout(i,s[c]),r=!1))}var a,o=[],s=e.resize=e.extend(e.resize,{}),r=!1,l="setTimeout",h="resize",p=h+"-special-event",c="pendingDelay",d="activeDelay",u="throttleWindow";s[c]=200,s[d]=20,s[u]=!0,e.event.special[h]={setup:function(){if(!s[u]&&this[l])return!1;var t=e(this);o.push(this),t.data(p,{w:t.width(),h:t.height()}),1===o.length&&(a=n,i())},teardown:function(){if(!s[u]&&this[l])return!1;for(var t=e(this),n=o.length-1;n>=0;n--)if(o[n]==this){o.splice(n,1);break}t.removeData(p),o.length||(r?cancelAnimationFrame(a):clearTimeout(a),a=null)},add:function(t){function i(t,i,o){var s=e(this),r=s.data(p)||{};r.w=i!==n?i:s.width(),r.h=o!==n?o:s.height(),a.apply(this,arguments)}if(!s[u]&&this[l])return!1;var a;return e.isFunction(t)?(a=t,i):(a=t.handler,void(t.handler=i))}},t.requestAnimationFrame||(t.requestAnimationFrame=function(){return t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.oRequestAnimationFrame||t.msRequestAnimationFrame||function(e){return t.setTimeout(function(){e((new Date).getTime())},s[d])}}()),t.cancelAnimationFrame||(t.cancelAnimationFrame=function(){return t.webkitCancelRequestAnimationFrame||t.mozCancelRequestAnimationFrame||t.oCancelRequestAnimationFrame||t.msCancelRequestAnimationFrame||clearTimeout}())}(jQuery,this),function(e){function t(e){function t(){var t=e.getPlaceholder();0!=t.width()&&0!=t.height()&&(e.resize(),e.setupGrid(),e.draw())}function n(e){e.getPlaceholder().resize(t)}function i(e){e.getPlaceholder().unbind("resize",t)}e.hooks.bindEvents.push(n),e.hooks.shutdown.push(i)}var n={};e.plot.plugins.push({init:t,options:n,name:"resize",version:"1.0"})}(jQuery),function(e){function t(e){function t(e,t){var n;for(n=0;n<t.length;++n)if(t[n].id===e.fillBetween)return t[n];return"number"==typeof e.fillBetween?e.fillBetween<0||e.fillBetween>=t.length?null:t[e.fillBetween]:null}function n(e,n,i){if(null!=n.fillBetween){var a=t(n,e.getData());if(a){for(var o,s,r,l,h,p,c,d,u=i.pointsize,g=i.points,f=a.datapoints.pointsize,m=a.datapoints.points,v=[],b=n.lines.show,x=u>2&&i.format[2].y,y=b&&n.lines.steps,w=!0,k=0,C=0;!(k>=g.length);){if(c=v.length,null==g[k]){for(d=0;u>d;++d)v.push(g[k+d]);k+=u}else if(C>=m.length){if(!b)for(d=0;u>d;++d)v.push(g[k+d]);k+=u}else if(null==m[C]){for(d=0;u>d;++d)v.push(null);w=!0,C+=f}else{if(o=g[k],s=g[k+1],l=m[C],h=m[C+1],p=0,o===l){for(d=0;u>d;++d)v.push(g[k+d]);p=h,k+=u,C+=f}else if(o>l){if(b&&k>0&&null!=g[k-u]){for(r=s+(g[k-u+1]-s)*(l-o)/(g[k-u]-o),v.push(l),v.push(r),d=2;u>d;++d)v.push(g[k+d]);p=h}C+=f}else{if(w&&b){k+=u;continue}for(d=0;u>d;++d)v.push(g[k+d]);b&&C>0&&null!=m[C-f]&&(p=h+(m[C-f+1]-h)*(o-l)/(m[C-f]-l)),k+=u}w=!1,c!==v.length&&x&&(v[c+2]=p)}if(y&&c!==v.length&&c>0&&null!==v[c]&&v[c]!==v[c-u]&&v[c+1]!==v[c-u+1]){for(d=0;u>d;++d)v[c+u+d]=v[c+d];v[c+1]=v[c-u+1]}}i.points=v}}}e.hooks.processDatapoints.push(n)}var n={series:{fillBetween:null}};e.plot.plugins.push({init:t,options:n,name:"fillbetween",version:"1.0"})}(jQuery),function(e){function t(e){function t(e,t,a){var s=null;if(n(t)&&(h(t),i(e),o(e),l(t),m>=2)){var r=p(t),v=0,x=c();v=d(r)?-1*u(f,r-1,Math.floor(m/2)-1)-x:u(f,Math.ceil(m/2),r-2)+x+2*b,s=g(a,t,v),a.points=s}return s}function n(e){return null!=e.bars&&e.bars.show&&null!=e.bars.order}function i(e){var t=y?e.getPlaceholder().innerHeight():e.getPlaceholder().innerWidth(),n=y?a(e.getData(),1):a(e.getData(),0),i=n[1]-n[0];x=i/t}function a(e,t){for(var n=new Array,i=0;i<e.length;i++)n[0]=e[i].data[0][t],n[1]=e[i].data[e[i].data.length-1][t];return n}function o(e){f=s(e.getData()),m=f.length}function s(e){for(var t=new Array,n=0;n<e.length;n++)null!=e[n].bars.order&&e[n].bars.show&&t.push(e[n]);return t.sort(r)}function r(e,t){var n=e.bars.order,i=t.bars.order;return i>n?-1:n>i?1:0}function l(e){v=e.bars.lineWidth?e.bars.lineWidth:2,b=v*x}function h(e){e.bars.horizontal&&(y=!0)}function p(e){for(var t=0,n=0;n<f.length;++n)if(e==f[n]){t=n;break}return t+1}function c(){var e=0;return m%2!=0&&(e=f[Math.ceil(m/2)].bars.barWidth/2),e}function d(e){return e<=Math.ceil(m/2)}function u(e,t,n){for(var i=0,a=t;n>=a;a++)i+=e[a].bars.barWidth+2*b;return i}function g(e,t,n){for(var i=e.pointsize,a=e.points,o=0,s=y?1:0;s<a.length;s+=i)a[s]+=n,t.data[o][3]=a[s],o++;return a}var f,m,v,b,x=1,y=!1;e.hooks.processDatapoints.push(t)}var n={series:{bars:{order:null}}};e.plot.plugins.push({init:t,options:n,name:"orderBars",version:"0.2"})}(jQuery),function(e){function t(t){function a(t){C||(C=!0,v=t.getCanvas(),b=e(v).parent(),x=t.getOptions(),t.setData(o(t.getData())))}function o(t){for(var n=0,i=0,a=0,o=x.series.pie.combine.color,s=[],r=0;r<t.length;++r){var l=t[r].data;e.isArray(l)&&1==l.length&&(l=l[0]),e.isArray(l)?l[1]=!isNaN(parseFloat(l[1]))&&isFinite(l[1])?+l[1]:0:l=!isNaN(parseFloat(l))&&isFinite(l)?[1,+l]:[1,0],t[r].data=[l]}for(var r=0;r<t.length;++r)n+=t[r].data[0][1];for(var r=0;r<t.length;++r){var l=t[r].data[0][1];l/n<=x.series.pie.combine.threshold&&(i+=l,a++,o||(o=t[r].color))}for(var r=0;r<t.length;++r){var l=t[r].data[0][1];(2>a||l/n>x.series.pie.combine.threshold)&&s.push(e.extend(t[r],{data:[[1,l]],color:t[r].color,label:t[r].label,angle:l*Math.PI*2/n,percent:l/(n/100)}))}return a>1&&s.push({data:[[1,i]],color:o,label:x.series.pie.combine.label,angle:i*Math.PI*2/n,percent:i/(n/100)}),s}function s(t,a){function o(){S.clearRect(0,0,s,l),b.children().filter(".pieLabel, .pieLabelBackground").remove()}if(b){var s=t.getPlaceholder().width(),l=t.getPlaceholder().height(),h=b.children().filter(".legend").children().width()||0;S=a,C=!1,y=Math.min(s,l/x.series.pie.tilt)/2,k=l/2+x.series.pie.offset.top,w=s/2,"auto"==x.series.pie.offset.left?(x.legend.position.match("w")?w+=h/2:w-=h/2,y>w?w=y:w>s-y&&(w=s-y)):w+=x.series.pie.offset.left;var p=t.getData(),c=0;do{c>0&&(y*=i),c+=1,o(),x.series.pie.tilt<=.8&&function(){var e=x.series.pie.shadow.left,t=x.series.pie.shadow.top,n=x.series.pie.shadow.alpha,i=x.series.pie.radius>1?x.series.pie.radius:y*x.series.pie.radius;if(!(i>=s/2-e||i*x.series.pie.tilt>=l/2-t||10>=i)){S.save(),S.translate(e,t),S.globalAlpha=n,S.fillStyle="#000",S.translate(w,k),S.scale(1,x.series.pie.tilt);for(var a=1;10>=a;a++)S.beginPath(),S.arc(0,0,i,0,2*Math.PI,!1),S.fill(),i-=a;S.restore()}}()}while(!function(){function t(e,t,n){0>=e||isNaN(e)||(n?S.fillStyle=t:(S.strokeStyle=t,S.lineJoin="round"),S.beginPath(),Math.abs(e-2*Math.PI)>1e-9&&S.moveTo(0,0),S.arc(0,0,i,a,a+e/2,!1),S.arc(0,0,i,a+e/2,a+e,!1),S.closePath(),a+=e,n?S.fill():S.stroke())}var n=Math.PI*x.series.pie.startAngle,i=x.series.pie.radius>1?x.series.pie.radius:y*x.series.pie.radius;S.save(),S.translate(w,k),S.scale(1,x.series.pie.tilt),S.save();for(var a=n,o=0;o<p.length;++o)p[o].startAngle=a,t(p[o].angle,p[o].color,!0);if(S.restore(),x.series.pie.stroke.width>0){S.save(),S.lineWidth=x.series.pie.stroke.width,a=n;for(var o=0;o<p.length;++o)t(p[o].angle,x.series.pie.stroke.color,!1);S.restore()}return r(S),S.restore(),!x.series.pie.label.show||function(){for(var t=n,i=x.series.pie.label.radius>1?x.series.pie.label.radius:y*x.series.pie.label.radius,a=0;a<p.length;++a){if(p[a].percent>=100*x.series.pie.label.threshold&&!function(t,n,a){if(0==t.data[0][1])return!0;var o,r=x.legend.labelFormatter,h=x.series.pie.label.formatter;o=r?r(t.label,t):t.label,h&&(o=h(o,t));var p=(n+t.angle+n)/2,c=w+Math.round(Math.cos(p)*i),d=k+Math.round(Math.sin(p)*i)*x.series.pie.tilt,u="<span class='pieLabel' id='pieLabel"+a+"' style='position:absolute;top:"+d+"px;left:"+c+"px;'>"+o+"</span>";b.append(u);var g=b.children("#pieLabel"+a),f=d-g.height()/2,m=c-g.width()/2;if(g.css("top",f),g.css("left",m),0-f>0||0-m>0||l-(f+g.height())<0||s-(m+g.width())<0)return!1;if(0!=x.series.pie.label.background.opacity){var v=x.series.pie.label.background.color;null==v&&(v=t.color);var y="top:"+f+"px;left:"+m+"px;";e("<div class='pieLabelBackground' style='position:absolute;width:"+g.width()+"px;height:"+g.height()+"px;"+y+"background-color:"+v+";'></div>").css("opacity",x.series.pie.label.background.opacity).insertBefore(g)}return!0}(p[a],t,a))return!1;t+=p[a].angle}return!0}()}()&&n>c);c>=n&&(o(),b.prepend("<div class='error'>Could not draw pie with labels contained inside canvas</div>")),t.setSeries&&t.insertLegend&&(t.setSeries(p),t.insertLegend())}}function r(e){if(x.series.pie.innerRadius>0){e.save();var t=x.series.pie.innerRadius>1?x.series.pie.innerRadius:y*x.series.pie.innerRadius;e.globalCompositeOperation="destination-out",e.beginPath(),e.fillStyle=x.series.pie.stroke.color,e.arc(0,0,t,0,2*Math.PI,!1),e.fill(),e.closePath(),e.restore(),e.save(),e.beginPath(),e.strokeStyle=x.series.pie.stroke.color,e.arc(0,0,t,0,2*Math.PI,!1),e.stroke(),e.closePath(),e.restore()}}function l(e,t){for(var n=!1,i=-1,a=e.length,o=a-1;++i<a;o=i)(e[i][1]<=t[1]&&t[1]<e[o][1]||e[o][1]<=t[1]&&t[1]<e[i][1])&&t[0]<(e[o][0]-e[i][0])*(t[1]-e[i][1])/(e[o][1]-e[i][1])+e[i][0]&&(n=!n);return n}function h(e,n){for(var i,a,o=t.getData(),s=t.getOptions(),r=s.series.pie.radius>1?s.series.pie.radius:y*s.series.pie.radius,h=0;h<o.length;++h){var p=o[h];if(p.pie.show){if(S.save(),S.beginPath(),S.moveTo(0,0),S.arc(0,0,r,p.startAngle,p.startAngle+p.angle/2,!1),S.arc(0,0,r,p.startAngle+p.angle/2,p.startAngle+p.angle,!1),S.closePath(),i=e-w,a=n-k,S.isPointInPath){if(S.isPointInPath(e-w,n-k))return S.restore(),{datapoint:[p.percent,p.data],dataIndex:0,series:p,seriesIndex:h}}else{if(l([[0,0],[r*Math.cos(p.startAngle),r*Math.sin(p.startAngle)],[r*Math.cos(p.startAngle+p.angle/4),r*Math.sin(p.startAngle+p.angle/4)],[r*Math.cos(p.startAngle+p.angle/2),r*Math.sin(p.startAngle+p.angle/2)],[r*Math.cos(p.startAngle+p.angle/1.5),r*Math.sin(p.startAngle+p.angle/1.5)],[r*Math.cos(p.startAngle+p.angle),r*Math.sin(p.startAngle+p.angle)]],[i,a]))return S.restore(),{datapoint:[p.percent,p.data],dataIndex:0,series:p,seriesIndex:h}}S.restore()}}return null}function p(e){d("plothover",e)}function c(e){d("plotclick",e)}function d(e,n){var i=t.offset(),a=parseInt(n.pageX-i.left),o=parseInt(n.pageY-i.top),s=h(a,o);if(x.grid.autoHighlight)for(var r=0;r<M.length;++r){var l=M[r];l.auto!=e||s&&l.series==s.series||g(l.series)}s&&u(s.series,e);var p={pageX:n.pageX,pageY:n.pageY};b.trigger(e,[p,s])}function u(e,n){var i=f(e);-1==i?(M.push({series:e,auto:n}),t.triggerRedrawOverlay()):n||(M[i].auto=!1)}function g(e){null==e&&(M=[],t.triggerRedrawOverlay());var n=f(e);-1!=n&&(M.splice(n,1),t.triggerRedrawOverlay())}function f(e){for(var t=0;t<M.length;++t){if(M[t].series==e)return t}return-1}function m(e,t){var n=e.getOptions(),i=n.series.pie.radius>1?n.series.pie.radius:y*n.series.pie.radius;t.save(),t.translate(w,k),t.scale(1,n.series.pie.tilt);for(var a=0;a<M.length;++a)!function(e){e.angle<=0||isNaN(e.angle)||(t.fillStyle="rgba(255, 255, 255, "+n.series.pie.highlight.opacity+")",t.beginPath(),Math.abs(e.angle-2*Math.PI)>1e-9&&t.moveTo(0,0),t.arc(0,0,i,e.startAngle,e.startAngle+e.angle/2,!1),t.arc(0,0,i,e.startAngle+e.angle/2,e.startAngle+e.angle,!1),t.closePath(),t.fill())}(M[a].series);r(t),t.restore()}var v=null,b=null,x=null,y=null,w=null,k=null,C=!1,S=null,M=[];t.hooks.processOptions.push(function(e,t){t.series.pie.show&&(t.grid.show=!1,"auto"==t.series.pie.label.show&&(t.series.pie.label.show=!t.legend.show),"auto"==t.series.pie.radius&&(t.series.pie.radius=t.series.pie.label.show?.75:1),t.series.pie.tilt>1?t.series.pie.tilt=1:t.series.pie.tilt<0&&(t.series.pie.tilt=0))}),t.hooks.bindEvents.push(function(e,t){var n=e.getOptions();n.series.pie.show&&(n.grid.hoverable&&t.unbind("mousemove").mousemove(p),n.grid.clickable&&t.unbind("click").click(c))}),t.hooks.processDatapoints.push(function(e,t,n,i){e.getOptions().series.pie.show&&a(e)}),t.hooks.drawOverlay.push(function(e,t){e.getOptions().series.pie.show&&m(e,t)}),t.hooks.draw.push(function(e,t){e.getOptions().series.pie.show&&s(e,t)})}var n=10,i=.95,a={series:{pie:{show:!1,radius:"auto",innerRadius:0,startAngle:1.5,tilt:1,shadow:{left:5,top:15,alpha:.02},offset:{top:0,left:"auto"},stroke:{color:"#fff",width:1},label:{show:"auto",formatter:function(e,t){return"<div style='font-size:x-small;text-align:center;padding:2px;color:"+t.color+";'>"+e+"<br/>"+Math.round(t.percent)+"%</div>"},radius:1,background:{color:null,opacity:0},threshold:0},combine:{threshold:-1,color:null,label:"Other"},highlight:{opacity:.5}}}};e.plot.plugins.push({init:t,options:a,name:"pie",version:"1.1"})}(jQuery),function(e){function t(e,t){return t*Math.floor(e/t)}function n(e,t,n,i){if("function"==typeof e.strftime)return e.strftime(t);var a=function(e,t){return e=""+e,t=""+(null==t?"0":t),1==e.length?t+e:e},o=[],s=!1,r=e.getHours(),l=12>r;null==n&&(n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]),null==i&&(i=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]);var h;h=r>12?r-12:0==r?12:r;for(var p=0;p<t.length;++p){var c=t.charAt(p);if(s){switch(c){case"a":c=""+i[e.getDay()];break;case"b":c=""+n[e.getMonth()];break;case"d":c=a(e.getDate());break;case"e":c=a(e.getDate()," ");break;case"h":case"H":c=a(r);break;case"I":c=a(h);break;case"l":c=a(h," ");break;case"m":c=a(e.getMonth()+1);break;case"M":c=a(e.getMinutes());break;case"q":c=""+(Math.floor(e.getMonth()/3)+1);break;case"S":c=a(e.getSeconds());break;case"y":c=a(e.getFullYear()%100);break;case"Y":c=""+e.getFullYear();break;case"p":c=l?"am":"pm";break;case"P":c=l?"AM":"PM";break;case"w":c=""+e.getDay()}o.push(c),s=!1}else"%"==c?s=!0:o.push(c)}return o.join("")}function i(e){function t(e,t,n,i){e[t]=function(){return n[i].apply(n,arguments)}}var n={date:e};void 0!=e.strftime&&t(n,"strftime",e,"strftime"),t(n,"getTime",e,"getTime"),t(n,"setTime",e,"setTime");for(var i=["Date","Day","FullYear","Hours","Milliseconds","Minutes","Month","Seconds"],a=0;a<i.length;a++)t(n,"get"+i[a],e,"getUTC"+i[a]),t(n,"set"+i[a],e,"setUTC"+i[a]);return n}function a(e,t){if("browser"==t.timezone)return new Date(e);if(t.timezone&&"utc"!=t.timezone){if("undefined"!=typeof timezoneJS&&void 0!==timezoneJS.Date){var n=new timezoneJS.Date;return n.setTimezone(t.timezone),n.setTime(e),n}return i(new Date(e))}return i(new Date(e))}function o(i){i.hooks.processOptions.push(function(i){e.each(i.getAxes(),function(e,i){var o=i.options;"time"==o.mode&&(i.tickGenerator=function(e){var n=[],i=a(e.min,o),s=0,l=o.tickSize&&"quarter"===o.tickSize[1]||o.minTickSize&&"quarter"===o.minTickSize[1]?p:h;null!=o.minTickSize&&(s="number"==typeof o.tickSize?o.tickSize:o.minTickSize[0]*r[o.minTickSize[1]]);for(var c=0;c<l.length-1&&!(e.delta<(l[c][0]*r[l[c][1]]+l[c+1][0]*r[l[c+1][1]])/2&&l[c][0]*r[l[c][1]]>=s);++c);var d=l[c][0],u=l[c][1];if("year"==u){if(null!=o.minTickSize&&"year"==o.minTickSize[1])d=Math.floor(o.minTickSize[0]);else{var g=Math.pow(10,Math.floor(Math.log(e.delta/r.year)/Math.LN10)),f=e.delta/r.year/g;d=1.5>f?1:3>f?2:7.5>f?5:10,d*=g}1>d&&(d=1)}e.tickSize=o.tickSize||[d,u];var m=e.tickSize[0];u=e.tickSize[1];var v=m*r[u];"second"==u?i.setSeconds(t(i.getSeconds(),m)):"minute"==u?i.setMinutes(t(i.getMinutes(),m)):"hour"==u?i.setHours(t(i.getHours(),m)):"month"==u?i.setMonth(t(i.getMonth(),m)):"quarter"==u?i.setMonth(3*t(i.getMonth()/3,m)):"year"==u&&i.setFullYear(t(i.getFullYear(),m)),i.setMilliseconds(0),v>=r.minute&&i.setSeconds(0),v>=r.hour&&i.setMinutes(0),v>=r.day&&i.setHours(0),v>=4*r.day&&i.setDate(1),v>=2*r.month&&i.setMonth(t(i.getMonth(),3)),v>=2*r.quarter&&i.setMonth(t(i.getMonth(),6)),v>=r.year&&i.setMonth(0);var b,x=0,y=Number.NaN;do{if(b=y,y=i.getTime(),n.push(y),"month"==u||"quarter"==u)if(1>m){i.setDate(1);var w=i.getTime();i.setMonth(i.getMonth()+("quarter"==u?3:1));var k=i.getTime();i.setTime(y+x*r.hour+(k-w)*m),x=i.getHours(),i.setHours(0)}else i.setMonth(i.getMonth()+m*("quarter"==u?3:1));else"year"==u?i.setFullYear(i.getFullYear()+m):i.setTime(y+v)}while(y<e.max&&y!=b);return n},i.tickFormatter=function(e,t){var i=a(e,t.options);if(null!=o.timeformat)return n(i,o.timeformat,o.monthNames,o.dayNames);var s,l=t.options.tickSize&&"quarter"==t.options.tickSize[1]||t.options.minTickSize&&"quarter"==t.options.minTickSize[1],h=t.tickSize[0]*r[t.tickSize[1]],p=t.max-t.min,c=o.twelveHourClock?" %p":"",d=o.twelveHourClock?"%I":"%H";return s=h<r.minute?d+":%M:%S"+c:h<r.day?p<2*r.day?d+":%M"+c:"%b %d "+d+":%M"+c:h<r.month?"%b %d":l&&h<r.quarter||!l&&h<r.year?p<r.year?"%b":"%b %Y":l&&h<r.year?p<r.year?"Q%q":"Q%q %Y":"%Y",n(i,s,o.monthNames,o.dayNames)})})})}var s={xaxis:{timezone:null,timeformat:null,twelveHourClock:!1,monthNames:null}},r={second:1e3,minute:6e4,hour:36e5,day:864e5,month:2592e6,quarter:7776e6,year:525949.2*60*1e3},l=[[1,"second"],[2,"second"],[5,"second"],[10,"second"],[30,"second"],[1,"minute"],[2,"minute"],[5,"minute"],[10,"minute"],[30,"minute"],[1,"hour"],[2,"hour"],[4,"hour"],[8,"hour"],[12,"hour"],[1,"day"],[2,"day"],[3,"day"],[.25,"month"],[.5,"month"],[1,"month"],[2,"month"]],h=l.concat([[3,"month"],[6,"month"],[1,"year"]]),p=l.concat([[1,"quarter"],[2,"quarter"],[1,"year"]]);e.plot.plugins.push({init:o,options:s,name:"time",version:"1.0"}),e.plot.formatDate=n,e.plot.dateGenerator=a}(jQuery),function(e){var t={tooltip:!1,tooltipOpts:{content:"%s | X: %x | Y: %y.2",dateFormat:"%y-%0m-%0d",shifts:{x:10,y:20},defaultTheme:!0}},n=function(t){var n={x:0,y:0},i=t.getOptions(),a=function(e){n.x=e.x,n.y=e.y},o=function(e){var t={x:0,y:0};t.x=e.pageX,t.y=e.pageY,a(t)},s=function(t){var n=new Date(t);return e.plot.formatDate(n,i.tooltipOpts.dateFormat)};t.hooks.bindEvents.push(function(t,a){var l,h=i.tooltipOpts,p=t.getPlaceholder();!1!==i.tooltip&&(e("#flotTip").length>0?l=e("#flotTip"):(l=e("<div />").attr("id","flotTip"),l.appendTo("body").hide().css({position:"absolute"}),h.defaultTheme&&l.css({background:"#fff","z-index":"100",padding:"0.4em 0.6em","border-radius":"0.5em","font-size":"0.8em",border:"1px solid #111"})),e(p).bind("plothover",function(e,t,a){if(a){var o;o="time"===i.xaxis.mode||"time"===i.xaxes[0].mode?r(h.content,a,s):r(h.content,a),l.html(o).css({left:n.x+h.shifts.x,top:n.y+h.shifts.y}).show()}else l.hide().html("")}),a.mousemove(o))});var r=function(e,t,n){var i=/%p\.{0,1}(\d{0,})/,a=/%s/,o=/%x\.{0,1}(\d{0,})/,s=/%y\.{0,1}(\d{0,})/;return void 0!==t.series.percent&&(e=l(i,e,t.series.percent)),void 0!==t.series.label&&(e=e.replace(a,t.series.label)),"function"==typeof n?e=e.replace(o,n(t.series.data[t.dataIndex][0])):"number"==typeof t.series.data[t.dataIndex][0]&&(e=l(o,e,t.series.data[t.dataIndex][0])),"number"==typeof t.series.data[t.dataIndex][1]&&(e=l(s,e,t.series.data[t.dataIndex][1])),e},l=function(e,t,n){var i;return"null"!==t.match(e)&&(""!==RegExp.$1&&(i=RegExp.$1,n=n.toFixed(i)),t=t.replace(e,n)),t}};e.plot.plugins.push({init:n,options:t,name:"tooltip",version:"0.4.4"})}(jQuery)}).call(window)}});